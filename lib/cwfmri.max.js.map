{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 2b57cdf60524e68a9fd0","webpack:///external {\"commonjs\":\"experiment-js\",\"commonjs2\":\"experiment-js\",\"amd\":\"experiment-js\",\"root\":\"experiment\"}","webpack:///external {\"commonjs\":\"experiment-babylon-js\",\"commonjs2\":\"experiment-babylon-js\",\"amd\":\"experiment-babylon-js\",\"root\":\"BABYLON\"}","webpack:///external {\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"lodash\",\"root\":\"_\"}","webpack:///./src/task/utilities/taskUtilities.js","webpack:///external {\"commonjs\":\"experiment-boxes\",\"commonjs2\":\"experiment-boxes\",\"amd\":\"experiment-boxes\",\"root\":\"experimentBoxes\"}","webpack:///./src/task/scenes/main/functions/globalFunctions.js","webpack:///./src/task/scenes/main/states/tutorial.js","webpack:///./src/task/startup/startup.js","webpack:///./builder.js","webpack:///./src/task/scenes/main/MainScene.js","webpack:///./src/task/scenes/main/states/active.js","webpack:///./src/task/scenes/main/states/end.js","webpack:///./src/task/scenes/main/states/pause.js","webpack:///./src/task/scenes/main/states/running.js","webpack:///./src/task/scenes/main/states/tryout.js","webpack:///external {\"commonjs\":\"experiment-mathjs\",\"commonjs2\":\"experiment-mathjs\",\"amd\":\"experiment-mathjs\",\"root\":\"math\"}","webpack:///external {\"commonjs\":\"jQuery\",\"commonjs2\":\"jQuery\",\"amd\":\"jQuery\",\"root\":\"jQuery\"}"],"names":["getAspectRatio","surfaceObject","constructor","Texture","getBaseSize","w","width","h","height","Error","getBaseGraphMatrices","graphMatrix1","graphMatrix2","baseMatrices","A","B","transpose","C","D","computeValidStateSpace","taskObject","options","Promise","resolve","reject","optionsBase","maxNumberOfCycles","stateSpace","extend","rules","parameters","rulesProportions","proportionThreshold","rulesData","i","length","push","rule","proportion","threshold","numberOfRows","numberOfTargets","linearRules","without","currentTarget","position","beginLineIndex","Math","floor","downIndex","upIndex","rightIndex","leftIndex","closestTargets","up","left","down","right","randomNumber","random","currentRuleData","clone","find","e","d","sample","nextPosition","sampleNewRule","lStateSpace","state","recursivelyExpandStateSpace","loopIndex","timeIndependantRules","newSpace","recurse","k","nextHiddenState","hiddenStateIndex","firstTargetHiddenState","findKey","p","secondTargetHiddenState","thirdTargetHiddenState","indexOf","concat","slice","transitionMatrixFromStateSpace","Array","transitionMatrix","zeros","subset","index","getCyclesFromTransitionMatrix","maxTransitions","_size","spaceSize","positionsInCycle","cycles","currentCyclePositions","startingPosition","currentPositionVector","currentPosition","flatten","_data","numberOfTransitions","multiply","currentPositionIndexInCycle","cycle","union","loopOnStateSpace","hiddenSpace","smallestSize","smallestCycleIndex","positionToChange","validStateSpaces","getTransitionMatrixFromBase","baseMatrix","mainTransitionProbability","noSelfTransition","matrix","size","map","value","getValidTransitionArray","transitionArray","toArray","lengths","uniqueLengths","uniqueValues","getRandomTransitionMatrix","stateProbabilities","outputType","getZeroOrderTransitionMatrix","dominantPosition","dominantProbability","numberOfStates","nonDominantProbability","round","rowValue","randomTransitionMatrix","positionToVector","numberOfPositions","Number","isInteger","vectorPosition","vectorToPosition","vector","forEach","sampleNextTransition","nextPositionProbabilities","count","sampleTransitions","startPosition","includeStart","transitions","j","sampledPosition","getDominantCellByRow","dominantArray","indicesOfMaxValue","indicesOf","max","console","warn","maxIndex","getDominantProbabilityByRow","matrixKlDivergence","qMatrix","pMatrix","flattenQDistribution","flattenPDistribution","klDivergence","kldivergence","getProportionArray","absolutes","sumRow","proportionArray","sum","getObservedArrays","sequence","observedTransitionArray","proportions","getObservedAndDistanceMatrix","observedArrays","observedMatrix","distanceMatrix","subtract","totalError","abs","smoothSequenceDistribution","errorThreshold","numberOfNewTransitions","resultObject","unevenPosition","rowArray","maxVariations","sortBy","positionInformations","newSequence","pickedUneven","smoothedPosition","allIndices","highTransitionIndices","filter","replacedIndex","addedTransitions","restSequence","restartAt","finishSequence","promiseSequenceFromTransitionMatrix","baseOptions","sequenceLength","maxLoop","positionVector","loop","bestSequence","bestError","promiseMultipleSequences","numberOfSequences","sequenceArray","then","sequences","promiseMultipleRandomSequences","dominantPositions","promiseSegmentsAndProbesByBlock","segmentSizes","observationSegmentRepetitionPerBlock","numberOfBlocks","positions","numberOfTimeAProbeIsRepeated","numberOfDominant","segmentSizeSequencesEvenlyDistributed","probeSequences","transitionTypes","blockArray","segmentPermutations","probeSequence","hasNeighbouringRepeat","segmentEvenlyPermutated","leftSegmentPermutations","pop","indices","range","transitionType","dominantCount","r","splice","segmentSizeSequences","block","numberOfProbePerBlock","numberOfObservationPerBlock","getFullSequenceObjectForRandomBlackoutBlock","observePredictionPerBlock","blockType","segmentLength","trialTypes","o","oP","pBP","blackout","segAPermutations","segBPermutations","segmentSequence","v","blockSize","blackoutIndices","integrate","addPostBlackout","predictionIndices","fullSequence","fullBlockType","fullBlock","fullTrial","fullTrialType","trial","trialType","promiseFullSequenceForIntermitentPrediction","sequenceALength","sequenceBLength","protectFirstBlock","sequenceA","sequenceB","result","currentBlock","currentTrial","segAIndex","indicesBlackout","segmentsA","segmentsB","lenghtBlockA","blockLength","lenghtSegmentB","tempBlock","first","shift","addedSegmentLenght","addedSegment","addTrials","addedTrialType","addedBlock","nblocks","blockTrialType","indicesPrediction","promiseFullSequenceForOneLevel","insertRandomBlocksAt","randomBlocksDominantStates","randomBlocksDominantStateProbability","randomBlocksNonDominantProbability","randomBlocksDominantState","randomBlocksNonDominantStates","dominantMatrix","dominantTransition","nonDominantTransitions","segments","numberOfRandomBlocks","randomSequences","smoothedSequences","observedData","errors","kls","sequenceObjects","error","blocksNumber","fullSequenceBlock","fullSequenceBlockType","completeSequence","trials","smoothedSequencesIndex","randomSequencesIndex","blockIndices","probeTransitions","nonDominantIndices","currentDominantTransitions","currentNonDominantTransitions","segmentSizesOfBlock","probeSequenceRemaining","currentObservationIndex","lastTrial","segmentIndex","endIndex","segment","probePosition","feedback","N","_","getFullSequenceObjectForClassicLevels","t","insertSequenceObjectAtBlock","baseObject","insertedObject","atBlocks","newObject","offset","baseCurrentBlock","insertedBlock","promiseBestSequencesForAllBlocksAndSave","getDensity","elements","nsteps","windowSize","some","isNaN","min","stepSize","elementsInWindow","windowPosition","density","points","centered","x","y","windows","numberOfElements","chartOptions","type","data","datasets","label","scales","xAxes","randomColor","opacity","computeDurationEstimate","parametersBase","minNumberOfObservationsPerLearning","maxNumberOfObservationsPerLearning","observationDuration","interObservationDuration","minTimeToPredict","maxTimeToPredict","feedbackDuration","minISIAfterLearning","maxISIAfterLearning","minISIAfterFeedback","maxISIAfterFeedback","rabbitAutoTransition","rabbitDominantProbability","observationSegmentSizes","feedbackType","numberOfObservationPerLevel","oneObservationDuration","observationsDurationPerBlock","numberOfPredictionEventsPerBlock","timeDurationMatrix","factorMatrix","predictionDurationMatrix","sumPredictionDurationVector","predictionsDurationPerBlock","observationDurationMatrix","durationPerBlock","add","totalDuration","mean","softMaxByRow","model","temperature","exp","divide","prediction","modelProportions","algorithm","learnerPredict","learnerType","learningRate","trueModel","predictions","optimalPredictions","sameAsOptimal","sameAsOptimalProbability","sameAsSequence","sameAsSequenceProbability","predictionPosition","optimalPrediction","targetPosition","dominant","positionIndex","returnObject","finalModel","updateWithRule","sampleExponential","jitter","pWindow","lambda","log","redrawAssets","rabbitFaceTexture","cloneAssetIntoScene","R","get","rabbitFace","scene","wolfFaceTexture","wolfFace","crossSheet","hasAlpha","elements2D","stateManager","canvasOptions","id","parent","initialCanvas","roundRadius","borderThickness","fill","Vector2","renderSize","zOrder","Rectangle2D","dispose","lastResize","timeInMs","crossSprite","cross_predict","crossOpacity","loaderOpacity","loaderValue","wolfOpacity","rabbitOpacity","agentType","tiles","canvas","cross","spriteFrame","levelVisible","wolfFaceSprite","rabbitFaceSprite","loader","levelV","keysInfobox","withKeys","call","Sprite2D","marginAlignment","spriteSize","Size","spriteLocation","border","Canvas2D","GetSolidColorBrush","Color4","margin","leftPixels","rightPixels","topPixels","bottomPixels","minSize","origin","Zero","agent_scale","agent","setGlobal","tile","clearTiles","ntile","tileOpacity","addButton","text","clickEventData","fontName","baseOpacity","hoverOpacity","fontSignedDistanceField","padding","buttonOptions","children","Text2D","marginVAlignment","marginHAlignment","buttonRect","pointerEventObservable","PrimitivePointerInfo","PointerOver","PointerOut","happenedAt","button","addEvent","PointerUp","disposeOfButtons","levelButtons","getTileSize","greaterLength","tile_scale","setMargins","prim","drawTiles","hightlight","cross_opacity","keysInfoboxText","normalSize","tileMargins","fontSuperSample","normalColor","normalTile","getTileMargins","tileSize","tile_offset","margins","getTilePositions","center","highlightPosition","promise","drawPredictionTiles","setAgent","currentMargin","getAgentPositionOnTile","scaledAgentSize","scaleInPlace","scale","tilePositions","newPosition","getAgentMarginsOnTile","offsetH","offsetW","newMargins","moveAgentToTile","set","animateAgentToTile","deferred","animation","Animation","ANIMATIONTYPE_VECTOR2","ANIMATIONLOOPMODE_CONSTANT","keys","frame","setKeys","end","AnimationEvent","animations","beginAnimation","setAgentOpacity","setBlackScreen","on","getGlobal","has","blackScreen","hideAll","showAll","checkIdleAndConnection","returnToState","dataManager","connection","currentStateKey","query","delay","lastInteraction","delayMin","goToState","states_end","catch","states_idle","onNext","events_unfrozen","freeze","modal","title","lostConnectionTitle","content","lostConnectionContent","pageOrderTutorialOne","pageOrderTutorialFMRI","awakeTutorial","currentTutorial","pageOrder","showIntro","events_showModal","page","level","shouldPause","showModal","tutorials","hasOwnProperty","tutorial","event","events_tutorialNext","en","currentModal","modalBox","buttonText","tutorialUnfrozen","Object","show","showNextPage","currentPage","currentIndex","showEvent","states_tryout","window","calibrator","defferedDomLoaded","document","addEventListener","scripts","getElementsByTagName","assetsFolderFullpath","src","delimiterIndices","substr","p1","p2","addFiles","imageToPreload","p3","preloadedImages","assign","loadingPromise","all","mergeWith","fullSequenceObjectLevel1","fullSequenceObjectLevel2","fullSequenceObjectLevel3","fullSequenceObjectLevel4","baseLevel","sequenceObject","dominantStructure","probeObservationDuration","predictionDuration","levelOne","levelTwo","levelThree","levelFour","fixedISIAfterObservation","sampleMeanISIAfterObservation","fixedISIAfterPrediction","sampleMeanISIAfterPrediction","fixedBlackScreenDuration","sampleMeanBlackScreen","maxSampleAfterPrediction","maxSampleAfterObservation","maxSampleBlackScreen","sound","levels","variables","shouldSeeInformation","assetsToLoad","path","observation","predict","registerSceneGenerator","sceneNames","predictionOpacity","animate","fullOpacity","lowOpacity","parametersNames","parametersConstraints","currentScene","rParams","paramBox","bind","tempMaxNumberOfRetry","MAX_NUMBER_OF_RETRY","endpoint","loginForm","fields","userId","constraints","authorizedValues","password","format","callback","credentials","form","context","states_active","setConnection","signInForm","loggedIn","login","startTask","message","queryString","generateSequence","require","MainScene","sceneKey","canvasBackground","backgroundRoundRadius","clearColor","canvasPercentWidth","canvasPercentHeight","mode","create2DScene","onResize","sounds","sounds_observation","sounds_predict","register","cwDataFields","addTable","connections","eventFields","indexOnTransitionSequence","indexOnPredictionSequence","fullSequenceIndex","states","running","tryout","tryoutFMRI","checkpoint","tutorialDone","levelDone","taskDone","taskEndNoComeback","flags","levelDefined","events","sequenceGenerated","goNextPosition","endObservation","startPrediction","responseTimeEnded","isiAfterLearningEnded","feedbackEnded","isiAfterFeedbackEnded","pauseTransition","forcePause","predictionStartBlackout","blackoutEnds","predictionEndsBlackout","isiAfterPredictionEndsBlackout","screenWentBlack","playPredictionSound","playObservationSound","goToTutorial","hasResponded","restartTutorial","goToLevel1","goToLevel2","goToLevel3","goToLevel4","tic","moreThanFiveNA","aknowledgedEnding","tutorialNext","addState","states_tutorial","states_running","tutorialState","runningState","tryoutState","endState","pauseState","pause","eventData","flags_levelDefined","belongsTo","handledAt","storedAt","active","addAwakeningFunctions","addEndingFunctions","addEventFunctions","events_goToTutorial","goToPause","hide","states_pause","events_goNextPosition","events_endObservation","events_startPrediction","events_responseTimeEnded","events_pauseTransition","events_forcePause","events_windowBlur","events_moreThanFiveNA","events_click","events_keydown","events_playPredictionSound","events_playObservationSound","events_restartTutorial","events_windowFocus","selectLevel","checkTaskDone","checkpoint_taskDone","checkTaskEndNoComeback","checkpoint_taskEndNoComeback","results","code","eventLevel","checkpoint_tutorialDone","checkpoint_levelDone","startLevel","emptyTimeTriggerEvents","cross_base","endActive","awakenEnd","initialGui","authorize_manual_login","events_aknowledgedEnding","open","close","reason","taskFinishedTitle","taskFinishedContent","taskStoppedTitle","taskStoppedMessage","taskStoppedReason","replace","setCheckpoint","awakenPause","levelObject","GUI","pauseTime","thresholdIdle","play","hitKeyTime","initialGuiVisible","backgroundFill","lastPauseInfo","time","currentTimeLeft","timerText","timeLeft","parseInt","timeLimitText","delayInMs","centerText","endReasonIdle","topText","pauseText","pauseKeyDown","ceil","pauseRestart","hasFocus","previousTimeLeft","frozenState","endPause","prematureEndPauseAboveThreshold","stateUnfrozen","currentTrialData","hasPaused","positionData","startTransitionTime","text2d","maxTransitionTime","resolveOnKey","except","shouldtic","transitionText","finishedLevelTransition","tooltipPause","box","centerPosition","tooltip","duration","blockDone","finishedBlockTransition","nextTransitionTime","newEvent","startRunning","pausedBetween","numberOfMissed","isPredicting","nextTransitionEvent","addTimeTriggerEvent","storeData","dataToStore","choice","responseTime","startObservation","respondedAt","endPrediction","keysHits","clicks","positionIndexInStructure","nextIndex","correct","transitionTo","subject_id","block_type","dominant_structure","dominant_transition_probability","trial_type","observation_duration","observed_transition_was_dominant","transition_to","subject_choice","response_time","key_hits","JSON","stringify","has_paused","start_observation","end_observation","start_prediction","responded_at","end_prediction","storeInErrorLog","timestamp","goToNextPosition","checkConnection","checkLastInteraction","pending","souldPlaySound","moveFunction","trialData","stateKey","observedTransitionWasDominant","startPredictionTime","observationTime","blackoutTime","agent_predictionOpacity","endResponse","crossLockByPosition","checkForClickPrediction","clientY","engineX","engineY","checkKeyStrokeForPrediction","keyCode","key","m","cross_bottomRight","cross_topLeft","c","cross_bottomLeft","cross_topRight","keyPosition","events_hasResponded","playSound","name","awakeTryout","tests","wolfFirstAppears","passed","wolfHasAppeared","predictionTest","numberOfPrediction","realTimeTest","rabbitFirstAppear","rabbitFirstDisapear","rabbitFirstDisapearTitle","rabbitFirstDisapearMessage","wolfFmriFirstAppear","wolfFmriFirstAppearTitle","wolfFmriFirstAppearMessage","blackoutFirstAppear","blackoutFirstAppearTitle","blackoutFirstAppearMessage","hasPassedAllTest","test","tryoutGoToNextPosition","hideTooltip","ntransition","askContinue","askfMRIContinue","lastChoice","background","tilePosition","events_screenWentBlack","tryoutStartPrediction","npred","hitAKeyToContinue","changeCenterSquare","choiceDeferred","chooseNextPosition","tryoutCheckKeyStrokeForPrediction","chosenKey","sign","youSelectedThisTile","aLittleSquareShowsYourChoice","tryoutEndPrediction","tryoutEnd"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAOrB,SAASjB,OAAhB;AACD,CAlND;;AAoNA,IAAMwR,aAAa,SAAbA,UAAa,GAA0B;AAAA,MAAhBnzB,OAAgB,uEAAN,IAAM;;AAC3C,MAAI,OAAO,KAAKD,UAAZ,KAA2B,WAA/B,EAA4C;AAC1C,UAAM,IAAIX,KAAJ,CAAU,gDAAV,CAAN;AACD;;AAED,MAAI,OAAOY,QAAQkW,IAAR,CAAa2P,KAApB,KAA8B,WAAlC,EAA+C;AAC7C,UAAM,IAAIzmB,KAAJ,CAAU,8CAAV,CAAN;AACD;;AAED;AACA,MAAMW,aAAa,KAAKA,UAAxB;AACA,MAAMob,eAAe,KAAKA,YAA1B;AACA,MAAMT,IAAI,KAAKA,CAAf;AACA,MAAMQ,aAAaC,aAAaR,GAAb,CAAiB,YAAjB,CAAnB;AACAQ,eAAaiY,sBAAb;AACAlY,aAAWsD,KAAX,CAAiBhI,OAAjB,GAA2B,CAA3B;AACA0E,aAAW0B,KAAX,CAAiBC,WAAjB,GAA+BnC,EAAEC,GAAF,CAAM0Y,UAArC;;AAEA;AACAlY,eAAawG,OAAb,CAAqB,kBAArB;;AAEAxG,eAAasD,SAAb,CAAuB,OAAvB,EAAgCze,QAAQkW,IAAR,CAAa2P,KAA7C;AACA1K,eAAasD,SAAb,CAAuB,aAAvB,E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","file":"cwfmri.max.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"experiment-js\"), require(\"experiment-babylon-js\"), require(\"lodash\"), require(\"experiment-boxes\"), require(\"experiment-mathjs\"), require(\"jQuery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cwfmri\", [\"experiment-js\", \"experiment-babylon-js\", \"lodash\", \"experiment-boxes\", \"experiment-mathjs\", \"jQuery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cwfmri\"] = factory(require(\"experiment-js\"), require(\"experiment-babylon-js\"), require(\"lodash\"), require(\"experiment-boxes\"), require(\"experiment-mathjs\"), require(\"jQuery\"));\n\telse\n\t\troot[\"cwfmri\"] = factory(root[\"experiment\"], root[\"BABYLON\"], root[\"_\"], root[\"experimentBoxes\"], root[\"math\"], root[\"jQuery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_15__, __WEBPACK_EXTERNAL_MODULE_16__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2b57cdf60524e68a9fd0","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"experiment-js\",\"commonjs2\":\"experiment-js\",\"amd\":\"experiment-js\",\"root\":\"experiment\"}\n// module id = 0\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"experiment-babylon-js\",\"commonjs2\":\"experiment-babylon-js\",\"amd\":\"experiment-babylon-js\",\"root\":\"BABYLON\"}\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"lodash\",\"root\":\"_\"}\n// module id = 2\n// module chunks = 0","/** @module taskUtilities */\nimport math from 'experiment-mathjs'\nimport _ from 'lodash'\n\nimport { TaskObject, matrix, mandatory, debuglog, rep, getRow, samplePermutation, rowSum, debugWarn, diag } from 'experiment-js'\nimport BABYLON from 'experiment-babylon-js'\n\n/* ======= Texture Functions ======= */\nconst getAspectRatio = function (surfaceObject = mandatory()) {\n  if (surfaceObject.constructor === BABYLON.Texture) {\n    const { width: w, height: h } = surfaceObject.getBaseSize()\n    return (w / h)\n  }\n\n  throw new Error('getAspectRatio: object type not valid.')\n}\n\n/* =============== Task specific functions =============== */\n/**\n * Returns an array of the four possible main transition matrices\n * @return {Array} Each of the four entry is a 16*16 matrix with either 0 or 1\n */\nconst getBaseGraphMatrices = function () {\n  /* --- Graph setup --- */\n  const graphMatrix1 = matrix(4, 4, 0)\n  const graphMatrix2 = matrix(4, 4, 0)\n  graphMatrix1[0][1] = graphMatrix1[1][2] = graphMatrix1[2][3] = graphMatrix1[3][0] = 1 //eslint-disable-line\n  graphMatrix2[0][2] = graphMatrix2[1][3] = graphMatrix2[2][1] = graphMatrix2[3][0] = 1 //eslint-disable-line\n\n  const baseMatrices = {\n    A: graphMatrix1,\n    B: math.transpose(graphMatrix1),\n    C: graphMatrix2,\n    D: math.transpose(graphMatrix2),\n  }\n\n  return baseMatrices\n}\n\n/**\n * Computes one valid stateSpace store them in the taskObject.parameters.validStateSpaces\n * @param  {TaskObject} taskObject Object of class TaskObject\n * @param  {object} options      object with optional arguments: maxNumberOfCycles default to 2\n */\nconst computeValidStateSpace = function (taskObject = mandatory('taskObject'), options = {}) {\n  return new Promise((resolve, reject) => {\n    if (taskObject.constructor !== TaskObject) {\n      reject('computeValidGraphs promise: taskObject is not of class TaskObject.')\n    }\n\n    const optionsBase = {\n      maxNumberOfCycles: 2,\n      stateSpace: null,\n    }\n\n    options = _.extend(optionsBase, options)\n\n    // const maxNumberOfCycles = options.maxNumberOfCycles\n    let stateSpace = options.stateSpace\n\n    // get a reference to the scene and the taskObject\n\n    const rules = taskObject.parameters.rules\n    const rulesProportions = taskObject.parameters.rulesProportions\n\n    /* --- buid rule proportion array with threshold *** TODO generalize and use in the task --- */\n    let proportionThreshold = 0\n    const rulesData = []\n    for (let i = 0; i < rules.length; i++) {\n      // associate target with rule and rulesProportion (one entry for each rule)\n      rulesData.push({\n        rule: rules[i],\n        proportion: rulesProportions[i],\n        threshold: proportionThreshold,\n      })\n\n      // add proportion to shift threshold (used by drawTargetDistribution)\n      proportionThreshold += rulesProportions[i]\n    }\n\n    const numberOfRows = taskObject.parameters.numberOfRows\n    const numberOfTargets = taskObject.parameters.numberOfRows ** 2\n\n    /* --- Create array of rules without random and oneBackThenRight --- */\n    // const rulesWithoutRandom = _.without(taskObject.parameters.rules, 'random')\n    const linearRules = _.without(taskObject.parameters.rules, 'random', 'oneBackThenRight')\n\n    if (stateSpace === null) {\n      /**\n       * The stateSpace array hold position information as well as the rule associated to each observable state (position on the screen).\n       * Arugments:\n       * {closestTargets: Object {down:1,left:2,right:2,up:1},\n       * nextPosition:2, next observed position\n       * position:3, observed position\n       * rule:\"right\"}\n       *\n       * @type {Array}\n       */\n      stateSpace = []\n      for (let i = 0; i < numberOfTargets; i++) {\n        /* --- setup the current target  --- */\n        const currentTarget = {}\n        currentTarget.position = i\n\n        /* --- Calculate the neihgbours indices mapped to a spherical space\n        (going up on the top row bring you to the last row on the same column)--- */\n        const beginLineIndex = Math.floor(i / numberOfRows) * numberOfRows\n\n        const downIndex = (i + (numberOfRows * (numberOfRows - 1))) % (numberOfRows * numberOfRows)\n        const upIndex = (i + numberOfRows) % (numberOfRows * numberOfRows)\n\n        const rightIndex = ((i - (beginLineIndex + 1)) % (numberOfRows)) + beginLineIndex\n        const leftIndex = (((i - beginLineIndex) + (numberOfRows - 1)) % (numberOfRows)) + beginLineIndex\n\n        currentTarget.closestTargets = {\n          up: upIndex,\n          left: leftIndex,\n          down: downIndex,\n          right: rightIndex,\n        }\n\n        // draw a random number and select a target-rule based on the result\n        const randomNumber = Math.random()\n\n        // find the one target-rule depending on the proportionThreshold\n        const currentRuleData = _.clone(_.find(rulesData, (e) => {\n          const d = randomNumber - e.threshold\n          return ((d <= e.proportion) && (d > 0))\n        }))\n\n        // if target-rule is \"random\" pick a non-random time independant rule: up down right left\n        if (currentRuleData.rule === 'random') {\n          currentRuleData.rule = _.sample(linearRules)\n        }\n\n        currentTarget.rule = currentRuleData.rule\n\n        switch (currentTarget.rule) {\n          case 'up':\n            currentTarget.nextPosition = upIndex\n            break\n          case 'down':\n            currentTarget.nextPosition = downIndex\n            break\n          case 'left':\n            currentTarget.nextPosition = leftIndex\n            break\n          case 'right':\n            currentTarget.nextPosition = rightIndex\n            break\n          case 'oneBackThenRight':\n            currentTarget.nextPosition = 'last'\n            break\n          default:\n            throw new Error(`getHiddenStateMatrixFromDistribution: state at ${currentTarget.position} of the distribution aray has an invalid rule ${currentTarget.rule}`)\n        }\n\n        // populate the array\n        stateSpace.push(currentTarget)\n      }\n    }\n\n    const sampleNewRule = function (lStateSpace = mandatory(), position = mandatory()) {\n      if (typeof lStateSpace[position] === 'undefined') {\n        throw new Error(`sampleNewRule: lStateSpace[${position}] is undefined.`)\n      }\n\n      // get the reference to the particular state to change\n      const state = lStateSpace[position]\n\n      // draw a random number and select a target-rule based on the result\n      const randomNumber = Math.random()\n\n      // find the one target-rule depending on the proportionThreshold\n      const currentRuleData = _.clone(_.find(rulesData, (e) => {\n        const d = randomNumber - e.threshold\n        return ((d <= e.proportion) && (d > 0))\n      }))\n\n      // if target-rule is \"random\" pick a non-random time independant rule: up down right left\n      if (currentRuleData.rule === 'random') {\n        currentRuleData.rule = _.sample(linearRules)\n      }\n\n      state.rule = currentRuleData.rule\n\n      switch (state.rule) {\n        case 'up':\n          state.nextPosition = state.closestTargets.up\n          break\n        case 'down':\n          state.nextPosition = state.closestTargets.down\n          break\n        case 'left':\n          state.nextPosition = state.closestTargets.left\n          break\n        case 'right':\n          state.nextPosition = state.closestTargets.right\n          break\n        case 'oneBackThenRight':\n          state.nextPosition = 'last'\n          break\n        default:\n          throw new Error(`getHiddenStateMatrixFromDistribution: state at ${position} of the distribution aray has an invalid rule ${state.rule}`)\n      }\n\n      return (lStateSpace)\n    }\n\n    /**\n     * From a sized n state space, the function returns a sized p memoryless state space (array of state objects) where time dependant\n     * state rules have been translsated to a number of hidden states.\n     * The oneBackThenRight rule is non linear and the system cannot be represented by a transition matrix (with size the initial number of state squared)\n     * We need to create a space of hidden states in order to linearize the system so it could be represented as a transition matrix.\n     * Linearize the space is only useful for time dependant rules. This function creates the hidden state matrix by creating as many states as necessary\n     * e.g for the 'oneBackThenRight' rule, if the state is of degree 3, meaning that 3 states are transitioning to it\n     * to linearize the space you would that unique state to be represented by 7 states :\n     * * 3 states, one for each incoming states, and 3 states for the excape to the right 90 degrees, and one state in case you start at this position\n     * And and each incoming state as 2 states :\n     * * one going to the first state, the other to the excape state\n     *\n     * To the initial state object the function adds arguments : nextHiddenState and hiddenStateIndex. It changes the nextPosition value for oneBackThenRight states to a random\n     * target from the closestTargets property of the state object.\n     *\n     * @param  {array} lStateSpace Array of state objects\n     * @param  {numeric} loopIndex  the number of time the function was recursively called (stops recursion at 50 and returns false)\n     * @return {array|false}            Array with new hidden states allowing to describe the task as a linear system (Hidden markov model).\n     *                                  Returns false if more than 50 recursive call were made.\n     */\n    const recursivelyExpandStateSpace = function (lStateSpace = mandatory(), loopIndex = mandatory()) {\n      const timeIndependantRules = ['up', 'right', 'down', 'left']\n      if (loopIndex > 50) {\n        return (false)\n      }\n\n      let newSpace = []\n      let recurse = false\n      for (let k = 0; k < lStateSpace.length; k++) {\n        const state = _.clone(lStateSpace[k])\n        if (typeof state.nextHiddenState === 'undefined') {\n          state.nextHiddenState = state.nextPosition\n        }\n        if (typeof state.hiddenStateIndex === 'undefined') {\n          state.hiddenStateIndex = state.position\n        }\n        if (state.nextHiddenState === 'last') {\n          // if you start on the oneBackThenRight state it select a random nextHiddenState\n          // TODO: discuss how it should be handled\n          state.nextHiddenState = _.sample(state.closestTargets)\n          state.nextPosition = state.nextHiddenState\n        }\n\n        if (lStateSpace[state.nextHiddenState].rule === 'oneBackThenRight') {\n          const firstTargetHiddenState = _.clone(lStateSpace[state.nextHiddenState])\n          firstTargetHiddenState.hiddenStateIndex = lStateSpace.length\n          firstTargetHiddenState.rule = _.findKey(firstTargetHiddenState.closestTargets, p => (p === state.position))\n\n          const secondTargetHiddenState = _.clone(state)\n          secondTargetHiddenState.hiddenStateIndex = lStateSpace.length + 1\n\n          const thirdTargetHiddenState = _.clone(lStateSpace[state.nextHiddenState])\n          thirdTargetHiddenState.hiddenStateIndex = lStateSpace.length + 2\n          // next rule direction is 90 degrees from the last rule\n          thirdTargetHiddenState.rule = timeIndependantRules[(timeIndependantRules.indexOf(firstTargetHiddenState.rule) + 1) % 4]\n          thirdTargetHiddenState.nextPosition = thirdTargetHiddenState.closestTargets[thirdTargetHiddenState.rule]\n\n          // set the nextHiddenState for each new states\n          state.nextHiddenState = firstTargetHiddenState.hiddenStateIndex\n          firstTargetHiddenState.nextHiddenState = secondTargetHiddenState.hiddenStateIndex\n          secondTargetHiddenState.nextHiddenState = thirdTargetHiddenState.hiddenStateIndex\n          thirdTargetHiddenState.nextHiddenState = thirdTargetHiddenState.nextPosition\n\n          newSpace.push(state)\n          newSpace = _.concat(newSpace, _.slice(lStateSpace, k + 1))\n\n          newSpace.push(firstTargetHiddenState)\n          newSpace.push(secondTargetHiddenState)\n          newSpace.push(thirdTargetHiddenState)\n\n          recurse = true\n\n          break\n        } else {\n          newSpace.push(state)\n        }\n      }\n      debuglog(`recursivelyExpandStateSpace: loopIndex ${loopIndex} recurse ${recurse}`)\n      debuglog(newSpace)\n      if (recurse) { // (_.keys(_.filter(newSpace, function(state) { return(newSpace[state.nextHiddenState].rule == \"oneBackThenRight\"); })).length) {\n        return (recursivelyExpandStateSpace(newSpace, loopIndex + 1))\n      }\n      debuglog('were here god damnit')\n      return (newSpace)\n    }\n    /**\n     * Returns a p*p math.matrix object from a stateSpace array of size p. A stateSpace array contains object with protperties :\n     * e.g. stateSpace = {closestTargets: Object {down:1,left:2,right:2,up:1},\n     * hiddenStateIndex: 9, true state\n     * nextHiddenState: 2, next true state\n     * nextPosition:2, next observed position\n     * position:3, observed position\n     * rule:\"right\"}\n     * @param  {array} lStateSpace array of p state objects.\n     * @return {math.matrix}            matrix of p*p size\n     */\n    const transitionMatrixFromStateSpace = function (lStateSpace = mandatory()) {\n      if (lStateSpace.constructor !== Array) {\n        debuglog(lStateSpace)\n        throw new Error('transitionMatrixFromStateSpace: stateSpace is not an array.')\n      }\n\n      const transitionMatrix = math.zeros(lStateSpace.length, lStateSpace.length)\n\n      for (let i = 0; i < lStateSpace.length; i++) {\n        if (typeof lStateSpace[i].nextHiddenState === 'undefined') {\n          throw new Error(`transitionMatrixFromStateSpace: state ${i} has an undefined nextHiddenState`)\n        }\n\n        transitionMatrix.subset(math.index(i, lStateSpace[i].nextHiddenState), 1)\n      }\n\n      return (transitionMatrix)\n    }\n\n    /**\n     * Returns the number of cycle present in the graph by using the transition matrix.\n     * @param  {math.matrix} transitionMatrix transitionMatrix from which you want to extract cycles\n     * @return {numeric} the number of cycles in the graph\n     */\n    const getCyclesFromTransitionMatrix = function (transitionMatrix = mandatory(), maxTransitions = 64) {\n      /* if X is the position vector and A the transitionMatrix\n       * x*(A)^n = x means that X is an eigen vector of the transitionMatrix raised to the nth power\n       * and it also means you return to the same position after n movements starting from x\n       */\n      if (typeof transitionMatrix._size === 'undefined') {\n        throw new Error('getCyclesFromTransitionMatrix: transitionMatrix._size is undefined.')\n      }\n\n      const spaceSize = transitionMatrix._size\n      if (spaceSize[0] !== spaceSize[1]) {\n        throw new Error('getCyclesFromTransitionMatrix: transitionMatrix is not square.')\n      }\n\n      let positionsInCycle = []\n      const cycles = []\n\n      for (let i = 0; i < spaceSize[0]; i++) {\n        if (positionsInCycle.indexOf(i) === -1) {\n          // this position is part of a previously detected cycle\n\n          const currentCyclePositions = []\n          const startingPosition = math.zeros(1, spaceSize[0])\n          startingPosition.subset(math.index(0, i), 1)\n\n          let currentPositionVector = _.clone(startingPosition)\n          let currentPosition = (math.flatten(currentPositionVector))._data.indexOf(1)\n          currentCyclePositions.push(currentPosition)\n          let numberOfTransitions = 1\n\n          while (numberOfTransitions < maxTransitions) {\n          // let newPosition = math.multiply(startingPosition, math.pow(transitionMatrix,numberOfTransitions))\n            currentPositionVector = math.multiply(currentPositionVector, transitionMatrix)\n            currentPosition = (math.flatten(currentPositionVector))._data.indexOf(1)\n\n            const currentPositionIndexInCycle = currentCyclePositions.indexOf(currentPosition)\n            if (currentPositionIndexInCycle !== -1) {\n            // this position was visited before\n            // close the cycle store it and get out of the loop\n              const cycle = _.slice(currentCyclePositions, currentPositionIndexInCycle)\n              positionsInCycle = _.union(positionsInCycle, cycle)\n              cycles.push(cycle)\n              break\n            }\n\n            if (positionsInCycle.indexOf(currentPosition) !== -1) {\n            // this position was visited in a previous cycle - the trajectory will be absorbed by it - no need to store new info\n              break\n            }\n\n            currentCyclePositions.push(currentPosition)\n            numberOfTransitions += 1\n          }\n        }\n      }\n\n      return (cycles)\n    }\n\n    let loopOnStateSpace = 0\n    while (loopOnStateSpace < 110) {\n      // count the number of cycle\n      const hiddenSpace = recursivelyExpandStateSpace(stateSpace, 0)\n      if (hiddenSpace === false) {\n        resolve('computeValidGraphs: could not expand state space.')\n        break\n      } else {\n        debuglog(`were past hiddenSpace loopOnStateSpace${loopOnStateSpace}`)\n        const transitionMatrix = transitionMatrixFromStateSpace(hiddenSpace)\n        const cycles = getCyclesFromTransitionMatrix(transitionMatrix)\n\n        if (cycles.length > options.maxNumberOfCycles) {\n          debuglog('too many cycles')\n          loopOnStateSpace += 1\n          // find smallest cycle\n          let smallestSize = -1\n          let smallestCycleIndex = 0\n          for (let i = 0; i < cycles.length; i++) {\n            if ((smallestSize === -1) || (cycles[i].length < smallestSize)) {\n              smallestSize = cycles[i].length\n              smallestCycleIndex = i\n            }\n          }\n          const positionToChange = hiddenSpace[_.sample(cycles[smallestCycleIndex])].position\n          // let positionToChange = _.sample(_.range(0, hiddenSpace.length));\n          stateSpace = sampleNewRule(stateSpace, positionToChange)\n        } else {\n          break\n        }\n\n        if (loopOnStateSpace > 100) {\n          resolve('computeValidGraphs: could not converge to a valid graph')\n          break\n        }\n      }\n    }\n\n    // store the targetRules in the stateManager\n    const validStateSpaces = taskObject.parameters.validStateSpaces\n    validStateSpaces.push(stateSpace)\n\n    resolve('computeValidGraphs: a valid stateSpace was stored in taskObject.parameters.validStateSpaces array.')\n  })\n}\n\nconst getTransitionMatrixFromBase = function (baseMatrix = mandatory(), mainTransitionProbability = mandatory(), noSelfTransition = true) {\n  // make sure baseMatrix is in math.matrix format\n  baseMatrix = math.matrix(baseMatrix)\n  const size = (baseMatrix.size())[0] - 1\n  const transitionMatrix = baseMatrix.map((value, index) => {\n    if (noSelfTransition && (index[0] === index[1])) {\n      return 0\n    }\n    switch (value) {\n      case 0:\n        return ((1 - mainTransitionProbability) / (size - (noSelfTransition ? 1 : 0)))\n      case 1:\n        return (mainTransitionProbability)\n      default:\n        throw new Error('taskObject.getTransitionMatrix: mainTransitionProbability is not 0 or 1')\n    }\n  })\n\n  return transitionMatrix\n}\n\nconst getValidTransitionArray = function (transitionArray = mandatory()) {\n  if (transitionArray.constructor !== Array) {\n    if (typeof transitionArray.toArray === 'function') {\n      transitionArray = transitionArray.toArray()\n    } else {\n      throw new Error('TaskObject.getValidTransitionArray: transitionArray is not an array and cannot be coerced to array.')\n    }\n  }\n\n  if (!transitionArray.length) {\n    throw new Error('TaskObject.getValidTransitionArray: transitionArray is empty.')\n  }\n\n  const lengths = []\n  for (let i = 0; i < transitionArray.length; i++) {\n    lengths[i] = transitionArray[i].length\n  }\n\n  const uniqueLengths = lengths.uniqueValues()\n  if (uniqueLengths.length !== 1) {\n    throw new Error('TaskObject.getValidTransitionArray: rows are of multiple lengths.')\n  }\n\n  if (transitionArray.length !== uniqueLengths[0]) {\n    throw new Error('TaskObject.getValidTransitionArray: transition array is not square.')\n  }\n\n  /* --- Transition array passed the checks, return it --- */\n  return (transitionArray)\n}\n\n/**\n * Returns a 0 order n*n transition matrix from a one dimensional size n array with a probability for each state\n * @param  {array} stateProbabilities eg [0.1 0.2 0.2 0.5] for a 10% chance of transition to state 1 at any time t, 50% chance for state 4\n * @return {object} transition matrix (math.matrix) or two dimensional array depending on outputType\n */\nconst getRandomTransitionMatrix = function (stateProbabilities, outputType = 'array') {\n  const size = stateProbabilities.length\n  const baseMatrix = math.matrix(matrix(size, size, 0))\n\n  const transitionMatrix = baseMatrix.map((value, index) => (stateProbabilities[index[1]]))\n\n  if (outputType === 'array') {\n    // return an array\n    return getValidTransitionArray(transitionMatrix)\n  }\n    // return a math.matrix\n  return transitionMatrix\n}\n\nconst getZeroOrderTransitionMatrix = function (dominantPosition = mandatory(), dominantProbability = mandatory(), numberOfStates = 4) {\n  const nonDominantProbability = Math.round(((1 - dominantProbability) / (numberOfStates - 1)) * 100) / 100\n  const rowValue = rep(nonDominantProbability, numberOfStates)\n  rowValue[dominantPosition] = dominantProbability\n  const randomTransitionMatrix = getRandomTransitionMatrix(rowValue)\n\n  return randomTransitionMatrix\n}\n\nconst positionToVector = function (position = mandatory(), numberOfPositions = 4) {\n  // const maxIndex = numberOfPositions - 1\n  if (Number.isInteger(position)) {\n    let vectorPosition = rep(0, numberOfPositions)\n    vectorPosition[position] = 1\n    vectorPosition = math.matrix(vectorPosition)\n\n    return vectorPosition\n  }\n  throw new Error('taskObject.positionToVector: position is not numeric.')\n}\n\nconst vectorToPosition = function (vector = mandatory()) {\n  if (vector.constructor !== math.matrix().constructor) {\n    if (vector.constructor === Array) {\n      vector = math.matrix(vector)\n    } else {\n      throw new Error('taskObject.vectorToPosition: vector is not of type math.matrix() or Array')\n    }\n  }\n\n  if ((vector.size()).length > 1) {\n    throw new Error('taskObject.vectorToPosition: vector has more than one dimension.')\n  }\n\n  let position = null\n  vector.forEach((value, index) => {\n    switch (value) {\n      case 1:\n        if (position === null) {\n          position = index[0]\n        } else {\n          throw new Error('taskObject.vectorToPosition: vector has more than one entry equal to 1.')\n        }\n        break\n      case 0:\n        break\n      default:\n        throw new Error(`taskObject.vectorToPosition: vector has at least one entry not equal to 0 or 1. Entry ${value}`)\n    }\n  })\n\n  if (position === null) {\n    throw new Error('taskObject.vectorToPosition: no entry equal to one was found in vector, position is null.')\n  }\n\n  return position\n}\n\nconst sampleNextTransition = function (transitionMatrix = mandatory(), currentPosition = mandatory()) {\n  /* currentPosition is :\n   * * either a vector of same size m as transitionMatrix (m*p)\n   * * or a number that will be transformed into a vector\n   */\n  if (Number.isInteger(currentPosition)) {\n    currentPosition = positionToVector(currentPosition, (math.size(transitionMatrix))[0])\n  }\n\n  transitionMatrix = math.matrix(transitionMatrix)\n\n  if ((currentPosition.size())[0] !== (transitionMatrix.size())[0]) {\n    throw new Error('taskObject.sampleNextTransition: currentPosition vector is not of same size as transitionMatrix')\n  }\n\n  const nextPositionProbabilities = math.multiply(math.transpose(currentPosition), transitionMatrix)\n\n  /* --- Draw a random position --- */\n  let count = 0\n  const randomNumber = Math.random()\n  let nextPosition = null\n  nextPositionProbabilities.map((value, index) => {\n    if (randomNumber > count) {\n      nextPosition = index[0]\n    }\n    count += value\n    return count\n  })\n\n  if (nextPosition === null) {\n    throw new Error('taskObject.sampleNextTransition: nextPosition is null')\n  }\n\n  return nextPosition\n}\n\n\nconst sampleTransitions = function (transitionMatrix = mandatory(), startPosition = mandatory(), numberOfTransitions = mandatory(), includeStart = true) {\n  let vectorPosition\n  if (Number.isInteger(startPosition)) {\n    vectorPosition = positionToVector(startPosition)\n  } else {\n    vectorPosition = startPosition\n    startPosition = vectorToPosition(vectorPosition)\n  }\n  const transitions = []\n\n  if (includeStart) {\n    transitions.push(startPosition)\n  }\n\n  for (let j = transitions.length; j < numberOfTransitions; j++) {\n    const sampledPosition = sampleNextTransition(transitionMatrix, vectorPosition)\n    transitions.push(sampledPosition)\n    vectorPosition = positionToVector(sampledPosition)\n  }\n\n  return (transitions)\n}\n\n\nconst getDominantCellByRow = function (transitionArray = mandatory()) {\n  transitionArray = getValidTransitionArray(transitionArray)\n\n  const dominantArray = matrix(transitionArray.length, transitionArray.length, 0)\n  for (let i = 0; i < transitionArray.length; i++) {\n    // sample one of the max index if ex aequo\n    const indicesOfMaxValue = transitionArray[i].indicesOf(_.max(transitionArray[i]))\n    if (indicesOfMaxValue.length > 1) {\n      console.warn(`TaskObject.getDominantCellByRow: ${indicesOfMaxValue.length} cells in row ${i} of transition matrix are ex-aequo. Sampling one of them as dominant.`)\n    }\n    const maxIndex = _.sample(indicesOfMaxValue)\n    dominantArray[i][maxIndex] = 1\n  }\n\n  return (dominantArray)\n}\n\nconst getDominantProbabilityByRow = function (transitionArray = mandatory()) {\n  transitionArray = getValidTransitionArray(transitionArray)\n\n  const dominantArray = _.map(transitionArray, value => (_.max(value)))\n\n  return (dominantArray)\n}\n\nconst matrixKlDivergence = function (qMatrix = mandatory(), pMatrix = mandatory()) {\n  if (qMatrix.constructor !== math.matrix().constructor) {\n    if (qMatrix.constructor === Array) {\n      qMatrix = math.matrix(qMatrix)\n    } else {\n      throw new Error('taskObject.vectorToPosition: qMatrix is not of type math.matrix() or Array')\n    }\n  }\n\n  if (pMatrix.constructor !== math.matrix().constructor) {\n    if (pMatrix.constructor === Array) {\n      pMatrix = math.matrix(pMatrix)\n    } else {\n      throw new Error('taskObject.vectorToPosition: pMatrix is not of type math.matrix() or Array')\n    }\n  }\n\n  /* --- Get unidimensional distributions --- */\n  const flattenQDistribution = math.flatten(qMatrix)\n  const flattenPDistribution = math.flatten(pMatrix)\n\n  const klDivergence = math.kldivergence(flattenQDistribution, flattenPDistribution)\n\n  // symetric would be math.kldivergence(q, p) + math.kldivergence(p, q)\n\n  return (klDivergence)\n}\n\n/**\n * Return a vector or matrix of same size as absolutes, each cells being the proportion of the absolutes values by row. In array format.\n * @param  {array|object} absolutes Array or math.js matrix containing the absolute values\n * @return {array}           Matrix in array format of same dimension as absolutes, converted to proportions.\n */\nconst getProportionArray = function (absolutes = mandatory()) {\n  const sumRow = []\n  const proportionArray = []\n  for (let i = 0; i < absolutes.length; i++) {\n    if (absolutes[i].constructor === Array) {\n      sumRow[i] = math.sum(absolutes[i])\n      proportionArray[i] = []\n      for (let j = 0; j < absolutes[i].length; j++) {\n        proportionArray[i][j] = absolutes[i][j] / sumRow[i]\n      }\n    } else {\n      sumRow[i] = math.sum(absolutes)\n      proportionArray[i] = absolutes[i] / sumRow[i]\n    }\n  }\n\n  return (proportionArray)\n}\n\n/**\n * From a particular sequence of consequent position in a unidimensional array. Returns an object with two properties. First property \"absolutes\" is an array containing the number of observed transition in absolute values,\n * \"proportions\" is the proportions of observed transition for each position (row).\n * @param  {array} sequence         unidimensional array containing the sequence of positions\n * @param  {array|object} transitionMatrix optional: array or math.js matrix containing the true transition matrix (only used for the number of positions)\n * @return {[object}                  Object with absolutes and proportions property\n */\nconst getObservedArrays = function (sequence = mandatory(), transitionMatrix = null) {\n  let size = 4\n  if (transitionMatrix !== null) {\n    size = (getValidTransitionArray(transitionMatrix)).length\n  }\n\n  /* --- Create observation matrix from sequence using array (not math.js matrix object) --- */\n\n  const observedTransitionArray = matrix(size, size, 0)\n  for (let i = 0; i < sequence.length - 1; i++) {\n    observedTransitionArray[sequence[i]][sequence[i + 1]] += 1\n  }\n\n  return ({\n    absolutes: observedTransitionArray,\n    proportions: getProportionArray(observedTransitionArray),\n  })\n}\n\nconst getObservedAndDistanceMatrix = function (sequence = mandatory(), transitionMatrix = mandatory()) {\n  transitionMatrix = getValidTransitionArray(transitionMatrix)\n  // const size = (math.size(transitionMatrix))[0]\n\n  const observedArrays = getObservedArrays(sequence, transitionMatrix)\n\n  const observedMatrix = math.matrix(observedArrays.proportions)\n\n  const distanceMatrix = math.subtract(transitionMatrix, observedMatrix) // math.dotDivide(math.subtract(transitionMatrix, observedMatrix), transitionMatrix);\n\n  return ({\n    observedMatrix,\n    distanceMatrix,\n    totalError: math.sum(math.abs(distanceMatrix)),\n  })\n}\n\n/* ======== Full sequence generators ======== */\n/**\n * Returns a transition sequence where the transition probabilities are equal to the given transitionMatrix with an error under the errorThreshold\n * @param  {array} sequence               Array of positions\n * @param  {array} transitionMatrix       transition matrix of the model\n * @param  {Number} errorThreshold         threshold under which the sequence is validated\n * @param  {Number} numberOfNewTransitions Number of transitions added every time the algorithms modify a previous transition\n * @return {array}                        New sequence\n */\nconst smoothSequenceDistribution = function (sequence, transitionMatrix, errorThreshold = 0.05, numberOfNewTransitions = 1) {\n  transitionMatrix = getValidTransitionArray(transitionMatrix)\n\n  /* --- Get the distance matrix between observed transitions and true transition matrix --- */\n  const resultObject = getObservedAndDistanceMatrix(sequence, transitionMatrix)\n  // const observedMatrix = resultObject.observedMatrix\n  const distanceMatrix = resultObject.distanceMatrix\n\n  /* --- Find the positions with distance from true transition probability above the errorThreshold --- */\n  const size = (math.size(transitionMatrix))[0]\n  const unevenPosition = []\n  for (let i = 0; i < size; i++) {\n    if (rowSum(math.abs(distanceMatrix), i) > errorThreshold) {\n      let rowArray = (getRow(distanceMatrix, i)).toArray()\n      rowArray = rowArray[0]\n      const maxVariations = _.sortBy(rowArray)\n      // const minVariation = _.min(rowArray)\n\n      // [positionIndex, maxVariationPositionIndex, maxVariationValue, minVariationPositionIndex, minVariationValue]\n      const positionInformations = [i,\n        rowArray.indexOf(maxVariations[0]),\n        maxVariations[0],\n        rowArray.indexOf(maxVariations[size - 1]),\n        maxVariations[size - 1],\n      ]\n\n      unevenPosition.push(positionInformations)\n    }\n  }\n\n  // debuglog(unevenPosition);\n  let newSequence = sequence\n  if (unevenPosition.length > 0) {\n    // smooth it\n    // const addAtTheEnd = null\n\n    const pickedUneven = unevenPosition[_.random(0, unevenPosition.length - 1)]\n\n    const smoothedPosition = pickedUneven[0]\n    // debuglog(pickedUneven);\n    const allIndices = sequence.indicesOf(smoothedPosition)\n    const highTransitionIndices = _.filter(allIndices, (i) => {\n      if (sequence[i + 1] === pickedUneven[1]) {\n        return true\n      }\n      return false\n    })\n\n    const replacedIndex = _.sample(highTransitionIndices)\n\n    const addedTransitions = [pickedUneven[3]]\n    let vectorPosition = positionToVector(pickedUneven[3])\n    for (let j = 1; j < numberOfNewTransitions; j++) {\n      const sampledPosition = sampleNextTransition(transitionMatrix, vectorPosition)\n      addedTransitions.push(sampledPosition)\n      vectorPosition = positionToVector(sampledPosition)\n    }\n\n    let restSequence = _.slice(sequence, replacedIndex + 2)\n    const restartAt = restSequence.indexOf(addedTransitions[addedTransitions.length - 1])\n\n    if (restartAt === -1) {\n      restSequence = sampleTransitions(transitionMatrix, addedTransitions[addedTransitions.length - 1], restSequence.length)\n    } else {\n      restSequence = _.slice(restSequence, restartAt + 1)\n    }\n\n    newSequence = _.concat(_.slice(sequence, 0, replacedIndex + 1), addedTransitions, _.slice(restSequence, restartAt + 1))\n\n    if (newSequence.length !== sequence.length) {\n      if (newSequence.length > sequence.length) {\n        newSequence = _.slice(newSequence, newSequence.length - sequence.length)\n      } else {\n        const finishSequence = sampleTransitions(transitionMatrix, newSequence[newSequence.length - 1], sequence.length - newSequence.length)\n        newSequence = _.concat(newSequence, finishSequence)\n      }\n      // debuglog(newSequence.length, \" restarted at \" + restartAt + \" addAtTheEnd \" + addAtTheEnd + \" replacedIndex \" + replacedIndex);\n    }\n\n    return (newSequence)\n  }\n  return (null)\n}\n\nconst promiseSequenceFromTransitionMatrix = function (transitionMatrix = mandatory(), options = null) {\n  transitionMatrix = getValidTransitionArray(transitionMatrix)\n  return new Promise((resolve) => {\n    const baseOptions = {\n      sequenceLength: 50,\n      errorThreshold: 0.06,\n      numberOfNewTransitions: 4,\n      maxLoop: 100,\n    }\n\n    options = _.extend(baseOptions, options)\n\n    /* --- Infer number of state from the size of the transition matrix --- */\n    const numberOfStates = (math.size(transitionMatrix))[0]\n\n    /* --- Generate a starting sequence based on transition probabilities --- */\n    let sequence = []\n    const startPosition = _.random(0, numberOfStates - 1)\n    sequence.push(startPosition)\n    let positionVector = positionToVector(startPosition)\n    for (let i = 0; i < options.sequenceLength - 1; i++) {\n      const nextPosition = sampleNextTransition(transitionMatrix, positionVector)\n      positionVector = positionToVector(nextPosition)\n      sequence.push(nextPosition)\n    }\n\n    /* ---\n      Start the loop to get a sequence as close as possible to the true transition probabilities\n      With a limit the number of cycles at 1000\n    --- */\n    let loop = 0\n    const maxLoop = options.maxLoop\n\n    let bestSequence = null\n    let bestError = 100\n    while (loop < maxLoop) {\n      const newSequence = smoothSequenceDistribution(sequence, transitionMatrix, options.errorThreshold, options.numberOfNewTransitions)\n\n      // newSequence is null if no better sequence was found by smoothSequenceDistribution -> loop breaks\n      if (newSequence !== null) {\n        const resultObject = getObservedAndDistanceMatrix(newSequence, transitionMatrix)\n        const totalError = resultObject.totalError\n\n        if ((bestSequence === null) || (bestError > totalError)) {\n          bestSequence = {\n            sequence: newSequence,\n            observedMatrix: resultObject.observedMatrix,\n            distanceMatrix: resultObject.distanceMatrix,\n          }\n          bestError = totalError\n        }\n\n        sequence = newSequence\n      } else {\n        break\n      }\n      loop += 1\n    }\n\n    /* --- After the loop if a better sequence was found return it, else return the start sequence sample from the transition probabilites --- */\n    if (bestSequence !== null) {\n      resolve(bestSequence.sequence)\n    } else {\n      resolve(sequence)\n    }\n  })\n}\n\nconst promiseMultipleSequences = function (transitionMatrix = mandatory(), options = null) {\n  return new Promise((resolve) => {\n    transitionMatrix = getValidTransitionArray(transitionMatrix)\n\n    const baseOptions = {\n      numberOfSequences: 6,\n      sequenceLength: 130,\n      sequenceArray: [],\n    }\n\n    options = _.extend(baseOptions, options)\n\n    debuglog(`Generated ${options.sequenceArray.length} sequences`)\n\n    if (options.sequenceArray.length < options.numberOfSequences) {\n      debuglog(options.sequenceArray)\n      promiseSequenceFromTransitionMatrix(transitionMatrix, {\n        sequenceLength: options.sequenceLength,\n      }).then((sequence) => {\n        options.sequenceArray.push(sequence)\n        promiseMultipleSequences(transitionMatrix, options).then((sequences) => {\n          resolve(sequences)\n        })\n      })\n    } else {\n      resolve(options.sequenceArray)\n    }\n  })\n}\n\nconst promiseMultipleRandomSequences = function (options = null) {\n  return new Promise((resolve) => {\n    const baseOptions = {\n      numberOfSequences: 4,\n      sequenceLength: 30,\n      dominantProbability: 0.4,\n      dominantPositions: [0, 1, 2, 3],\n      errorThreshold: 0.02,\n      maxLoop: 10000,\n      numberOfNewTransitions: 4,\n      sequenceArray: [],\n    }\n\n    options = _.extend(baseOptions, options)\n\n    debuglog(`Generated ${options.sequenceArray.length} sequences`)\n\n    if (options.sequenceArray.length < options.numberOfSequences) {\n      // get the zero order transitionMatrix corresponds to the dominantPositions\n      const transitionMatrix = getZeroOrderTransitionMatrix(options.sequenceArray.length, options.dominantProbability)\n\n      promiseSequenceFromTransitionMatrix(transitionMatrix, {\n        sequenceLength: options.sequenceLength,\n        errorThreshold: options.errorThreshold,\n        numberOfNewTransitions: options.numberOfNewTransitions,\n        maxLoop: options.maxLoop,\n      }).then((sequence) => {\n        options.sequenceArray.push(sequence)\n        promiseMultipleRandomSequences(options).then((sequences) => {\n          resolve(sequences)\n        })\n      })\n    } else {\n      resolve(options.sequenceArray)\n    }\n  })\n}\n\n\nconst promiseSegmentsAndProbesByBlock = function (options = null) {\n  return new Promise((resolve) => {\n    const baseOptions = {\n      segmentSizes: [3, 4, 5],\n      observationSegmentRepetitionPerBlock: 2,\n      numberOfBlocks: 6,\n      dominantProbability: 0.75,\n      positions: [0, 1, 2, 3],\n    }\n\n    options = _.extend(baseOptions, options)\n\n    const numberOfTimeAProbeIsRepeated = options.segmentSizes.length * options.observationSegmentRepetitionPerBlock\n    const positions = options.positions\n\n    // Number of dominant transition by probe position\n    const numberOfDominant = math.floor(options.dominantProbability * numberOfTimeAProbeIsRepeated)\n\n    // let segmentSizeSequences = [];\n    let segmentSizeSequencesEvenlyDistributed = []\n    let probeSequences = []\n    let transitionTypes = []\n    let blockArray = []\n    for (let i = 0; i < options.numberOfBlocks; i++) {\n      /* --- Generate the segment size sequence for the block --- */\n      const segmentPermutations = samplePermutation(rep(options.segmentSizes, positions.length * options.observationSegmentRepetitionPerBlock))\n      // segmentSizeSequences = segmentSizeSequences.concat(segmentPermutations);\n      blockArray = blockArray.concat(rep(i, segmentPermutations.length))\n\n      // Each position sees the same number of segment sizes\n      let probeSequence = samplePermutation(rep(options.positions, numberOfTimeAProbeIsRepeated))\n\n      // make sure there is no repeated probe just one after the other\n      // const previousProbe = null\n      let loop = 0\n      while (loop < 100) {\n        if (probeSequence.hasNeighbouringRepeat()) {\n          probeSequence = samplePermutation(rep(options.positions, numberOfTimeAProbeIsRepeated))\n        } else {\n          break\n        }\n        loop += 1\n      }\n\n      // Distribute uniformely position with segment sizes.\n      // You have the right number of probes but now but not association with segment length\n      const segmentEvenlyPermutated = []\n      const leftSegmentPermutations = positions.map(() => samplePermutation(rep(options.segmentSizes, options.observationSegmentRepetitionPerBlock)))\n\n      for (let i = 0; i < probeSequence.length; i++) {\n        segmentEvenlyPermutated[i] = leftSegmentPermutations[probeSequence[i]].pop()\n        if (typeof segmentEvenlyPermutated[i] === 'undefined') {\n          throw new Error('promiseSegmentsAndProbesByBlock: leftSegmentPermutations is empty cannot pop !')\n        }\n      }\n      segmentSizeSequencesEvenlyDistributed = segmentSizeSequencesEvenlyDistributed.concat(segmentEvenlyPermutated)\n\n      /* --- Concat the probe sequence to the array for all blocks --- */\n      probeSequences = probeSequences.concat(probeSequence)\n\n      /* --- Compute dominant transitions --- */\n      const indices = _.range(probeSequence.length)\n      const transitionType = rep(0, probeSequence.length)\n      const dominantCount = [0, 0, 0, 0]\n      while (indices.length) {\n        const r = _.random(0, indices.length - 1)\n        const index = indices.splice(r, 1)\n        const position = probeSequences[index]\n        if (dominantCount[position - 1] >= numberOfDominant) {\n          transitionType[index] = 0\n        } else {\n          dominantCount[position - 1] += 1\n          transitionType[index] = 1\n        }\n      }\n\n      /* --- Concat dominant transitions --- */\n\n      transitionTypes = transitionTypes.concat(transitionType)\n    }\n\n    resolve({\n      segmentSizeSequences: segmentSizeSequencesEvenlyDistributed,\n      block: blockArray,\n      probeSequences,\n      transitionTypes,\n      numberOfProbePerBlock: options.segmentSizes.length * options.observationSegmentRepetitionPerBlock * options.positions.length,\n      numberOfObservationPerBlock: _.sum(options.segmentSizes) * options.observationSegmentRepetitionPerBlock * options.positions.length,\n    })\n  })\n}\n\nconst getFullSequenceObjectForRandomBlackoutBlock = function (sequence = mandatory(), options = null) {\n  const baseOptions = {\n    observePredictionPerBlock: 16,\n    block: 0,\n    blockType: 'random',\n    segmentLength: {\n      A: [5, 2, 3, 4, 2],\n      B: [2, 3, 4, 5],\n    },\n    trialTypes: {\n      o: 'observation',\n      oP: 'observation_prediction',\n      pBP: 'post_blackout_prediction',\n      blackout: 'blackout',\n    },\n  }\n\n  options = _.extend(baseOptions, options)\n\n  const segAPermutations = samplePermutation(options.segmentLength.A)\n  const segBPermutations = samplePermutation(options.segmentLength.B)\n  const segmentSequence = []\n  segAPermutations.map((v, i) => { //eslint-disable-line\n    segmentSequence.push(segAPermutations[i])\n    if (i < segBPermutations.length) {\n      segmentSequence.push(segBPermutations[i])\n    }\n  })\n\n  const blockSize = options.segmentLength.A.sum() + options.segmentLength.B.sum()\n  const blackoutIndices = segmentSequence.integrate()\n  const addPostBlackout = []\n  let predictionIndices = _.range(0, blockSize).filter((v) => {\n    if (blackoutIndices.indexOf(v) !== -1) {\n      return false\n    } else if (blackoutIndices.indexOf(v - 1) !== -1) {\n      addPostBlackout.push(v)\n      return false\n    }\n    return true\n  })\n  predictionIndices = samplePermutation(predictionIndices)\n    .slice(0, options.observePredictionPerBlock)\n\n  const fullSequence = sequence.slice()\n  const fullBlockType = rep(options.blockType, blockSize)\n  const fullBlock = rep(options.block, blockSize)\n  const fullTrial = _.range(1, blockSize + 1)\n  const fullTrialType = []\n  for (let i = 0; i < sequence.length; i++) {\n    if (predictionIndices.indexOf(i) !== -1) {\n      fullTrialType.push(options.trialTypes.oP)\n    } else if (addPostBlackout.indexOf(i) !== -1) {\n      fullTrialType.push(options.trialTypes.pBP)\n    } else if (blackoutIndices.indexOf(i) !== -1) {\n      fullTrialType.push(options.trialTypes.blackout)\n    } else {\n      fullTrialType.push(options.trialTypes.o)\n    }\n  }\n\n  return ({\n    fullSequence,\n    blockType: fullBlockType,\n    block: fullBlock,\n    trial: fullTrial,\n    trialType: fullTrialType,\n  })\n}\n\nconst promiseFullSequenceForIntermitentPrediction = function (transitionMatrix = mandatory(), options = null) {\n  transitionMatrix = getValidTransitionArray(transitionMatrix)\n  return new Promise((resolve) => {\n    const baseOptions = {\n      sequenceLength: 180,\n      sequenceALength: 96,\n      sequenceBLength: 84,\n      observePredictionPerBlock: 16,\n      errorThreshold: 0.06,\n      numberOfNewTransitions: 4,\n      maxLoop: 100,\n      segmentLength: {\n        A: [5, 2, 3, 4, 2],\n        B: [2, 3, 4, 5],\n      },\n      protectFirstBlock: true,\n      trialTypes: {\n        o: 'observation',\n        oP: 'observation_prediction',\n        pBP: 'post_blackout_prediction',\n        blackout: 'blackout',\n      },\n    }\n\n    options = _.extend(baseOptions, options)\n\n    let sequenceA\n    let sequenceB\n\n    options.sequenceLength = options.sequenceALength\n    return promiseSequenceFromTransitionMatrix(transitionMatrix, options)\n      .then((result) => {\n        const resultObject = getObservedAndDistanceMatrix(result, transitionMatrix)\n        // const observedMatrix = resultObject.observedMatrix\n        const distanceMatrix = resultObject.distanceMatrix\n\n        debugWarn('promiseFullSequenceForIntermitentPrediction.sequenceA', math.sum(math.abs(distanceMatrix)))\n\n        sequenceA = result\n        options.sequenceLength = options.sequenceBLength\n\n        return (promiseSequenceFromTransitionMatrix(transitionMatrix, options))\n      })\n      .then((result) => {\n        const resultObject = getObservedAndDistanceMatrix(result, transitionMatrix)\n        // const observedMatrix = resultObject.observedMatrix\n        const distanceMatrix = resultObject.distanceMatrix\n\n        debugWarn('promiseFullSequenceForIntermitentPrediction.sequenceB', math.sum(math.abs(distanceMatrix)))\n\n        sequenceB = _.clone(result)\n\n        // start loop for blackouts\n        let currentBlock = -1\n        let currentTrial = 0\n        let segAIndex = 0\n        let indicesBlackout = []\n\n        let fullSequence = []\n        let fullTrialType = [] // fill it in the end of each block\n        let fullTrial = []\n        let fullBlock = []\n\n        let segmentsA = _.clone(options.segmentLength.A)\n        let segmentsB = _.clone(options.segmentLength.B)\n        const lenghtBlockA = segmentsA.sum()\n        const blockLength = lenghtBlockA + segmentsB.sum()\n        let lenghtSegmentB = samplePermutation(segmentsB)\n        for (let i = 0; i < sequenceA.length; i++) {\n          const tempBlock = Math.floor(i / lenghtBlockA)\n\n\n          if (tempBlock !== currentBlock) {\n            segmentsA = _.clone(options.segmentLength.A)\n            segmentsB = _.clone(options.segmentLength.B)\n            currentBlock = tempBlock\n            currentTrial = 0\n            segAIndex = 0\n            if ((currentBlock === 0) && (options.protectFirstBlock)) {\n              let first = segmentsA.shift()\n              segmentsA[0] += first\n              indicesBlackout = segmentsA.integrate()\n              lenghtSegmentB = samplePermutation(segmentsB)\n              first = lenghtSegmentB.shift()\n              lenghtSegmentB[0] += first\n            } else {\n              indicesBlackout = samplePermutation(segmentsA).integrate()\n              lenghtSegmentB = samplePermutation(segmentsB)\n            }\n          }\n\n          fullTrial.push(currentTrial)\n          fullSequence.push(sequenceA[i])\n          fullBlock.push(currentBlock)\n          segAIndex += 1\n          currentTrial += 1\n\n          if ((segAIndex !== lenghtBlockA) && (indicesBlackout.indexOf(segAIndex) !== -1)) {\n            fullTrialType.push(options.trialTypes.blackout)\n            const addedSegmentLenght = lenghtSegmentB.shift()\n            const addedSegment = sequenceB.splice(0, addedSegmentLenght)\n            const addTrials = _.range(currentTrial, currentTrial + addedSegmentLenght)\n            const addedTrialType = rep(options.trialTypes.o, addedSegmentLenght)\n            addedTrialType[0] = options.trialTypes.pBP\n            const addedBlock = rep(currentBlock, addedSegmentLenght)\n\n            fullSequence = fullSequence.concat(addedSegment)\n            fullTrial = fullTrial.concat(addTrials)\n            fullTrialType = fullTrialType.concat(addedTrialType)\n            fullBlock = fullBlock.concat(addedBlock)\n\n            currentTrial += addedSegment.length\n          } else {\n            fullTrialType.push(options.trialTypes.o)\n          }\n        }\n\n        // Add observation_prediction to each block\n        const nblocks = Math.floor(fullSequence.length / blockLength)\n        for (let i = 0; i < nblocks; i++) {\n          const blockTrialType = fullTrialType.slice(i * blockLength, (i + 1) * blockLength)\n          const indicesPrediction = samplePermutation(blockTrialType.indicesOf(options.trialTypes.o)).slice(0, options.observePredictionPerBlock)\n          for (let j = 0; j < indicesPrediction.length; j++) {\n            const index = i * (blockLength + indicesPrediction[j])\n            fullTrialType[index] = options.trialTypes.oP\n          }\n        }\n\n        resolve({\n          fullSequence,\n          trial: fullTrial,\n          trialType: fullTrialType,\n          block: fullBlock,\n          blockType: rep('normal', fullSequence.length),\n        })\n      })\n  })\n}\n\n/**\n * From a transitionMatrix returns an object with two properties sequence and trialType. Each position is either learning, probe, or feedback.\n * @param  {array} transitionMatrix Array or matrix\n * @param  {[type]} options          [description]\n * @return {[type]}                  [description]\n */\nconst promiseFullSequenceForOneLevel = function (transitionMatrix = mandatory(), options = null) {\n  return new Promise((resolve) => {\n    /* --- Make sure the transitionMatrix is valid --- */\n    transitionMatrix = getValidTransitionArray(transitionMatrix)\n    const numberOfStates = math.size(transitionMatrix)[0]\n\n    const baseOptions = {\n      numberOfSequences: 8,\n      insertRandomBlocksAt: [2, 6],\n      randomBlocksDominantStates: [2, 2],\n      randomBlocksDominantStateProbability: 0.4,\n    }\n\n    options = _.extend(baseOptions, options)\n\n    /* --- Create random matrix --- */\n\n    const randomBlocksNonDominantProbability = (1 - options.randomBlocksDominantStateProbability) / (numberOfStates - 1)\n    const randomTransitionMatrix = getRandomTransitionMatrix(rep(randomBlocksNonDominantProbability, numberOfStates))\n    randomTransitionMatrix[options.randomBlocksDominantStates] = options.randomBlocksDominantStateProbability\n\n    /* ---\n      Get the dominant transitions and non dominant transitions for each position\n      This will help build the feedback sequence\n     --- */\n\n    // for random blocks\n    const randomBlocksDominantState = matrix(options.randomBlocksDominantStates.length, numberOfStates, 0)\n    const randomBlocksNonDominantStates = matrix(options.randomBlocksDominantStates.length, numberOfStates, rep(0, numberOfStates - 1))\n    for (let i = 0; i < options.randomBlocksDominantStates.length; i++) {\n      for (let j = 0; j < numberOfStates; j++) {\n        randomBlocksDominantState[i][j] = options.randomBlocksDominantStates[i]\n        randomBlocksNonDominantStates[i][j] = _.range(0, numberOfStates).filter(v => (v !== options.randomBlocksDominantStates[i]))\n      }\n    }\n\n    // for non random blocks\n    const dominantMatrix = getDominantCellByRow(transitionMatrix)\n    const dominantTransition = []\n    const nonDominantTransitions = []\n    _.forEach(dominantMatrix, (value, index) => {\n      dominantTransition[index] = vectorToPosition(value)\n      nonDominantTransitions[index] = _.range(0, dominantMatrix.length).filter(v => ((v !== index) && (v !== dominantTransition[index])))\n    })\n\n    promiseSegmentsAndProbesByBlock(options)\n      .then((segments) => {\n        const numberOfRandomBlocks = options.insertRandomBlocksAt.constructor === Array ? options.insertRandomBlocksAt.length : 0\n\n        promiseMultipleSequences(randomTransitionMatrix, { // TODO: replace by a specific randomsequencegenerator able to change the main state\n          numberOfSequences: numberOfRandomBlocks,\n          sequenceLength: segments.numberOfObservationPerBlock,\n        })\n          .then((randomSequences) => {\n            promiseMultipleSequences(transitionMatrix, {\n              numberOfSequences: options.numberOfSequences - numberOfRandomBlocks,\n              sequenceLength: segments.numberOfObservationPerBlock,\n            })\n              .then((smoothedSequences) => {\n                const numberOfBlocks = (segments.block.uniqueValues()).length\n                if (smoothedSequences.length > numberOfBlocks) {\n                  // More sequences than block, select the best sequences\n                  const observedData = []\n                  const errors = []\n                  const kls = []\n                  const sequenceObjects = []\n                  let bestSequence = null // eslint-disable-line\n                  let bestError = null\n                  for (let i = 0; i < smoothedSequences.length; i++) {\n                    observedData[i] = getObservedAndDistanceMatrix(smoothedSequences[i], transitionMatrix) // eslint-disable-line\n                    errors[i] = observedData[i].totalError\n                    kls[i] = matrixKlDivergence(observedData[i].observedMatrix, transitionMatrix)\n                    sequenceObjects.push({\n                      sequence: smoothedSequences[i], // eslint-disable-line\n                      error: errors[i],\n                    })\n                    if ((bestError === null) || (errors[i] < bestError)) {\n                      bestSequence = smoothedSequences[i] // eslint-disable-line\n                      bestError = errors[i]\n                    }\n                  }\n\n                  console.warn(_.sortBy(errors))\n                  let smoothedSequences = _.sortBy(sequenceObjects, 'error').map(o => o.sequence)\n                }\n\n                debuglog(segments)\n\n                // in case the array is not ordered properly do a by block iteration\n                const blocksNumber = segments.block.uniqueValues()\n                let fullSequenceBlock = []\n                let fullSequenceBlockType = []\n                let completeSequence = []\n                let trialType = []\n                let trials = []\n\n                let smoothedSequencesIndex = 0\n                let randomSequencesIndex = 0\n                let sequence\n                let block\n                let blockIndices\n                let probeTransitions\n                let blockType\n                let nonDominantIndices\n                let currentDominantTransitions\n                let currentNonDominantTransitions\n\n                for (let i = 0; i < blocksNumber.length; i++) {\n                  if (options.insertRandomBlocksAt.indexOf(i) !== -1) {\n                    /* --- Random sequence processing --- */\n                    sequence = randomSequences[randomSequencesIndex]\n\n                    currentDominantTransitions = randomBlocksDominantState[randomSequencesIndex]\n                    currentNonDominantTransitions = randomBlocksNonDominantStates[randomSequencesIndex]\n\n                    blockType = 'random'\n\n                    randomSequencesIndex += 1\n                  } else {\n                    /* --- Non random sequence processing --- */\n                    sequence = smoothedSequences[smoothedSequencesIndex]\n\n                    currentDominantTransitions = dominantTransition\n                    currentNonDominantTransitions = nonDominantTransitions\n\n                    blockType = 'normal'\n\n                    smoothedSequencesIndex += 1\n                  }\n\n                  block = blocksNumber[i]\n                  blockIndices = segments.block.indicesOf(block)\n                  const segmentSizesOfBlock = _.clone(segments.segmentSizeSequences) // eslint-disable-line\n                    .filter((value, index) => (blockIndices.indexOf(index) !== -1))\n\n                  // Creates the probeTransitions feedback sequence\n                  probeTransitions = []\n                  nonDominantIndices = [_.random(0, 1), _.random(0, 1), _.random(0, 1), _.random(0, 1)]\n                  const probeSequenceRemaining = _.clone(segments.probeSequences).filter((value, index) => {\n                    // checks that the probe is part of the block\n                    if (blockIndices.indexOf(index) !== -1) {\n                      // checks wether the transition is dominant or non dominant\n                      if (segments.transitionTypes[index] === 1) {\n                        // transition is dominant, pushing a dominant feedback\n                        probeTransitions.push(currentDominantTransitions[value])\n                      } else {\n                        // transition is non dominant, make sure to switch the non dominant transition so it is never twice the same consecutivelly\n                        probeTransitions.push(currentNonDominantTransitions[value][nonDominantIndices[value]])\n\n                        nonDominantIndices[value] += 1\n                        if (nonDominantIndices[value] >= currentNonDominantTransitions[value].length) {\n                          nonDominantIndices[value] = 0\n                        }\n                      }\n                      return (true)\n                    }\n                    return (false)\n                  })\n\n                  let currentObservationIndex = 0\n                  let lastTrial = 0\n                  for (let j = 0; j < blockIndices.length; j++) {\n                    const segmentIndex = blockIndices[j]\n                    const endIndex = currentObservationIndex + segments.segmentSizeSequences[segmentIndex]\n                    if (endIndex > sequence.length) {\n                      throw new Error('StateManager.getFullSequenceForBlock: sequence length is not equal to the total number of observation generated by segment for block')\n                    }\n\n                    const segment = sequence.slice(currentObservationIndex, endIndex)\n                    completeSequence = completeSequence.concat(segment)\n                    trialType = trialType.concat(rep('learning', segment.length))\n                    currentObservationIndex = endIndex\n\n                    // let probeIndex = segmentIndex;\n                    const probePosition = probeSequenceRemaining[j]\n                    const feedback = probeTransitions[j]\n\n                    // old way ... why ??\n                    // TODO think of a way to separate probesequence indx and segment index?? why...\n                    // let probeIndex = _.random(0, probeSequenceRemaining.length - 1);\n                    // let probePosition = probeSequenceRemaining.splice(probeIndex, 1);\n                    // let feedback = probeTransitions.splice(probeIndex, 1);\n\n                    completeSequence = (completeSequence.concat(probePosition)).concat(feedback)\n                    trialType = trialType.concat(['probe', 'feedback'])\n\n                    fullSequenceBlock = fullSequenceBlock.concat(rep(block, segment.length + 2))\n                    fullSequenceBlockType = fullSequenceBlockType.concat(rep(blockType, segment.length + 2))\n                    // get trials\n                    const N = segment.length + 2\n                    const addTrials = Array(...new Array(N)).map((_, i) => i + lastTrial + 1)\n                    lastTrial = addTrials[addTrials.length - 1]\n                    trials = trials.concat(addTrials)\n\n                    // trial = trial.concat([...Array(segment.length + 2).keys()].map(x => x+lastTrial))\n                  }\n                }\n\n                resolve({\n                  fullSequence: completeSequence,\n                  trialType,\n                  block: fullSequenceBlock,\n                  blockType: fullSequenceBlockType,\n                  trial: trials,\n                })\n              })\n          })\n      })\n  })\n}\n\n\nconst getFullSequenceObjectForClassicLevels = function (sequence, options = {}) {\n  const baseOptions = {\n    trialType: 'classic',\n    blockType: 'normal',\n    block: 0,\n  }\n\n  options = _.extend(baseOptions, options)\n\n  let t = 0\n  return ({\n    fullSequence: sequence,\n    block: rep([options.block], sequence.length),\n    blockType: rep([options.blockType], sequence.length),\n    trialType: rep([options.trialType], sequence.length),\n    trial: rep([0], sequence.length).map(() => {\n      t += 1\n      return t\n    }),\n  })\n}\n\nconst insertSequenceObjectAtBlock = function (baseObject = mandatory(), insertedObject = mandatory(), atBlocks = mandatory()) {\n  const newObject = {\n    fullSequence: [],\n    block: [],\n    trial: [],\n    trialType: [],\n    blockType: [],\n  }\n\n  if (atBlocks.constructor === Number) {\n    atBlocks = [atBlocks]\n  }\n\n  let offset = 0\n  let currentBlock = baseObject.block[0]\n  let baseCurrentBlock = currentBlock\n  for (let i = 0; i < baseObject.block.length; i++) {\n    if (atBlocks.indexOf(baseObject.block[i]) !== -1) {\n      // Get rid of this insert marker\n      atBlocks = atBlocks.filter(v => (v !== baseObject.block[i]))\n      const insertedBlock = insertedObject.block[offset]\n\n      if (baseObject.block[i] !== 0) { currentBlock += 1 } // Allows to start at 0 if marker was at 0\n\n      while (insertedObject.block[offset] === insertedBlock) {\n        newObject.fullSequence.push(insertedObject.fullSequence[offset])\n        newObject.block.push(currentBlock)\n        newObject.trial.push(insertedObject.trial[offset])\n        newObject.trialType.push(insertedObject.trialType[offset])\n        newObject.blockType.push(insertedObject.blockType[offset])\n        offset += 1\n      }\n    }\n\n    if (baseObject.block[i] !== baseCurrentBlock) {\n      currentBlock += 1\n      baseCurrentBlock = baseObject.block[i]\n    }\n\n    newObject.fullSequence.push(baseObject.fullSequence[i])\n    newObject.block.push(currentBlock)\n    newObject.trial.push(baseObject.trial[i])\n    newObject.trialType.push(baseObject.trialType[i])\n    newObject.blockType.push(baseObject.blockType[i])\n  }\n\n  // Take care of an addition at the end - all remaining blocks of inserted object will be added\n  if ((atBlocks.indexOf(baseObject.block.max() + 1) !== -1) && (offset < insertedObject.block.length)) {\n    let insertedBlock = -1\n    while (offset < insertedObject.block.length) {\n      if (insertedBlock !== insertedObject.block[offset]) {\n        currentBlock += 1\n        insertedBlock = insertedObject.block[offset]\n      }\n\n      newObject.fullSequence.push(insertedObject.fullSequence[offset])\n      newObject.block.push(currentBlock)\n      newObject.trial.push(insertedObject.trial[offset])\n      newObject.trialType.push(insertedObject.trialType[offset])\n      newObject.blockType.push(insertedObject.blockType[offset])\n      offset += 1\n    }\n  }\n\n  return newObject\n}\n\nconst promiseBestSequencesForAllBlocksAndSave = function () {\n  // / NOT IMPLEMENTED\n  // return new Promise(function (resolve, reject) {\n\n  //   // Recovers options\n  //   // Prepare to generate x amount of sequence and select the best one\n\n  //   let baseOptions = {\n  //     levelOne: {\n  //       numberOfSequences: 1,\n  //       sequenceLength: 75,\n  //       dominantProbability: 1\n  //     },\n  //     levelTwo: {\n  //       numberOfSequences: 500,\n  //       sequenceLength: 120,\n  //       dominantProbability: 0.95\n  //     },\n  //     levelThree: {\n  //       numberOfSequences: 500,\n  //       sequenceLength: 150,\n  //       dominantProbability: 0.85\n  //     },\n  //     levelFour: {\n  //       numberOfSequences: 500,\n  //       sequenceLength: 120\n  //     }\n  //   };\n\n  //   // Generate level 1\n  //   taskObject.promiseMultipleSequences(transitionMatrix, {\n  //       numberOfSequences: 6,\n  //       sequenceLength: segments.numberOfObservationPerBlock\n  //     })\n  //     .then(function (smoothedSequences) {\n  //       debuglog(segments);\n  //       let observedData = [];\n  //       let errors = [];\n  //       let kls = [];\n  //       let sequenceObjects = [];\n  //       let bestSequence = null;\n  //       let bestError = null;\n  //       for (let i = 0; i < smoothedSequences.length; i++) {\n  //         observedData[i] = taskObject.getObservedAndDistanceMatrix(smoothedSequences[i], transitionMatrix);\n  //         errors[i] = observedData[i].totalError;\n  //         kls[i] = taskObject.matrixKlDivergence(observedData[i].observedMatrix, transitionMatrix);\n  //         sequenceObjects.push({\n  //           sequence: smoothedSequences[i],\n  //           error: errors[i]\n  //         });\n  //         if ((bestError === null) || (errors[i] < bestError)) {\n  //           bestSequence = smoothedSequences[i];\n  //           bestError = errors[i];\n  //         }\n  //       }\n  //     });\n\n  //   // Generate level 2\n  //   // Generate level 3\n  //   // Generate level 4\n  //   resolve([{}, {}, {}, {}]);\n  // });\n}\n\n\nconst getDensity = function (elements, nsteps = 100, windowSize = 3) { // eslint-disable-line\n  if (elements.some(isNaN)) {\n    throw new Error('TaskObject.getDensity: elements are not all numeric.')\n  }\n\n  const range = [math.min(elements), math.max(elements)]\n\n  const stepSize = (range[1] - range[0]) / nsteps\n  // const windowLenght = stepSize * windowSize\n\n  const elementsInWindow = []\n  const windowPosition = []\n  const density = []\n  const points = []\n  for (let i = 0; i < nsteps; i++) {\n    const subset = _.filter(elements, (e) => {\n      const centered = e - range[0] - (i * stepSize)\n      return ((centered >= 0) && (centered < stepSize))\n    })\n\n    windowPosition[i] = (i + 0.5) * stepSize\n    elementsInWindow[i] = subset.length\n    density[i] = elementsInWindow[i] / elements.length\n    points[i] = {\n      x: windowPosition[i],\n      y: density[i],\n    }\n  }\n\n  return ({\n    windows: {\n      position: windowPosition,\n      numberOfElements: elementsInWindow,\n      density,\n    },\n    points,\n    chartOptions: {\n      type: 'line',\n      data: {\n        datasets: [{\n          label: 'Density',\n          data: points,\n        }],\n      },\n      options: {\n        scales: {\n          xAxes: [{\n            type: 'linear',\n            position: 'bottom',\n          }],\n        },\n      },\n    },\n  })\n}\n\nconst randomColor = function (opacity) {\n  return `rgba(${Math.round(Math.random() * 255)},${Math.round(Math.random() * 255)},${Math.round(Math.random() * 255)},${opacity || '.3'})`\n}\n\nconst computeDurationEstimate = function (options = {}) {\n  const parametersBase = {\n    dominantProbability: 0.76,\n    minNumberOfObservationsPerLearning: 3,\n    maxNumberOfObservationsPerLearning: 7,\n    observationDuration: 500,\n    interObservationDuration: 50, // to add ?\n    minTimeToPredict: 2000,\n    maxTimeToPredict: 5000,\n    feedbackDuration: 500,\n    minISIAfterLearning: 1000,\n    maxISIAfterLearning: 1500,\n    minISIAfterFeedback: 3000,\n    maxISIAfterFeedback: 5000,\n    rabbitAutoTransition: false,\n    rabbitDominantProbability: 0.6,\n    observationSegmentSizes: [3, 4, 5],\n    observationSegmentRepetitionPerBlock: 2,\n    numberOfBlocks: 6,\n    numberOfRandomBlocks: 2,\n    feedbackType: 'transition',\n  }\n\n  options = _.extend(parametersBase, options)\n\n  // number of observation = sum(segment sizes) * segment repetition per block\n  const numberOfObservationPerLevel = math.sum(options.observationSegmentSizes) * options.observationSegmentRepetitionPerBlock\n\n  // duration of one observation = observationDuration (add inter observation duration ?)\n  const oneObservationDuration = options.observationDuration\n\n  // observation duration for one block\n  const observationsDurationPerBlock = numberOfObservationPerLevel * oneObservationDuration\n\n  // number of prediction per block\n  const numberOfPredictionEventsPerBlock = options.observationSegmentSizes.length * options.observationSegmentRepetitionPerBlock\n\n  // min max and mean duration of one prediction event stored in a matrix\n  // timeDurationMatrix 4*2 min, max\n  const timeDurationMatrix = math.matrix([\n    [options.minISIAfterLearning, options.maxISIAfterLearning],\n    [options.minTimeToPredict, options.maxTimeToPredict],\n    [options.feedbackDuration, options.feedbackDuration],\n    [options.maxISIAfterFeedback, options.maxISIAfterFeedback],\n  ])\n\n  // factorMatrix 2*3 min max mean\n  const factorMatrix = math.matrix([\n    [1, 0, 1 / 2],\n    [0, 1, 1 / 2],\n  ])\n\n  // predictionDurationMatrix 4*3\n  const predictionDurationMatrix = math.multiply(timeDurationMatrix, factorMatrix)\n\n  // sumPredictionDurationVector 1*3\n  const sumPredictionDurationVector = math.multiply(math.matrix([1, 1, 1, 1]), predictionDurationMatrix)\n\n  const predictionsDurationPerBlock = math.multiply(sumPredictionDurationVector, numberOfPredictionEventsPerBlock)\n\n  // duration of one block\n  const observationDurationMatrix = math.matrix(rep(observationsDurationPerBlock, 3))\n\n  const durationPerBlock = math.add(observationDurationMatrix, predictionsDurationPerBlock)\n\n  // let total duration for one level min max mean in miliseconds\n  const totalDuration = (math.multiply(durationPerBlock, (options.numberOfBlocks + options.numberOfRandomBlocks))).toArray()\n\n  return ({\n    min: totalDuration[0],\n    max: totalDuration[1],\n    mean: totalDuration[2],\n  })\n}\n\n// Object.defineProperty(TaskObject, \"durationLevelOne\", {\n//     get: function durationLevelOne() {\n//         return(this.computeDurationEstimate(this.))\n//     }\n// });\n\nconst softMaxByRow = function (model = mandatory(), temperature = 0.2) {\n  const proportionArray = []\n  const sumRow = []\n  for (let i = 0; i < model.length; i++) {\n    if (model[i].constructor === Array) {\n      sumRow[i] = math.sum(math.exp(math.divide(model[i], temperature)))\n      proportionArray[i] = []\n      for (let j = 0; j < model[i].length; j++) {\n        proportionArray[i][j] = math.exp(model[i][j] / temperature) / sumRow[i]\n      }\n    } else {\n      sumRow[i] = math.sum(math.exp(math.divide(model, temperature)))\n      proportionArray[i] = math.exp(model[i] / temperature) / sumRow[i]\n    }\n  }\n\n  return (proportionArray)\n}\n\n\nconst prediction = function (model = mandatory(), position = mandatory(), options = {}) {\n  model = getValidTransitionArray(model)\n  let modelProportions\n\n  const optionsBase = {\n    algorithm: 'SOFTMAX',\n    temperature: 2,\n  }\n\n  options = _.extend(optionsBase, options)\n\n  if (options.algorithm === 'SOFTMAX') {\n    modelProportions = softMaxByRow(model)\n  } else if (options.algorithm === 'MAX') {\n    modelProportions = getDominantCellByRow(getProportionArray(model))\n  } else {\n    modelProportions = getProportionArray(model)\n  }\n\n  return (sampleNextTransition(modelProportions, position))\n}\n\n\nconst learnerPredict = function (sequence = mandatory(), options = {}) {\n  const optionsBase = {\n    learnerType: 'structural',\n    rules: ['mainTransitionOut', 'mainTransitionIn'], // noSquare, noBack, noSelf, or All\n    offset: 0.01,\n    learningRate: 0.2,\n    temperature: 2,\n    trueModel: null, // if set to a transition matrix the function also returns accuracy compared to optimal performer\n    trialType: null,\n    algorithm: 'SOFTMAX',\n  }\n\n  options = _.extend(optionsBase, options)\n\n  /* --- Check if the offset to prefill action values [0,1] bording values --- */\n\n  if ((options.offset > 1) || (options.offset < 0)) {\n    throw new Error('TaskObject.learnerPredict: offset needs to be between 0 and 1.')\n  }\n\n  const algorithm = options.algorithm\n  if (['SOFTMAX', 'MAX', 'PROPORTIONAL'].indexOf(algorithm) === -1) {\n    throw new Error('TaskObject.learnerPredict: algorithm is of invalid type (SOFTMAX, MAX or PROPORTIONAL).')\n  }\n\n  if (((options.rules).indexOf('dominantStructure') !== -1) && (options.trueModel === null)) {\n    throw new Error('TaskObject.learnerPredict: using the dominantStructure rule necessitate options.trueModel to be set.')\n  }\n\n  /* --- constants --- */\n  // const trialLearning = 'learning'\n  // const trialProbe = 'probe'\n  // const trialFeedback = 'feedback'\n\n  /* --- Check if trial type is null or of the correct format --- */\n  if (options.trialType !== null) {\n    if (options.trialType.constructor !== Array) {\n      throw new Error('TaskObject.learnerPredict: options.trialType should be an array or null')\n    }\n\n    if (options.trialType.length !== sequence.length) {\n      throw new Error('TaskObject.learnerPredict: options.trialType should be of same length')\n    }\n  }\n\n  const observedMatrix = matrix(4, 4, 0)\n  const model = matrix(4, 4, options.offset)\n  const predictions = []\n  const optimalPredictions = []\n  const sameAsOptimal = []\n  const sameAsOptimalProbability = []\n  const sameAsSequence = []\n  const sameAsSequenceProbability = []\n\n  /* --- Has the learner learned that there is no self transition ? --- */\n  if ((options.learnerType === 'structural') && ((options.rules).indexOf('noSelf') !== -1)) {\n    // set auto transition to 0\n    diag(model, 0)\n  }\n\n  /* --- Start learning --- */\n\n  for (let i = 0; i < sequence.length; i++) {\n    const currentPosition = sequence[i]\n\n    /* --- Do first prediction --- */\n    const predictionPosition = prediction(model, currentPosition, {\n      algorithm,\n    })\n    predictions.push(predictionPosition)\n\n    let dominantArray = null\n    if (options.trueModel !== null) {\n      dominantArray = getDominantCellByRow(options.trueModel)\n      const optimalPrediction = sampleNextTransition(dominantArray, currentPosition)\n      optimalPredictions.push(optimalPrediction)\n      sameAsOptimal.push((optimalPrediction === predictionPosition) ? 1 : 0)\n      sameAsOptimalProbability.push(model[currentPosition][optimalPrediction])\n    }\n\n    /* --- At the end of the sequence stop learning --- */\n\n    if (i === sequence.length - 1) {\n      break\n    }\n\n    /*\n     * If position is a feedback or a learning that leads to a probe,\n     * do not learn (probe and observation sequence are independant)\n     */\n    if (options.trialType !== null) {\n      // if trial type is not set do not fill the array to limit the risk of false conclusions\n      if ((options.trialType[i + 1] === 'probe') || (options.trialType[i] === 'feedback')) {\n        sameAsSequence.push(null)\n        sameAsSequenceProbability.push(null)\n        continue\n      } else {\n        sameAsSequence.push((predictionPosition === sequence[i + 1]) ? 1 : 0)\n        sameAsSequenceProbability.push(model[currentPosition][sequence[i + 1]])\n      }\n    }\n\n    /* --- Learn from next transition --- */\n\n    /*\n     * Reinforcement learning derived from Q Learning,\n     * discout factor of 0 due to the design of the task (markov chain ergodic and graph strongly connected)\n     */\n    const targetPosition = sequence[i + 1]\n    observedMatrix[currentPosition][targetPosition] += 1\n    // debuglog(\"options.trialType i+1: \" + options.trialType[i + 1]);\n    // debuglog(\"options.trialType i: \" + options.trialType[i]);\n    console.warn(`${currentPosition}${sequence[i + 1]}`)\n    /* --- learnerType determine the update --- */\n    switch (options.learnerType) {\n      case 'structural':\n        if ((options.rules).indexOf('dominantStructure') !== -1) {\n        // check if the transition is dominant\n          let dominant = false\n          if (dominantArray[currentPosition][targetPosition] === 1) {\n            dominant = true\n          }\n        // update model\n          for (let positionIndex = 0; positionIndex < model.length; positionIndex++) {\n            model[positionIndex] = _.map(model[positionIndex], (value, index) => {\n              if ((dominant) && (dominantArray[positionIndex][index] === 1)) {\n                return (value + ((options.learningRate * (1 - value)) / 4))\n              } else if ((!dominant) && (dominantArray[positionIndex][index] !== 1)) {\n                return (value + ((options.learningRate * (1 - value)) / 12))\n              }\n              return value\n            })\n          }\n        } else {\n          if ((options.rules).indexOf('mainTransitionOut') !== -1) {\n          // penalize other transitions from same origin state i\n            model[currentPosition] = _.map(model[currentPosition], (value, index) => {\n              if (index !== targetPosition) {\n                return (value * (1 - options.learningRate))\n              }\n              return (value + (options.learningRate * (1 - value)))\n            })\n          }\n\n          if ((options.rules).indexOf('mainTransitionIn') !== -1) {\n          // penalize other transitions going to same target state i+1\n            for (let positionIndex = 0; positionIndex < model.length; positionIndex++) {\n              if ((positionIndex !== currentPosition) && (positionIndex !== targetPosition)) {\n                model[positionIndex][targetPosition] *= (1 - options.learningRate)\n              }\n            }\n          }\n        }\n\n        break\n      case 'nonStructural': {\n        const value = model[currentPosition][targetPosition]\n        model[currentPosition][targetPosition] = value + (options.learningRate * (1 - value))\n        break }\n      default:\n        throw new Error(`TaskObject.learnerPredict: invalid learner type ${options.learnerType}`)\n    }\n  }\n\n  /* --- Transform the model into proportions after learning --- */\n  const modelProportions = getProportionArray(model)\n\n  /* --- Setup return object --- */\n  const returnObject = {\n    finalModel: modelProportions,\n    predictions,\n    sameAsSequence,\n    sameAsSequenceProbability,\n  }\n\n  if (optimalPredictions.length > 0) {\n    returnObject.optimalPredictions = optimalPredictions\n    returnObject.sameAsOptimal = sameAsOptimal\n    returnObject.sameAsOptimalProbability = sameAsOptimalProbability\n  }\n\n  return (returnObject)\n}\n\n// usefull for unittest ?\nconst updateWithRule = function (model = mandatory(), rule = mandatory(), learningRate = mandatory()) { // eslint-disable-line\n  switch (rule) {\n    case 'mainTransitionOut':\n    case 'mainTransitionIn':\n    case 'noSelf':\n    case 'noSquare':\n    case 'noBack':\n    case 'all':\n      break\n    default:\n      throw new Error('taskObject.updateWithRule: invalid rule')\n  }\n}\n\n\n/* ======= Sampling functions ======= */\n\n/**\n * sampleExponential - Function that return a random sample from an exponential\n * distribution of the form\n *    P(x,lambda) = lambda * exp (-lambda*x)\n *\n * With the rate parameter lambda = 1 / mean\n *\n * @param {number} [mean=1]     Mean of the distribution\n * @param {null}   [min=null]   Min value returned\n * @param {null}   [max=null]   Max value returned\n * @param {null}   [jitter=null] If max or min value reached, to avoid a heap up on the boundaries. If null, default to 5% of mean.\n * @param {array}  [pWindow=[]] Window to restrict the probability default to [0.001,0.999]\n *\n * @returns {numeric} Sample value\n */\nconst sampleExponential = function (mean = 1, min = null, max = null, jitter = null, pWindow = [0.001, 0.999]) {\n  const p = math.random(pWindow[0], pWindow[1])\n  const lambda = 1 / mean\n  // p = math.min(Math.max(p, ), );\n  jitter = jitter === null ? mean * 0.05 : jitter\n\n  let sample = (-Math.log(1 - p) / lambda)\n\n  sample = min === null ? sample : Math.max(sample, min + (Math.random() * jitter))\n  sample = max === null ? sample : Math.min(sample, max - (Math.random() * jitter))\n\n  // Consider p as the CDF to return a sample value\n  return sample\n}\n\nexport { sampleExponential,\n  softMaxByRow,\n  prediction,\n  updateWithRule,\n  learnerPredict,\n  computeDurationEstimate,\n  randomColor,\n  getDensity,\n  promiseBestSequencesForAllBlocksAndSave,\n  insertSequenceObjectAtBlock,\n  getFullSequenceObjectForClassicLevels,\n  promiseFullSequenceForOneLevel,\n  promiseFullSequenceForIntermitentPrediction,\n  getFullSequenceObjectForRandomBlackoutBlock,\n  promiseSegmentsAndProbesByBlock,\n  promiseMultipleRandomSequences,\n  promiseMultipleSequences,\n  promiseSequenceFromTransitionMatrix,\n  smoothSequenceDistribution,\n  getObservedAndDistanceMatrix,\n  getObservedArrays,\n  matrixKlDivergence,\n  getDominantProbabilityByRow,\n  getDominantCellByRow,\n  getValidTransitionArray,\n  sampleNextTransition,\n  sampleTransitions,\n  vectorToPosition,\n  positionToVector,\n  getZeroOrderTransitionMatrix,\n  getRandomTransitionMatrix,\n  getTransitionMatrixFromBase,\n  computeValidStateSpace,\n  getBaseGraphMatrices,\n  getAspectRatio,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/utilities/taskUtilities.js","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"experiment-boxes\",\"commonjs2\":\"experiment-boxes\",\"amd\":\"experiment-boxes\",\"root\":\"experimentBoxes\"}\n// module id = 4\n// module chunks = 0","import _ from 'lodash'\nimport BABYLON from 'experiment-babylon-js'\nimport {\n  EventData,\n  Array,\n  String, // eslint-disable-line\n  Deferred,\n  debuglog,\n  debugWarn,\n  hasConstructor,\n  Loader,\n  delay,\n} from 'experiment-js'\n\nimport { getAspectRatio } from '../../../utilities/taskUtilities'\n\n/* --- Redraw assets due to bug when resize NOTE bug origin Babylon --- */\nconst redrawAssets = function () {\n  const rabbitFaceTexture = this.taskObject.cloneAssetIntoScene(this.R.get.rabbitFace, this.scene)\n  const wolfFaceTexture = this.taskObject.cloneAssetIntoScene(this.R.get.wolfFace, this.scene)\n  const crossSheet = this.taskObject.cloneAssetIntoScene(this.R.get.crossSheet, this.scene)\n  const scene = this.scene\n  wolfFaceTexture.hasAlpha = true\n  rabbitFaceTexture.hasAlpha = true\n  crossSheet.hasAlpha = true\n\n  let elements2D = this.stateManager.get('elements2D')\n\n\n  const canvasOptions = {\n    id: 'initialCanvas',\n    parent: scene.initialCanvas.parent,\n    roundRadius: scene.initialCanvas.roundRadius,\n    borderThickness: 0,\n    fill: scene.initialCanvas.fill,\n    position: new BABYLON.Vector2(0, 0),\n    size: this.taskObject.renderSize,\n    zOrder: 1,\n  }\n\n  const initialCanvas = new BABYLON.Rectangle2D(canvasOptions)\n\n  scene.initialCanvas.dispose()\n  scene.initialCanvas = initialCanvas\n\n  scene.initialCanvas.lastResize = this.taskObject.timeInMs\n  // scene.initialCanvas.parent.backgroundFill = BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(Math.random(), 0.7, 0.7, 1))\n\n  let crossSprite = this.R.get.cross_predict\n  let crossOpacity = 0\n  let loaderOpacity = 1\n  let loaderValue = 0\n  let wolfOpacity = 0\n  let rabbitOpacity = 0\n  let agentType = 'wolf'\n  let tiles = []\n  if (elements2D !== null) {\n    elements2D.canvas = scene.initialCanvas\n    crossOpacity = elements2D.cross.opacity\n    crossSprite = elements2D.cross.spriteFrame\n    elements2D.cross.levelVisible = false\n\n    wolfOpacity = elements2D.wolfFaceSprite.opacity\n    elements2D.wolfFaceSprite.levelVisible = false\n\n    rabbitOpacity = elements2D.rabbitFaceSprite.opacity\n    elements2D.rabbitFaceSprite.levelVisible = false\n\n    agentType = elements2D.agentType\n\n\n    loaderOpacity = elements2D.loader.opacity\n    loaderValue = elements2D.loader.value\n    elements2D.loader.levelVisible = false\n\n    if ((elements2D.tiles) && (elements2D.tiles.length) && ('levelVisible' in elements2D.tiles[0])) {\n      const levelV = elements2D.tiles[0].levelVisible\n      let options = {}\n      if ((hasConstructor(Array, elements2D.keysInfobox)) && (hasConstructor(BABYLON.Rectangle2D, elements2D.keysInfobox[0])) && (elements2D.keysInfobox[0].levelVisible)) {\n        options = { withKeys: 'dkmc' }\n      }\n      this.stateManager.call('drawTiles', options)\n      elements2D.tiles.forEach((e) => { e.levelVisible = levelV })\n    }\n    tiles = elements2D.tiles\n  }\n\n\n  // this.scene.initialCanvas.fill = BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(Math.random(), 0.7, 0.7, 1))\n  // this.scene.initialCanvas.size = this.taskObject.renderSize\n  // this.scene.initialCanvas.position.x = 0 // this.taskObject.renderSize.width / 2\n  // this.scene.initialCanvas.position.y = 0 // this.taskObject.renderSize.height / 2\n\n  // canvasOptions = {\n  //     id: 'initialCanvas',\n  //     parent: canvas,\n  //     roundRadius: options.backgroundRoundRadius,\n  //     borderThickness: 0,\n  //     fill: BABYLON.Canvas2D.GetSolidColorBrush(options.canvasBackground),\n  //     marginAlignment: 'h: center, v: center',\n  //     size: customSized,\n  //     zOrder: 1,\n  //   }\n\n  const cross = new BABYLON.Sprite2D(crossSheet, {\n    parent: this.scene.initialCanvas,\n    id: 'cross',\n    marginAlignment: 'v: center, h: center',\n    spriteSize: new BABYLON.Size(20, 20),\n    spriteLocation: new BABYLON.Vector2(0, 0),\n  })\n\n  cross.spriteFrame = crossSprite\n  cross.opacity = crossOpacity\n\n  /* --- Setup the loader --- */\n  const loader = new Loader({ parent: this.scene.initialCanvas, size: new BABYLON.Size(25, 25), border: BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0.7, 0.7, 0.7, 1)), borderThickness: 2 })\n  loader.value = loaderValue\n  loader.opacity = loaderOpacity\n  loader.margin.leftPixels = 1\n  loader.margin.rightPixels = 0\n  loader.margin.topPixels = 0\n  loader.margin.bottomPixels = 0.5\n\n\n  /* --- Create Sprites --- */\n  const minSize = Math.min(this.taskObject.renderSize.width, this.taskObject.renderSize.height)\n  const wolfFaceSprite = new BABYLON.Sprite2D(wolfFaceTexture, {\n    parent: this.scene.initialCanvas,\n    id: 'wolfFaceSprite',\n    origin: BABYLON.Vector2.Zero(),\n    marginAlignment: 'v: center, h: center',\n    zOrder: 1,\n    size: new BABYLON.Size(minSize * this.R.get.agent_scale, (minSize * this.R.get.agent_scale) / getAspectRatio(wolfFaceTexture)),\n  })\n\n  wolfFaceSprite.opacity = wolfOpacity\n\n  const rabbitFaceSprite = new BABYLON.Sprite2D(rabbitFaceTexture, {\n    parent: this.scene.initialCanvas,\n    id: 'rabbitFaceSprite',\n    origin: BABYLON.Vector2.Zero(),\n    marginAlignment: 'v: center, h: center',\n    size: new BABYLON.Size(minSize * this.R.get.agent_scale, (minSize * this.R.get.agent_scale) / getAspectRatio(rabbitFaceTexture)),\n    zOrder: 1,\n  })\n\n  rabbitFaceSprite.opacity = rabbitOpacity // TODO Make that levelVisible = false\n\n  const agent = agentType === 'wolf' ? wolfFaceSprite : rabbitFaceSprite\n\n  /* --- Set up the resize hook --- */\n  // scene.updateContentFrame = () => {\n  //   wolfFaceSprite.size = new BABYLON.Size(taskObject.renderSize.width * R.get.agent_scale, (taskObject.renderSize.width * R.get.agent_scale) / getAspectRatio(wolfFaceTexture))\n  //   rabbitFaceSprite.size = new BABYLON.Size(taskObject.renderSize.width * R.get.agent_scale, (taskObject.renderSize.width * R.get.agent_scale) / getAspectRatio(rabbitFaceTexture))\n  // }\n\n  /* --- Setup stateManager globals --- */\n  elements2D = {\n    canvas: scene.initialCanvas,\n    cross,\n    wolfFaceSprite,\n    rabbitFaceSprite,\n    agent,\n    agentType: 'wolf',\n    tiles,\n    loader,\n  }\n\n  this.stateManager.setGlobal('elements2D', elements2D)\n  this.stateManager.call('moveAgentToTile', { tile: this.stateManager.get('lastMove', 1) })\n}\n\n/* --- Setup stateManager functions --- */\nconst clearTiles = function () {\n  if (typeof this.taskObject === 'undefined') {\n    throw new Error('stateManager.clearTiles: this.taskObject is undefined')\n  }\n\n  const stateManager = this.stateManager\n\n  const elements2D = stateManager.get('elements2D')\n  const canvas = elements2D.canvas\n\n  if (elements2D.tiles.length > 0) {\n    const ntile = elements2D.tiles.length\n    for (let j = 0; j < ntile; j++) {\n      elements2D.tiles[j].dispose()\n    }\n    elements2D.tiles = []\n\n    for (let i = 0; i < ntile; i++) {\n      const tileOpacity = 0\n\n      elements2D.tiles[i] = new BABYLON.Rectangle2D({\n        parent: canvas,\n        id: `tile${i}`,\n        position: new BABYLON.Vector2(1, 1),\n        width: new BABYLON.Vector2(1, 1),\n        height: new BABYLON.Vector2(1, 1),\n        border: null,\n        opacity: 0,\n        borderThickness: null,\n        fill: BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0.8, 0.8, 0.8, tileOpacity)),\n        zOrder: 0.1,\n      })\n    }\n\n    debuglog('stateManager.clearTiles: resolved')\n  } else {\n    debugWarn('stateManager.clearTiles: resolved - no tile to clear')\n  }\n\n  return (elements2D.tiles)\n}\n\nconst addButton = function (options = null) {\n  if (typeof this.taskObject === 'undefined') {\n    throw new Error('stateManager.addButton: this.taskObject is undefined')\n  }\n\n  const stateManager = this.stateManager\n  const canvas = stateManager.get('elements2D').canvas\n\n  const baseOptions = {\n    id: `button${stateManager.timeInMs}`,\n    text: 'text',\n    x: 50,\n    y: 50,\n    width: 100,\n    height: 50,\n    fill: BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0.8, 0.8, 0.8, 1)),\n    clickEventData: null,\n    fontName: '30pt Arial',\n    baseOpacity: 0.8,\n    hoverOpacity: 1,\n    zOrder: -0.5,\n    marginAlignment: null,\n    fontSignedDistanceField: true,\n    margin: {},\n    padding: {},\n    parent: canvas,\n  }\n\n  baseOptions.margin.leftPixels = 0\n  baseOptions.margin.rightPixels = 0\n  baseOptions.margin.topPixels = 0\n  baseOptions.margin.bottomPixels = 0\n  baseOptions.padding.leftPixels = 0\n  baseOptions.padding.rightPixels = 0\n  baseOptions.padding.topPixels = 0\n  baseOptions.padding.bottomPixels = 0\n  baseOptions.margin = _.extend(baseOptions.margin, options.margin)\n  baseOptions.padding = _.extend(baseOptions.padding, options.padding)\n  options.margin = baseOptions.margin\n  options.padding = baseOptions.padding\n\n  // extend options\n  options = _.extend(baseOptions, options)\n\n  let buttonOptions = {}\n  let margin = {}\n  let padding = {}\n  if (options.marginAlignment === null) {\n    buttonOptions = {\n      parent: options.parent,\n      id: options.id,\n      x: options.x,\n      y: options.y,\n      width: options.width,\n      height: options.height,\n      fill: options.fill,\n      zOrder: options.zOrder,\n      roundRadius: 0,\n      children: [new BABYLON.Text2D(options.text, {\n        fontName: options.fontName,\n        marginVAlignment: 'v: center',\n        fontSignedDistanceField: options.fontSignedDistanceField,\n        marginHAlignment: 3,\n      })],\n    }\n  } else {\n    buttonOptions = {\n      parent: options.parent,\n      id: options.id,\n      width: options.width,\n      height: options.height,\n      fill: options.fill,\n      zOrder: options.zOrder,\n      marginAlignment: options.marginAlignment,\n      roundRadius: 0,\n      children: [new BABYLON.Text2D(options.text, {\n        fontName: options.fontName,\n        marginVAlignment: 'v: center',\n        fontSignedDistanceField: options.fontSignedDistanceField,\n        marginHAlignment: 3,\n      })],\n    }\n    margin = options.margin\n    padding = options.padding\n  }\n\n  // create button and add to canvas\n  const buttonRect = new BABYLON.Rectangle2D(buttonOptions)\n\n  buttonRect.opacity = options.baseOpacity\n\n  if (margin !== null) {\n    buttonRect.margin.rightPixels = options.margin.rightPixels // TODO make that a specific function in the framework\n    buttonRect.margin.leftPixels = options.margin.leftPixels\n    buttonRect.margin.topPixels = options.margin.topPixels\n    buttonRect.margin.bottomPixels = options.margin.bottomPixels\n  }\n\n  if (padding !== null) {\n    buttonRect.padding.rightPixels = padding.rightPixels\n    buttonRect.padding.leftPixels = padding.leftPixels\n    buttonRect.padding.topPixels = padding.topPixels\n    buttonRect.padding.bottomPixels = padding.bottomPixels\n  }\n\n  // Add an observable for hovering\n  buttonRect.pointerEventObservable.add(() => {\n    buttonRect.opacity = options.hoverOpacity\n  }, BABYLON.PrimitivePointerInfo.PointerOver)\n\n  buttonRect.pointerEventObservable.add(() => {\n    buttonRect.opacity = options.baseOpacity\n  }, BABYLON.PrimitivePointerInfo.PointerOut)\n\n  // Add an observable for clicking\n  if ((options.clickEventData !== null) && (options.clickEventData.constructor === EventData)) {\n    buttonRect.pointerEventObservable.add(() => {\n      options.clickEventData.happenedAt = stateManager.timeInMs\n      options.clickEventData.data.button = buttonRect.id\n\n      stateManager.addEvent(options.clickEventData)\n    }, BABYLON.PrimitivePointerInfo.PointerUp)\n  }\n\n  return (buttonRect)\n}\n\nconst disposeOfButtons = function () {\n  const elements2D = this.stateManager.get('elements2D')\n\n  if (typeof elements2D.levelButtons !== 'undefined') {\n    if (elements2D.levelButtons.constructor === Array) {\n      for (let i = 0; i < elements2D.levelButtons.length; i++) {\n        elements2D.levelButtons[i].dispose()\n      }\n      elements2D.levelButtons = []\n    }\n  }\n\n  return ('disposeOfButtons: buttons disposed.')\n}\n\nconst getTileSize = function (type = 'normal') { // eslint-disable-line\n  if (typeof this.taskObject === 'undefined') {\n    return ('stateManager.drawTiles: this.taskObject is undefined')\n  }\n\n  const taskObject = this.taskObject\n  const R = this.R\n\n  const greaterLength = Math.min((taskObject.renderSize.width * R.get.agent_scale) * R.get.tile_scale, (taskObject.renderSize.height * R.get.agent_scale) * R.get.tile_scale)\n\n  return (new BABYLON.Vector2(greaterLength, greaterLength))\n  // TODO ?\n  // if (type == \"normal\") {\n  //\n  // } else {\n  //\n  // }\n}\n\nconst setMargins = function (prim, margin) {\n  prim.margin.rightPixels = margin.rightPixels // TODO make that a specific function in the framework\n  prim.margin.leftPixels = margin.leftPixels\n  prim.margin.topPixels = margin.topPixels\n  prim.margin.bottomPixels = margin.bottomPixels\n}\n\nconst drawTiles = function (options = null) {\n  if (typeof this.taskObject === 'undefined') {\n    return ('stateManager.drawTiles: this.taskObject is undefined')\n  }\n\n  const baseOptions = {\n    hightlight: -1,\n    type: 'learning',\n    withKeys: false,\n    fontName: '14pt Verdana',\n  }\n\n  options = _.extend(baseOptions, options)\n\n\n  const stateManager = this.stateManager\n  const R = this.R\n\n  const elements2D = stateManager.get('elements2D')\n  const canvas = elements2D.canvas\n\n  // stateManager.call('clearTiles')\n\n  /* --- Show cross --- */\n  elements2D.cross.opacity = R.get.cross_opacity\n\n  /* --- Set default infobox value --- */\n  if ((!elements2D.keysInfoboxText) || (!elements2D.keysInfobox)) {\n    elements2D.keysInfobox = []\n    elements2D.keysInfoboxText = []\n  }\n\n\n  /* --- Build Tiles --- */\n  // const tilePositions = stateManager.call('getTilePositions')\n  const normalSize = stateManager.call('getTileSize')\n  const tileMargins = stateManager.call('getTileMargins')\n\n  // const infoboxMargins = null\n  if ((!hasConstructor(String, options.withKeys)) || (options.withKeys.length !== 4)) {\n    options.withKeys = null\n  } else {\n    // infoboxMargins = _.clone(tileMargins)\n    // infoboxMargins[0].rightPixels += normalSize.x/2\n    // infoboxMargins[0].bottomPixels += normalSize.y/2\n    //\n    // infoboxMargins[1].left += normalSize.x/2\n    // infoboxMargins[1].bottomPixels += normalSize.y/2\n    //\n    // infoboxMargins[2].left += normalSize.x/2\n    // infoboxMargins[2].topPixels -= normalSize.y/2\n    //\n    // infoboxMargins[3].right += normalSize.x/2\n    // infoboxMargins[3].topPixels -= normalSize.y/2\n  }\n\n  // const fullOpacity = R.get.tile_fullOpacity\n  // const lowOpacity = R.get.tile_lowOpacity\n  // var highlightedSize = normalSize.scale(1.3);\n\n  const fontSuperSample = false\n  const fontSignedDistanceField = true\n\n  // let tileOpacity = lowOpacity\n\n  // const predictionColor = [0.9, 0.7, 0, tileOpacity]\n  const normalColor = [0.8, 0.8, 0.8, 1]\n\n  for (let i = 0; i < 4; i++) {\n    if (hasConstructor(BABYLON.Rectangle2D, elements2D.tiles[i])) { elements2D.tiles[i].dispose() }\n    // if (elements2D.tiles.length <= i) {\n    debuglog(`loop${options.type}`)\n      // tileOpacity = lowOpacity\n      // if (options.hightlight === i) {\n      //   tileOpacity = fullOpacity\n      // }\n    console.warn('NORMAL SIZE:', normalSize)\n    const normalTile = new BABYLON.Rectangle2D({\n      parent: canvas,\n      id: `tile${i}`,\n      marginAlignment: 'h: center, v: center',\n        // position: tilePositions[i].subtract(normalSize.scale(0.5)),\n      width: normalSize.x,\n      height: normalSize.y,\n      border: BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(...normalColor)),\n      borderThickness: 2,\n      fill: null, // BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0.8, 0.8, 0.8, tileOpacity)),\n      zOrder: 0.1,\n    })\n    elements2D.tiles[i] = normalTile\n    // } else {\n    //   elements2D.tiles[i].width = normalSize.x\n    //   elements2D.tiles[i].height = normalSize.y\n    // }\n\n    setMargins(elements2D.tiles[i], tileMargins[i])\n\n    if ((hasConstructor(BABYLON.Rectangle2D, elements2D.keysInfobox[i])) && (!hasConstructor(String, options.withKeys))) {\n      elements2D.keysInfobox[i].levelVisible = false\n    } else if (hasConstructor(String, options.withKeys)) {\n      if (hasConstructor(BABYLON.Rectangle2D, elements2D.keysInfobox[i])) { elements2D.keysInfobox[i].dispose() }\n      elements2D.keysInfobox[i] = new BABYLON.Rectangle2D({\n        parent: elements2D.tiles[i],\n        id: `keyInfoBackground${i}`,\n        width: 50,\n        height: 50,\n        marginAlignment: 'h: center, v: top',\n        fill: BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0.64, 0.64, 0.64, 0.5)),\n      })\n\n      elements2D.keysInfoboxText[i] = new BABYLON.Text2D(options.withKeys[i], {\n        parent: elements2D.keysInfobox[i],\n        fontName: options.fontName,\n        marginAlignment: 'h: center, v: center',\n        fontSuperSample,\n        fontSignedDistanceField,\n      })\n    }\n\n\n    // switch (options.type) {\n    //   case 'learning':\n    //     elements2D.tiles[i] = normalTile\n    //     break\n    //   case 'prediction':\n    //     debuglog('prediction')\n    //     elements2D.tiles[i] = new BABYLON.Rectangle2D({\n    //       parent: canvas,\n    //       id: `tile${i}`,\n    //       position: tilePositions[i].subtract(normalSize.scale(0.5)),\n    //       width: normalSize.x,\n    //       height: normalSize.y,\n    //       border: BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(...predictionColor)),\n    //       borderThickness: 10,\n    //       fill: null, // options.hightlight === i ? BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0.8, 0.8, 0.8, tileOpacity)) : null,\n    //       zOrder: 0.1,\n    //     })\n    //     break\n    //   case 'noAnswer':\n    //     debuglog('drawTiles: noAnswer')\n    //     elements2D.tiles[i] = new BABYLON.Rectangle2D({\n    //       parent: canvas,\n    //       id: `tile${i}`,\n    //       position: tilePositions[i].subtract(normalSize.scale(0.5)),\n    //       width: normalSize.x,\n    //       height: normalSize.y,\n    //       border: BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0.9, 0, 0, tileOpacity)),\n    //       borderThickness: 10,\n    //       fill: BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0.3, 0, 0, tileOpacity)),\n    //       zOrder: 0.1,\n    //     })\n    //     break\n    //   default:\n    //     throw new Error(`stateManager.drawTiles: options.type ${options.type} is not a valid type.`)\n    // }\n  }\n\n  return (elements2D.tiles)\n}\n\n\nconst getTileMargins = function () {\n  const stateManager = this.stateManager\n  const R = this.R\n\n  const canvas = (stateManager.get('elements2D')).canvas\n\n  const tileSize = stateManager.call('getTileSize')\n\n  const offset = R.get.tile_offset\n\n  if (typeof canvas === 'undefined') {\n    throw new Error('StateManager.getTilePositions: canvas is undefined.')\n  }\n\n  const margins = [\n    { leftPixels: 0, topPixels: 0, rightPixels: ((tileSize.x / 2) + offset), bottomPixels: (tileSize.y / 2) + offset }, // top left 0\n    { rightPixels: 0, topPixels: 0, leftPixels: ((tileSize.x / 2) + offset), bottomPixels: (tileSize.y / 2) + offset }, // top right 1\n    { rightPixels: 0, bottomPixels: 0, leftPixels: ((tileSize.x / 2) + offset), topPixels: (tileSize.y / 2) + offset }, // bottom right 2\n    { leftPixels: 0, bottomPixels: 0, rightPixels: ((tileSize.x / 2) + offset), topPixels: (tileSize.y / 2) + offset }, // bottom left 3\n  ]\n\n  return margins\n}\n\nconst getTilePositions = function () {\n  if (typeof this.taskObject === 'undefined') {\n    throw new Error('stateManager.getTilePositions: this.taskObject is undefined')\n  }\n  const stateManager = this.stateManager\n  const R = this.R\n\n  const canvas = (stateManager.get('elements2D')).canvas\n\n  const tileSize = stateManager.call('getTileSize')\n  const center = {\n    w: canvas.width / 2,\n    h: canvas.height / 2,\n  }\n  const offset = R.get.tile_offset\n\n  if (typeof canvas === 'undefined') {\n    throw new Error('StateManager.getTilePositions: canvas is undefined.')\n  }\n\n  const positions = [\n    new BABYLON.Vector2(center.w - ((tileSize.x / 2) + offset), center.h + ((tileSize.y / 2) + offset)), // one is top left\n    new BABYLON.Vector2(center.w + ((tileSize.x / 2) + offset), center.h + ((tileSize.y / 2) + offset)),\n    new BABYLON.Vector2(center.w + ((tileSize.x / 2) + offset), center.h - ((tileSize.y / 2) + offset)),\n    new BABYLON.Vector2(center.w - ((tileSize.x / 2) + offset), center.h - ((tileSize.y / 2) + offset)), // 4 is bottom left\n\n  ]\n\n  return (positions)\n}\n\nconst highlightPosition = function (options = null) {\n  if (typeof this.stateManager === 'undefined') {\n    throw new Error('stateManager.highlightPosition: this.stateManager is undefined')\n  }\n\n  if (typeof options.position === 'undefined') {\n    throw new Error('stateManager.highlightPosition: options.position is undefined')\n  }\n\n  return (this.stateManager.promise('drawTiles', {\n    hightlight: options.position,\n    type: (typeof options.type !== 'undefined') ?\n      options.type : 'prediction',\n  }))\n}\n\nconst drawPredictionTiles = function ({ withKeys = false } = { withKeys: false }) {\n  if (typeof this.taskObject === 'undefined') {\n    throw new Error('stateManager.drawPredictionTiles: this.taskObject is undefined')\n  } else {\n    return (this.stateManager.promise('drawTiles', {\n      type: 'prediction',\n      withKeys,\n    }))\n  }\n}\n\nconst setAgent = function (options = null) {\n  if (typeof this.taskObject === 'undefined') {\n    throw new Error('stateManager.drawPredictionTiles: this.taskObject is undefined')\n  }\n\n  if (typeof options.agent === 'undefined') {\n    throw new Error('stateManager.setAgent: options.agent is undefined')\n  }\n\n  const stateManager = this.stateManager\n\n  const elements2D = stateManager.get('elements2D')\n  // const currentPosition = elements2D.agent.position\n  const currentMargin = elements2D.agent.margin\n\n  elements2D.agent.opacity = 0\n  switch (options.agent) {\n    case 'wolf':\n      elements2D.agent = elements2D.wolfFaceSprite\n      break\n    case 'rabbit':\n      elements2D.agent = elements2D.rabbitFaceSprite\n      break\n    default:\n      throw new Error(`stateManager.setAgent: options.agent ${options.agent} is of invalid type.`)\n  }\n\n  elements2D.agentType = options.agent\n  // elements2D.agent.position = currentPosition\n  elements2D.agent.margin = currentMargin\n\n  return (elements2D.tiles[options.positions])\n}\n\nconst getAgentPositionOnTile = function (options = null) {\n  if (typeof this.stateManager === 'undefined') {\n    throw new Error('stateManager.drawPredictionTiles: stateManager is undefined')\n  }\n\n  if (typeof options.tile === 'undefined') {\n    throw new Error('stateManager.setAgent: tile is undefined')\n  }\n\n  const stateManager = this.stateManager\n\n  const elements2D = stateManager.get('elements2D')\n  const agent = elements2D.agent\n\n  const scaledAgentSize = (new BABYLON.Vector2(agent.size.width, agent.size.height)).scaleInPlace(agent.scale)\n\n  const tilePositions = stateManager.call('getTilePositions')\n\n  const newPosition = tilePositions[options.tile].subtract(scaledAgentSize.scale(0.5))\n\n  return newPosition\n}\n\nconst getAgentMarginsOnTile = function (options = null) {\n  if (typeof this.stateManager === 'undefined') {\n    throw new Error('stateManager.drawPredictionTiles: stateManager is undefined')\n  }\n\n  if (typeof options.tile === 'undefined') {\n    throw new Error('stateManager.setAgent: tile is undefined')\n  }\n\n  const stateManager = this.stateManager\n\n  // const elements2D = stateManager.get('elements2D')\n  // const agent = elements2D.agent\n\n  // const scaledAgentSize = (new BABYLON.Vector2(agent.size.width, agent.size.height)).scaleInPlace(agent.scale)\n\n  const offsetH = 0// no need ... it is based on the center of the sprite... (stateManager.call('getTileSize').y - agent.size.height) / 4\n  const offsetW = 0// (stateManager.call('getTileSize').x - agent.size.width) / 4\n\n  const tileMargins = stateManager.call('getTileMargins')[options.tile]\n\n  const newMargins = {\n    leftPixels: (tileMargins.leftPixels === 0) ? 0 : tileMargins.leftPixels + offsetW,\n    rightPixels: (tileMargins.rightPixels === 0) ? 0 : tileMargins.rightPixels + offsetW,\n    topPixels: (tileMargins.topPixels === 0) ? 0 : tileMargins.topPixels + offsetH,\n    bottomPixels: (tileMargins.bottomPixels === 0) ? 0 : tileMargins.bottomPixels + offsetH,\n  }\n\n  // const newPosition = tilePositions[options.tile].subtract(scaledAgentSize.scale(0.5))\n\n  return newMargins\n}\n\nconst moveAgentToTile = function (options = null) {\n  if (typeof this.stateManager === 'undefined') {\n    throw new Error('stateManager.drawPredictionTiles: stateManager is undefined')\n  }\n\n  if (typeof options.tile === 'undefined') {\n    throw new Error('stateManager.setAgent: tile is undefined')\n  }\n  const elements2D = this.stateManager.get('elements2D')\n  const agent = elements2D.agent\n  // agent.position = this.stateManager.call('getAgentPositionOnTile', options)\n  agent.margin = _.extend(agent.margin, this.stateManager.call('getAgentMarginsOnTile', options))\n  this.stateManager.set('lastMove', options.tile)\n\n  if (typeof options.opacity !== 'undefined') {\n    this.stateManager.call('setAgentOpacity', {\n      opacity: options.opacity,\n    })\n  }\n\n  return (agent)\n}\n\nconst animateAgentToTile = function (options = null) {\n  if (typeof this.stateManager === 'undefined') {\n    throw new Error('stateManager.drawPredictionTiles: stateManager is undefined')\n  }\n\n  if (typeof options.tile === 'undefined') {\n    throw new Error('stateManager.setAgent: tile is undefined')\n  }\n  const elements2D = this.stateManager.get('elements2D')\n  const agent = elements2D.agent\n  const newPosition = this.stateManager.call('getAgentPositionOnTile', options)\n\n  if (typeof options.opacity !== 'undefined') {\n    this.stateManager.call('setAgentOpacity', {\n      opacity: options.opacity,\n    })\n  }\n  // TODO Do not dispose of the tiles, just play on opacity. TODO fix the animations\n\n  const deferred = new Deferred()\n  /* --- Create an animation that lasts 100ms of the target sliding to new position --- */\n  const animation = new BABYLON.Animation('slideToPosition', 'position', 100, BABYLON.Animation.ANIMATIONTYPE_VECTOR2, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT)\n\n  const keys = []\n  keys.push({\n    frame: 0,\n    value: agent.position,\n  })\n  keys.push({\n    frame: 10,\n    value: newPosition,\n  })\n\n  animation.setKeys(keys)\n  const end = new BABYLON.AnimationEvent(10, () => {\n    deferred.resolve()\n  }, true)\n\n  animation.addEvent(end)\n  agent.animations.push(animation)\n  this.scene.beginAnimation(agent, 0, 11)\n  return deferred.promise\n  // TODO create a this.animate(object, property, keys, loop)\n}\n\nconst setAgentOpacity = function (options = null) {\n  if (typeof this.stateManager === 'undefined') {\n    throw new Error('stateManager.drawPredictionTiles: this.stateManager is undefined')\n  }\n\n  if (typeof options.opacity === 'undefined') {\n    throw new Error('stateManager.setAgent: options.opacity is undefined')\n  }\n\n  const elements2D = this.stateManager.get('elements2D')\n  const agent = elements2D.agent\n\n  agent.opacity = options.opacity\n\n  return (agent)\n}\n\nconst setBlackScreen = function (options = null) {\n  const baseOptions = { // TODO create a defaultOptions()\n    on: true,\n  }\n\n  options = _.extend(baseOptions, options)\n  const elements2D = this.stateManager.getGlobal('elements2D')\n  const canvas = elements2D.canvas\n\n  if (!_.has(elements2D, 'blackScreen')) {\n    const blackScreen = new BABYLON.Rectangle2D({\n      parent: canvas,\n      id: 'blackScreen',\n      position: new BABYLON.Vector2(0, 0),\n      width: canvas.size.width,\n      height: canvas.size.height,\n      zOrder: 0,\n    })\n\n    elements2D.blackScreen = blackScreen\n  }\n\n  if (options.on) {\n    elements2D.blackScreen.opacity = 1\n  } else {\n    elements2D.blackScreen.opacity = 0\n  }\n}\n\nconst hideAll = function () {\n  const stateManager = this.stateManager\n\n  const elements2D = stateManager.get('elements2D')\n\n  elements2D.agent.levelVisible = false\n  elements2D.cross.levelVisible = false\n  elements2D.loader.levelVisible = false\n  elements2D.tiles.forEach((t) => { t.levelVisible = false })\n}\n\nconst showAll = function () {\n  const stateManager = this.stateManager\n\n  const elements2D = stateManager.get('elements2D')\n\n  elements2D.agent.levelVisible = true\n  elements2D.cross.levelVisible = true\n  elements2D.loader.levelVisible = true\n  elements2D.tiles.forEach((t) => { t.levelVisible = true })\n}\n\nconst checkIdleAndConnection = function ({ deferred = new Deferred(), returnToState = null } = { deferred: new Deferred(), returnToState: null }) {\n  const stateManager = this.stateManager\n  const R = this.R\n  const dataManager = this.dataManager\n  const connection = this.connection\n  returnToState = returnToState || stateManager.currentStateKey\n\n  dataManager.query('getLastInteraction', null, connection, deferred)\n  return deferred.promise.then((r) => {\n    const delay = stateManager.timeInMs - r.lastInteraction\n    const delayMin = delay / (60000)\n    if (delay > 30 * 60 * 1000) {\n      // TODO idle for too long\n      debugWarn('running.goToNextPosition: idle for too long')\n      stateManager.set('endReason', `You were idle for more than 30 min: ${delayMin} min`)\n      stateManager.goToState(R.get.states_end)\n    } else if (stateManager.currentStateKey !== returnToState) { stateManager.goToState(returnToState) }\n  })\n  .catch(() => {\n    // TODO lost connection\n    debugWarn('running.goToNextPosition: lost connection')\n\n    if (stateManager.currentStateKey !== R.get.states_idle) {\n      stateManager.call('hideAll')\n      stateManager.onNext(this.R.get.events_unfrozen, () => { stateManager.call('showAll') })\n      this.state.freeze()\n      stateManager.goToState(R.get.states_idle)\n    }\n\n    this.taskObject.modal({ type: 'centralLarge', title: R.get.lostConnectionTitle, content: R.get.lostConnectionContent })\n    .then(() => delay(50)).then(() => { stateManager.call('checkIdleAndConnection', { returnToState }) })\n  })\n}\n\nexport { redrawAssets,\n  drawTiles,\n  addButton,\n  disposeOfButtons,\n  clearTiles,\n  getTilePositions,\n  getTileMargins,\n  getTileSize,\n  highlightPosition,\n  drawPredictionTiles,\n  getAgentMarginsOnTile,\n  setAgent,\n  setMargins,\n  moveAgentToTile,\n  animateAgentToTile,\n  getAgentPositionOnTile,\n  setAgentOpacity,\n  setBlackScreen,\n  hideAll,\n  showAll,\n  checkIdleAndConnection }\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/scenes/main/functions/globalFunctions.js","import {\n  EventData,\n  Array, // eslint-disable-line\n  String, // eslint-disable-line\n  delay,\n  debuglog,\n  hasConstructor,\n} from 'experiment-js'\n\nimport { SmartModal } from 'experiment-boxes'\n\n\nconst pageOrderTutorialOne = ['intro', 'disclaimer', 'trialInstruction', 'fourLevels', 'progressInstruction', 'keyboardInstruction', 'introToTryout']\nconst pageOrderTutorialFMRI = ['fmriIntro', 'fmriRabbit', 'fmriNoPrediction', 'lockedCross']\n\nconst awakeTutorial = function () {\n  const currentTutorial = this.stateManager.get('currentTutorial', 1)\n\n  const pageOrder = currentTutorial === 1 ? pageOrderTutorialOne : pageOrderTutorialFMRI\n\n  this.stateManager.set('currentPage', pageOrder[0])\n\n  const showIntro = new EventData(this.R.get.events_showModal, { page: pageOrder[0] })\n  this.stateManager.addEvent(showIntro)\n\n\n  this.stateManager.set('levelObject', { level: `tutorial-${currentTutorial}` })\n  this.state.shouldPause = (currentTutorial !== 1)\n}\n\nconst showModal = function ({ data: { page = 'intro' } }) {\n  // if (this.taskObject.currentModal !== null) {\n  //   try {\n  //     this.taskObject.currentModal.modalBox.destroy() // TODO think about wether callback or not etc.\n  //   } catch (e) {\n  //     debugWarn(e)\n  //   }\n  // }\n\n  const tutorials = this.R.get.tutorials\n  delay(50).then(() => { // TODO Check why you have to do that ...\n    if (tutorials.hasOwnProperty(page)) {\n      const tutorial = tutorials[page]\n      const event = new EventData(this.R.get.events_tutorialNext, { page })\n      this.taskObject.modal({ type: 'centralLarge', title: tutorial.title.en, content: tutorial.content.en, event })\n      this.taskObject.currentModal.modalBox.buttonText = 'Next'\n    }\n  })\n}\n\nconst tutorialUnfrozen = function () {\n  if (hasConstructor(Object, this.taskObject.currentModal) && hasConstructor(SmartModal, this.taskObject.currentModal.modalBox)) {\n    this.taskObject.currentModal.modalBox.show()\n  }\n}\n\nconst showNextPage = function ({ data: { page: currentPage = this.stateManager.get('currentPage', 'intro') } }) {\n  const currentTutorial = this.stateManager.get('currentTutorial', 1)\n  const pageOrder = currentTutorial === 1 ? pageOrderTutorialOne : pageOrderTutorialFMRI\n  const R = this.R\n\n  const currentIndex = pageOrder.indexOf(currentPage)\n  if (currentIndex !== -1) {\n    if (currentIndex !== pageOrder.length - 1) {\n      const showEvent = new EventData(R.get.events_showModal, { page: pageOrder[currentIndex + 1] })\n      this.stateManager.addEvent(showEvent)\n    } else {\n      debuglog('state.showNextPage: end of tutorial.')\n      this.stateManager.goToState(R.get.states_tryout, true) // TODO make it able to use the state object as well\n    }\n  } else {\n    throw new Error('state.showNextPage: invalid currentPage.')\n  }\n}\n\nexport { showNextPage, showModal, awakeTutorial, tutorialUnfrozen }\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/scenes/main/states/tutorial.js","/**\n * startUp.js\n *\n * This file holds the code that should run on your HTML page after all the framework and page is loaded.\n *\n * Here you should :\n * - create the taskObject\n * - set up the parameters of the task\n * - register loading promise\n * - register the scenes generators\n * - start the task\n * - bind the task paramBox with relevant parameters\n *\n * Do not pollute the global space with too much variables.\n * Here two global variables are created : taskObject and calibrator.\n */\nimport $ from 'jquery'\nimport _ from 'lodash'\nimport { RessourceManager, TaskObject, Deferred, debuglog, preloadImages } from 'experiment-js'\nimport { SmartForm } from 'experiment-boxes'\n\n// import LoadingScene from './scenes/LoadingScene' Using default loading\nimport MainScene from '../scenes/main/MainScene'\n\nwindow.taskObject = null\nwindow.calibrator = null\n\n\n// When page is loaded, initiate the task\nconst defferedDomLoaded = new Deferred()\ndocument.addEventListener('DOMContentLoaded', () => {\n  defferedDomLoaded.resolve()\n})\n\nif (typeof window !== 'undefined') {\n  /* === Get the absolute path of the library === */\n  const scripts = document.getElementsByTagName('script')\n  if (scripts.length) {\n    const assetsFolderFullpath = scripts[scripts.length - 1].src\n    const delimiterIndices = assetsFolderFullpath.indicesOf('/')\n    window.assetsFolderFullpath = assetsFolderFullpath.substr(0, delimiterIndices[delimiterIndices.length - 2])\n  } else {\n    window.assetsFolderFullpath = './'\n  }\n}\n\nconst R = new RessourceManager()\nwindow.p1 = defferedDomLoaded.promise\nwindow.p2 = R.addFiles(`${window.assetsFolderFullpath}/assets/sequences/sequencesJune2017.json`, `${window.assetsFolderFullpath}/assets/yaml/ressources.yaml`)\n\nconst imageToPreload = [\n  `${window.assetsFolderFullpath}/assets/sprites/cross/predictionSquare.svg`,\n  `${window.assetsFolderFullpath}/assets/sprites/keyboard/fullsize_color_legend.png`,\n  `${window.assetsFolderFullpath}/assets/sprites/cross/fullSquare.svg`,\n  `${window.assetsFolderFullpath}/assets/sprites/cross/predictionSquareWithLoader.gif`]\n\nconst [p3, preloadedImages] = preloadImages(...imageToPreload)\nObject.assign(window, { p3, preloadedImages })\n\n\nwindow.loadingPromise = Promise.all([window.p1, window.p2, window.p3])\n\n\nwindow.loadingPromise.then(() => {\n  const taskObject = new TaskObject($('.task-canvas'))\n  taskObject.R.mergeWith(R)\n\n    /* --- Setup custom parameters --- */\n    // Tutorial length 3 - 5min * 2 : task duration [50min, 2h] paid for 1h30 - 11$\n    // Setup sequences and get sequence objects for each levels\n    //  Model level 1 : 1, 4, 2, 3 -- 51 positions (50 trials) 0.9 -- ~ 5 min + 15 min pause max\n  const fullSequenceObjectLevel1 = R.get['fullSequenceObjectLevel1Classic0.90-1423-0.08errorTotal'] // getFullSequenceObjectForClassicLevels(R.get.sequenceLevel1)\n\n    //  Model level 2 : 1, 2, 4, 3 -- 76 positions (75 trials) 0.85 -- ~ 7min30sec + 15 min pause max\n  const fullSequenceObjectLevel2 = R.get['fullSequenceObjectLevel2Classic0.85-1243-0.25errorTotal'] // getFullSequenceObjectForClassicLevels(R.get.sequenceLevel2)\n\n    // Model level 3 : 1, 3, 4, 2 -- 101 positions 0.75 -- ~ 10min + 15 min pause max\n  const fullSequenceObjectLevel3 = R.get['fullSequenceObjectLevel3Classic0.75-1342-0.096errorTotal'] // getFullSequenceObjectForClassicLevels(R.get.sequenceLevel3)\n\n    // Level 4 is 1, 3, 2, 4 -- 0.75 -- 20% no go -- 51 positions * 2 (wolf) + 50 positons * 2 (rabbit) = 150 transitions -- ~ 7min * 3 + 3*6min pause\n  const fullSequenceObjectLevel4 = R.get['levelFourWithRandomAndNogoDependant-1324-0.75-0.32TotalError']\n  // const levelFourJSON = R.get.sequenceObjectLevel4\n  //\n  // const levelFourJSONNolearning = R.get.sequenceObjectLevel4NoLearning\n  //\n  // const levelFourJSONBlackouts = R.get.sequenceObjectLevel4Blackouts\n  //\n  // const levelFourJSONIndependant = R.get.sequenceObjectLevel4Independant\n\n  const baseLevel = {\n    level: 0,\n    sequence: null,\n    numberOfBlocks: 0,\n    sequenceObject: null,\n    dominantProbability: 0.9,\n    dominantStructure: '1423',\n    observationDuration: 500,\n    interObservationDuration: 50, // to add ?\n    probeObservationDuration: 1000,\n    predictionDuration: 2500,\n    feedbackDuration: 1500,\n    minISIAfterLearning: 2500,\n    maxISIAfterLearning: 3500,\n    minISIAfterFeedback: 2500,\n    maxISIAfterFeedback: 3500,\n    observationSegmentSizes: [1],\n    observationSegmentRepetitionPerBlock: 75,\n    feedbackType: 'transition',\n  }\n\n  let levelOne = {\n    level: 1,\n    dominantProbability: 0.9,\n    dominantStructure: '1423',\n    numberOfBlocks: 1,\n    sequenceObject: fullSequenceObjectLevel1,\n  }\n\n  levelOne = _.extend(baseLevel, levelOne)\n\n  taskObject.parameters.levelOne = levelOne\n\n  const levelTwo = {\n    level: 2,\n    dominantProbability: 0.85,\n    dominantStructure: '1243',\n    sequenceObject: fullSequenceObjectLevel2,\n  }\n\n  taskObject.parameters.levelTwo = _.extend(_.clone(baseLevel), levelTwo)\n\n  const levelThree = {\n    level: 3,\n    dominantProbability: 0.75,\n    dominantStructure: '1342',\n    sequenceObject: fullSequenceObjectLevel3,\n  }\n\n  taskObject.parameters.levelThree = _.extend(_.clone(baseLevel), levelThree)\n\n  // taskObject.parameters.levelFour = {\n  //   level: 4,\n  //   dominantProbability: 0.75,\n  //   dominantStructure: 1324,\n  //   observationDuration: 500,\n  //   probeObservationDuration: 3000,\n  //   predictionDuration: 2500,\n  //   interObservationDuration: 50, // to add ? but different than block 1-3\n  //   feedbackDuration: 1500,\n  //   minISIAfterLearning: 2500,\n  //   maxISIAfterLearning: 3500,\n  //   minISIAfterFeedback: 2500,\n  //   maxISIAfterFeedback: 3500,\n  //   feedbackType: 'transition',\n  //   sequenceObject: levelFourJSON,\n  // }\n  //\n  // taskObject.parameters.levelFourNoLearning = {\n  //   level: 4,\n  //   dominantProbability: 0.75,\n  //   observationDuration: 500,\n  //   fixedISIAfterObservation: 2500,\n  //   sampleMeanISIAfterObservation: 3000,\n  //   predictionDuration: 2000,\n  //   fixedISIAfterPrediction: 1000,\n  //   sampleMeanISIAfterPrediction: 3000,\n  //   fixedBlackScreenDuration: 1500,\n  //   sampleMeanBlackScreen: 500,\n  //   maxSampleAfterPrediction: 4000,\n  //   maxSampleAfterObservation: 4000,\n  //   maxSampleBlackScreen: 1000,\n  //   feedbackType: 'transition',\n  //   sequenceObject: levelFourJSONBlackouts,\n  // }\n\n  taskObject.parameters.levelFour = {\n    level: 4,\n    dominantProbability: 0.75,\n    observationDuration: 500,\n    dominantStructure: '1324',\n    fixedISIAfterObservation: 2500,\n    sampleMeanISIAfterObservation: 3000,\n    predictionDuration: 2000,\n    fixedISIAfterPrediction: 1000,\n    sampleMeanISIAfterPrediction: 3000,\n    fixedBlackScreenDuration: 1500,\n    sampleMeanBlackScreen: 500,\n    maxSampleAfterPrediction: 4000,\n    maxSampleAfterObservation: 4000,\n    maxSampleBlackScreen: 1000,\n    feedbackType: 'transition',\n    sound: false,\n    sequenceObject: fullSequenceObjectLevel4,\n  }\n\n  taskObject.parameters.levels = [\n    taskObject.parameters.levelOne,\n    taskObject.parameters.levelTwo,\n    taskObject.parameters.levelThree,\n    taskObject.parameters.levelFour,\n  ]\n\n    /* --- Setup task variables --- */\n  taskObject.variables.shouldSeeInformation = true\n\n    /* --- Register loading scene generator --- */\n  // taskObject.registerLoadingFunction(LoadingScene)\n  taskObject.assetsToLoad = {\n    rabbitFace: {\n      path: '/assets/sprites/rabbit/rabbitFace.png',\n      type: 'texture',\n    },\n    wolfFace: '/assets/sprites/wolf/wolfFace.png',\n    crossSheet: {\n      path: '/assets/sprites/cross/squareSheetMargin.svg',\n      type: 'texture',\n    },\n    observation: {\n      path: '/assets/sounds/observation.mp3',\n      type: 'sound',\n    },\n    predict: {\n      path: '/assets/sounds/predict.mp3',\n      type: 'sound',\n    },\n  }\n\n\n    /* --- Register scene generators --- */\n  const options = {\n    level: null,\n  }\n\n  taskObject.registerSceneGenerator(MainScene, options)\n\n  const sceneNames = ['loading', 'main']\n\n  taskObject.R.add({\n    agent: {\n      scale: 0.15, // compared to the minimum dimension\n      predictionOpacity: 0,\n      animate: false,\n    },\n    tile: {\n      scale: 2, // compared to the agent size\n      offset: 40,\n      fullOpacity: 0.2,\n      lowOpacity: 0.2,\n    },\n    cross: {\n      opacity: 1,\n    },\n  })\n\n    /* list of tweakable variables from the paramBox */\n  const parametersNames = [\n    'parameters.levelFour.observationDuration',\n    'parameters.levelFour.fixedISIAfterObservation',\n    'parameters.levelFour.sampleMeanISIAfterObservation',\n    'parameters.levelFour.predictionDuration',\n    'parameters.levelFour.fixedISIAfterPrediction',\n    'parameters.levelFour.sampleMeanISIAfterPrediction',\n    'parameters.levelFour.fixedBlackScreenDuration',\n    'parameters.levelFour.sampleMeanBlackScreen',\n    'parameters.levelFour.maxSampleAfterPrediction',\n    'parameters.levelFour.maxSampleAfterObservation',\n    'parameters.levelFour.maxSampleBlackScreen',\n  ]\n\n  const parametersConstraints = {\n    feedbackType: ['transition', 'sound'],\n    currentScene: sceneNames,\n  }\n\n  const rParams = ['agent.scale', 'agent.predictionOpacity', 'tile.scale', 'tile.offset', 'cross.opacity']\n\n\n  taskObject.paramBox.bind(taskObject, parametersNames, parametersConstraints)\n  taskObject.paramBox.bind(taskObject.R.data, rParams)\n\n    /* --- Login --- */\n  window.taskObject = taskObject\n  const tempMaxNumberOfRetry = taskObject.dataManager.MAX_NUMBER_OF_RETRY\n  const endpoint = `${window.assetsFolderFullpath}/api/php/mysql/index.php`\n\n  /**\n   * This function in a form generator that is called automatically by the DataManager when the user needs to login\n   * @method loginForm\n   * @return {SmartForm}  a SmartForm\n   */\n  function loginForm() {\n    const fields = {\n      userId: {\n        type: 'input',\n        constraints: 'length:10,300', // list of constraints that will be automatically verified: mandatory; alpha; numeric; length:XX; contains:a,b,@,.;\n        authorizedValues: null, // athorized values\n        parent: null,\n        title: 'Enter your MTurk WorkerID:',\n      },\n      password: {\n        type: 'password', // field type: input, select, textaera, slider, radio, password\n        constraints: 'length:6,300; score: 30', // list of constraints that will be automatically verified: mandatory; alpha; numeric; length:XX; contains:a,b,@,.;\n        authorizedValues: null, // athorized values\n        parent: null,\n        title: 'Enter your password, if you are new here you are free to pick one !', // you can control auto-create account in the php api config\n      },\n    }\n    const options = { fields, title: 'Login Form', format: 'topCentralSmall', callback(fields) { debuglog({ endpoint, credentials: { userId: fields.userId.value, password: fields.password.value } }) } }\n    const form = new SmartForm(options)\n    form.buttonText = 'OK'\n\n    const R = taskObject.context.R\n    const stateManager = taskObject.context.stateManager\n\n    if (stateManager) {\n      stateManager.goToState(R.get.states_active)\n    }\n\n    return form\n  }\n\n  //  If you do not want to store the credentials for the connections localy set this variable to false (the password is not stored in any case, only a logging key)\n  // taskObject.dataManager.useLocalStorageCredentials = false\n  taskObject.setConnection({ endpoint, signInForm: loginForm }) // credentials: { userId: 'John', password: 'wrong' } })\n  .then(connection => (connection.loggedIn ? true : taskObject.dataManager.login(connection)))\n  .then(() => {\n    // reset the retry limit to its original value\n    taskObject.dataManager.MAX_NUMBER_OF_RETRY = tempMaxNumberOfRetry\n\n    /* --- Start task --- */\n    return taskObject.startTask()\n  })\n  .then((message) => {\n    debuglog(message)\n    taskObject.paramBox.bind(taskObject, 'currentScene', parametersConstraints)\n\n    if (typeof taskObject.paramBox.queryString.generateSequence !== 'undefined') {\n      taskObject.currentScene = 'sequenceGeneratorScene'\n    } else if ((sceneNames.length === 1) || (typeof taskObject.paramBox.queryString.currentScene === 'undefined')) {\n      taskObject.currentScene = 'main'\n    }\n  })\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/startup/startup.js","/**\n * Experiment.js\n * Created. 2016\n *\n * Experiment.js toolbox.\n *\n * Authors. Albert Buchard\n *\n * Requires: lodash, BABYLON.js, mathjs, jQuery\n *\n * LICENSE Apache-2\n */\n\n /* --- Import the framework --- */\n\n\n/* add it to the global space in case user want to import in a script tag */\n if (typeof window !== 'undefined') {\n   require('./src/task/startup/startup')\n }\n\n\n\n// WEBPACK FOOTER //\n// ./builder.js","import _ from 'lodash'\nimport BABYLON from 'experiment-babylon-js'\nimport {\n  EventData,\n  Array, // eslint-disable-line\n  String, // eslint-disable-line\n  debugError,\n  hasConstructor,\n} from 'experiment-js'\n\nimport { SmartModal } from 'experiment-boxes'\n\nimport { redrawAssets,\n  drawTiles,\n  addButton,\n  disposeOfButtons,\n  clearTiles,\n  getTilePositions,\n  getTileSize,\n  getTileMargins,\n  highlightPosition,\n  drawPredictionTiles,\n  getAgentMarginsOnTile,\n  setAgent,\n  moveAgentToTile,\n  animateAgentToTile,\n  getAgentPositionOnTile,\n  setAgentOpacity,\n  setBlackScreen,\n  hideAll,\n  showAll,\n  checkIdleAndConnection } from './functions/globalFunctions'\n\n\nimport { selectLevel, startLevel, endActive } from './states/active'\n\nimport { showNextPage, showModal, awakeTutorial, tutorialUnfrozen } from './states/tutorial'\n\nimport {\n  awakeTryout,\n  tryoutEndPrediction,\n  tryoutCheckKeyStrokeForPrediction,\n  tryoutGoToNextPosition,\n  tryoutStartPrediction,\n  tryoutEnd,\n} from './states/tryout'\n\nimport {\n  stateUnfrozen,\n  startRunning,\n  goToNextPosition,\n  startPrediction,\n  checkForClickPrediction,\n  checkKeyStrokeForPrediction,\n  endPrediction,\n  playSound,\n  endObservation,\n  pauseTransition,\n} from './states/running'\n\nimport { awakenPause, endPause, pauseKeyDown } from './states/pause'\n\nimport { awakenEnd } from './states/end'\n\n/* =============== Main scene =============== */\nexport default function MainScene(options = {}) {\n  // option base\n  const optionsBase = {\n    sceneKey: 'main',\n    canvasBackground: new BABYLON.Color4(0, 0, 0, 1),\n    backgroundRoundRadius: 0,\n    clearColor: new BABYLON.Color4(0, 0, 0, 1),\n    canvasPercentWidth: 1,\n    canvasPercentHeight: 1,\n    mode: 'central',\n    level: null,\n  }\n\n  options = _.extend(optionsBase, options)\n\n  /* --- Get taskObject from context --- */\n  const taskObject = this.taskObject\n\n  /* --- Create a basic 2D scene using a Canvas2D as background --- */\n  const scene = taskObject.create2DScene(options)\n\n  /* --- Get stateManager --- */\n  const stateManager = scene.stateManager\n\n  /* --- Get canvas --- */\n  // const canvas = scene.initialCanvas\n\n  // const camera = scene.initialCamera\n\n  const R = taskObject.R\n\n\n  /* --- Load assets --- */\n\n  scene.onResize = [redrawAssets]\n\n\n  const sounds = {\n    observation: taskObject.cloneAssetIntoScene(R.get.sounds_observation, scene),\n    prediction: taskObject.cloneAssetIntoScene(R.get.sounds_predict, scene),\n  }\n\n  stateManager.setGlobal('sounds', sounds)\n\n  stateManager.register(drawTiles,\n    addButton,\n    disposeOfButtons,\n    clearTiles,\n    getTilePositions,\n    getTileSize,\n    getTileMargins,\n    highlightPosition,\n    drawPredictionTiles,\n    setAgent,\n    moveAgentToTile,\n    animateAgentToTile,\n    getAgentPositionOnTile,\n    getAgentMarginsOnTile,\n    setAgentOpacity,\n    setBlackScreen,\n    hideAll,\n    showAll,\n    redrawAssets,\n    checkIdleAndConnection)\n\n  stateManager.call('redrawAssets')\n\n  /* --- Setup data --- */\n  const dataManager = this.dataManager\n\n  /* --- Add cwData table that will hold a summary of the data --- */\n  const cwDataFields = [\n    'subject_id',\n    'level',\n    'block',\n    'block_type',\n    'dominant_structure',\n    'dominant_transition_probability',\n    'trial',\n    'trial_type',\n    'position',\n    'observation_duration',\n    'observed_transition_was_dominant', // NA for first transition in a sublevel and after prediction\n    'transition_to', // NA for GO trials (non blackouts)\n    'subject_choice', // NA for NOGO\n    'correct',\n    'response_time', // NA for NOGO or no response\n    'key_hits', // ['key', 'time'], [k,t], ...\n    'clicks',\n    'has_paused',\n    'start_observation',\n    'responded_at',\n    'start_prediction',\n    'end_prediction',\n  ]\n\n  dataManager.addTable('cwData', cwDataFields)\n  dataManager.addTable('tryoutData', cwDataFields)\n\n  let userId = `unknown${this.timeInMs}`\n  try {\n    userId = dataManager.connections[0].credentials.userId\n  } catch (e) {\n    debugError(e)\n  }\n\n  stateManager.set('subject_id', userId)\n\n\n  /* --- Add the logs for each level --- */\n  const eventFields = ['id', 'flag', 'happenedAt', 'handledAt', 'data']\n  dataManager.addTable('stateRunningEventsLvl1', eventFields)\n  dataManager.addTable('stateRunningEventsLvl2', eventFields)\n  dataManager.addTable('stateRunningEventsLvl3', eventFields)\n  dataManager.addTable('stateRunningEventsLvl4', eventFields)\n  dataManager.addTable('stateActiveEvents', eventFields)\n\n  /* --- Store scene level inside the stateManager --- */\n  stateManager.setGlobal('positionData', {\n    indexOnTransitionSequence: -1,\n    indexOnPredictionSequence: -1,\n    fullSequenceIndex: -1,\n  })\n\n  stateManager.setGlobal('hasSeenLearningInfo', false)\n  stateManager.setGlobal('hasSeenPredictionInfo', false)\n  /* --- Setup states --- */\n\n  /* --- Set state key and store them in the stateManager --- */\n  R.add({\n    states: {\n      running: 'running',\n      tutorial: 'tutorial',\n      tryout: 'tryout',\n      tryoutFMRI: 'tryoutFMRI',\n      end: 'end',\n    },\n    checkpoint: {\n      tutorialDone: ['tutorialOneDone', 'tutorialTwoDone'],\n      levelDone: ['levelOneDone', 'levelTwoDone', 'levelThreeDone', 'levelFourDone'],\n      taskDone: 'taskDone',\n      taskEndNoComeback: 'taskEndNoComeback',\n    },\n    flags: {\n      levelDefined: 'levelDefined',\n    },\n    events: {\n      sequenceGenerated: 'sequenceGenerated',\n      goNextPosition: 'goNextPosition',\n      endObservation: 'endObservation',\n      startPrediction: 'startPrediction',\n      responseTimeEnded: 'responseTimeEnded',\n      isiAfterLearningEnded: 'isiAfterLearningEnded',\n      feedbackEnded: 'feedbackEnded',\n      isiAfterFeedbackEnded: 'isiAfterFeedbackEnded',\n      pauseTransition: 'pauseTransition',\n      forcePause: 'forcePause',\n      predictionStartBlackout: 'predictionStartBlackout',\n      blackoutEnds: 'blackoutEnds',\n      predictionEndsBlackout: 'predictionEndsBlackout',\n      isiAfterPredictionEndsBlackout: 'isiAfterPredictionEndsBlackout',\n      screenWentBlack: 'screenWentBlack',\n      playPredictionSound: 'playPredictionSound',\n      playObservationSound: 'playObservationSound',\n      showModal: 'showModal',\n      goToTutorial: 'goToTutorial',\n      hasResponded: 'hasResponded',\n      restartTutorial: 'restartTutorial',\n      goToLevel1: 'goToLevel1',\n      goToLevel2: 'goToLevel2',\n      goToLevel3: 'goToLevel3',\n      goToLevel4: 'goToLevel4',\n      tic: 'tic',\n      moreThanFiveNA: 'moreThanFiveNA',\n      aknowledgedEnding: 'aknowledgedEnding',\n      tutorialNext: 'tutorialNext',\n    },\n  })\n\n  // eslint-disable-next-line\n  const [tutorialState, runningState, tryoutState, endState] = stateManager.addState(R.get.states_tutorial, R.get.states_running, R.get.states_tryout, R.get.states_end)\n  const pauseState = stateManager.states.pause\n\n  /* ======== State Active ======== */\n  if (options.level !== null) {\n    const eventData = new EventData(R.get.flags_levelDefined, scene.stateManager.timeInMs, {\n      belongsTo: [\n        'globalLog', 'stateActiveEvents',\n      ],\n      handledAt: null,\n      storedAt: null,\n      level: options.level,\n    })\n    stateManager.addEvent(eventData)\n  } else {\n    stateManager.states.active.addAwakeningFunctions(selectLevel)\n  }\n\n  stateManager.states.active.addEndingFunctions(endActive)\n\n  stateManager.states.active.addEventFunctions(R.get.flags_levelDefined, startLevel)\n  stateManager.states.active.addEventFunctions(R.get.events_goToTutorial,\n    ({ data: { tutorial } }) => {\n      stateManager.setGlobal('currentTutorial', tutorial)\n      stateManager.goToState(R.get.states_tutorial)\n    })\n\n  /* ======== State RUNNING ======== */\n  const goToPause = function () {\n    if (this.state.shouldPause) {\n      this.state.freeze()\n      if (hasConstructor(Object, this.taskObject.currentModal) && hasConstructor(SmartModal, this.taskObject.currentModal.modalBox)) {\n        this.taskObject.currentModal.modalBox.hide()\n      }\n      this.stateManager.goToState(this.R.get.states_pause)\n    }\n  }\n\n  /* --- Register functions --- */\n  runningState.addAwakeningFunctions(startRunning)\n\n  runningState.addEventFunctions(R.get.events_goNextPosition, goToNextPosition)\n  runningState.addEventFunctions(R.get.events_endObservation, endObservation)\n\n  runningState.addEventFunctions(R.get.events_startPrediction, startPrediction)\n  runningState.addEventFunctions(R.get.events_responseTimeEnded, endPrediction)\n\n  runningState.addEventFunctions(R.get.events_pauseTransition, pauseTransition)\n\n  runningState.addEventFunctions(R.get.events_unfrozen, stateUnfrozen)\n  runningState.addEventFunctions(R.get.events_forcePause, goToPause)\n  runningState.addEventFunctions(R.get.events_windowBlur, goToPause)\n  runningState.addEventFunctions(R.get.events_moreThanFiveNA, goToPause)\n\n  runningState.addEventFunctions(R.get.events_click, checkForClickPrediction)\n  runningState.addEventFunctions(R.get.events_keydown, checkKeyStrokeForPrediction)\n\n  runningState.addEventFunctions(R.get.events_playPredictionSound, playSound)\n  runningState.addEventFunctions(R.get.events_playObservationSound, playSound)\n\n\n  /* ======= State Tutorial ======= */\n  tutorialState.addAwakeningFunctions(awakeTutorial)\n\n  tutorialState.addEventFunctions(R.get.events_tutorialNext, showNextPage)\n  tutorialState.addEventFunctions(R.get.events_showModal, showModal)\n\n  tutorialState.addEventFunctions(R.get.events_windowBlur, goToPause)\n  tutorialState.addEventFunctions(R.get.events_unfrozen, tutorialUnfrozen)\n\n  tutorialState.addEventFunctions(R.get.events_playPredictionSound, playSound)\n  tutorialState.addEventFunctions(R.get.events_playObservationSound, playSound)\n\n\n  /* ======= State Tryout ======= */\n  dataManager.addTable('stateTryout1', eventFields)\n  dataManager.addTable('stateTryout2', eventFields)\n\n  tryoutState.addAwakeningFunctions(awakeTryout)\n  tryoutState.addEndingFunctions(tryoutEnd)\n\n  tryoutState.addEventFunctions(R.get.events_goNextPosition, tryoutGoToNextPosition)\n  tryoutState.addEventFunctions(R.get.events_endObservation, endObservation)\n\n  tryoutState.addEventFunctions(R.get.events_windowBlur, goToPause)\n  tryoutState.addEventFunctions(R.get.events_unfrozen, tutorialUnfrozen)\n\n  tryoutState.addEventFunctions(R.get.events_startPrediction, tryoutStartPrediction)\n  tryoutState.addEventFunctions(R.get.events_responseTimeEnded, tryoutEndPrediction)\n  tryoutState.addEventFunctions(R.get.flags_levelDefined, startLevel)\n  tryoutState.addEventFunctions(R.get.events_restartTutorial, () => {\n    stateManager.goToState(R.get.states_tutorial)\n  })\n\n  tryoutState.addEventFunctions(R.get.events_keydown, tryoutCheckKeyStrokeForPrediction)\n  tryoutState.addEventFunctions(R.get.events_click, checkForClickPrediction)\n\n  /* ======== State Pause ======== */\n  // stateManager.setPauseKeyStroke()\n  pauseState.addAwakeningFunctions(awakenPause)\n  pauseState.addEndingFunctions(endPause)\n  pauseState.addEventFunctions(R.get.events_keydown, pauseKeyDown)\n  pauseState.addEventFunctions(R.get.events_windowFocus, pauseKeyDown)\n  // pauseState.addEventFunctions(R.get.flags_levelDefined, startLevel)\n  // pauseState.addEndingFunctions(function () { this.stateManager.promise('disposeOfButtons') })\n\n  /* ======= prematureEnd State ======= */\n  endState.addAwakeningFunctions(awakenEnd)\n\n  return scene\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/scenes/main/MainScene.js","import {\n  EventData,\n  Array, // eslint-disable-line\n  String, // eslint-disable-line\n  Deferred,\n  delay,\n} from 'experiment-js'\n\n\nconst selectLevel = function () {\n  if (typeof this.state === 'undefined') {\n    throw new Error('state.selectLevel: state is undefined')\n  }\n\n  const stateManager = this.stateManager\n  const dataManager = this.dataManager\n  // const elements2D = stateManager.get('elements2D')\n  // const GUI = stateManager.get('GUI')\n  const R = this.R\n\n  const checkTaskDone = dataManager.query('hasCheckpoint', { checkpoint: R.get.checkpoint_taskDone }, this.connection)\n  const checkTaskEndNoComeback = dataManager.query('hasCheckpoint', { checkpoint: R.get.checkpoint_taskEndNoComeback }, this.connection)\n\n  stateManager.call('hideAll')\n  const deferred = new Deferred()\n\n  Promise.all([checkTaskDone, checkTaskEndNoComeback])\n  .then((results) => {\n    for (const result of results) {\n      if (typeof result.code === 'undefined') {\n        if (stateManager.currentStateKey !== R.get.states_idle) {\n          stateManager.goToState(R.get.states_idle)\n        }\n\n        this.taskObject.modal({ type: 'centralLarge', title: R.get.lostConnectionTitle, content: R.get.lostConnectionContent })\n        .then(() => delay(50)).then(() => { stateManager.call('checkIdleAndConnection', { returnToState: 'active' }) })\n      } else if ((result.code === R.get.checkpoint_taskDone) || (result.code === R.get.checkpoint_taskEndNoComeback)) {\n        stateManager.set('endReason', result.message)\n        stateManager.goToState(R.get.states_end)\n\n        deferred.resolve('active.selectLevel: end of task')\n        return false\n      }\n    }\n    return this.dataManager.query('getCheckpoint', null, this.connection)\n  })\n  .then((result) => {\n    if (result !== false) {\n      if (typeof result.code === 'undefined') {\n        if (stateManager.currentStateKey !== R.get.states_active) {\n          stateManager.goToState(R.get.states_idle)\n        }\n\n        this.taskObject.modal({ type: 'centralLarge', title: R.get.lostConnectionTitle, content: R.get.lostConnectionContent })\n        .then(() => delay(50)).then(() => { stateManager.call('checkIdleAndConnection', { returnToState: 'active' }) })\n      }\n\n      let eventLevel\n      switch (result.code) {\n        case R.get.checkpoint_tutorialDone[0]:\n          eventLevel = new EventData(R.get.flags_levelDefined, stateManager.timeInMs, { level: 1 })\n          break\n        case R.get.checkpoint_tutorialDone[1]:\n          eventLevel = new EventData(R.get.flags_levelDefined, stateManager.timeInMs, { level: 4 })\n          break\n        case R.get.checkpoint_levelDone[0]:\n          eventLevel = new EventData(R.get.flags_levelDefined, stateManager.timeInMs, { level: 2 })\n          break\n        case R.get.checkpoint_levelDone[1]:\n          eventLevel = new EventData(R.get.flags_levelDefined, stateManager.timeInMs, { level: 3 })\n          break\n        case R.get.checkpoint_levelDone[2]:\n          eventLevel = new EventData(R.get.events_goToTutorial, stateManager.timeInMs, { tutorial: 2 })\n          break\n        case R.get.checkpoint_levelDone[3]:\n          stateManager.set('endReason', 'You finished the task finished')\n          stateManager.goToState(R.get.states_end)\n          break\n        case R.get.checkpoint_taskDone:\n          stateManager.set('endReason', result.message)\n          stateManager.goToState(R.get.states_end)\n          break\n        case R.get.checkpoint_taskEndNoComeback:\n          stateManager.set('endReason', result.message)\n          stateManager.goToState(R.get.states_end)\n          break\n        default:\n          // Start tutorial\n          // eventLevel = new EventData(R.get.flags_levelDefined, stateManager.timeInMs, { level: 1 }) // TODO TAKE THAT BACk\n          eventLevel = new EventData(R.get.events_goToTutorial, stateManager.timeInMs, { tutorial: 1 })\n      }\n\n      delay(150).then(() => { stateManager.addEvent(eventLevel) })\n      deferred.resolve('active.selectLevel: level selected - resolved')\n    }\n  })\n  .catch(() => {\n    if (stateManager.currentStateKey !== R.get.states_active) {\n      stateManager.goToState(R.get.states_idle)\n    }\n\n    this.taskObject.modal({ type: 'centralLarge', title: R.get.lostConnectionTitle, content: R.get.lostConnectionContent })\n    .then(() => delay(50)).then(() => { stateManager.call('checkIdleAndConnection', { returnToState: 'active' }) })\n  })\n\n  // GUI.levelVisible = true\n  // /* --- Delete buttons --- */\n  // stateManager.promise('disposeOfButtons')\n  //\n  // const eventButtonOne = new EventData(R.get.flags_levelDefined, stateManager.timeInMs, {\n  //   level: 1,\n  // })\n  // const eventButtonTwo = new EventData(R.get.flags_levelDefined, stateManager.timeInMs, {\n  //   level: 2,\n  // })\n  // const eventButtonThree = new EventData(R.get.flags_levelDefined, stateManager.timeInMs, {\n  //   level: 3,\n  // })\n  // const eventButtonFour = new EventData(R.get.flags_levelDefined, stateManager.timeInMs, {\n  //   level: 4,\n  // })\n  //\n  // const eventButtonTutorialOne = new EventData(R.get.events_goToTutorial, stateManager.timeInMs, {\n  //   tutorial: 1,\n  // })\n  // const eventButtonTutorialFour = new EventData(R.get.events_goToTutorial, stateManager.timeInMs, {\n  //   tutorial: 2,\n  // })\n  //\n  // const width = 220\n  // const height = 40\n  // const widthOffset = width / 2\n  //\n  // const buttonOptionLevelOne = {\n  //   id: 'levelOne',\n  //   parent: GUI,\n  //   text: 'Level 1',\n  //   marginAlignment: 'h: center, v: bottom',\n  //   margin: {\n  //     rightPixels: (width) + widthOffset,\n  //     topPixels: 0,\n  //   },\n  //   width,\n  //   height,\n  //   fill: BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0.8, 0.8, 0.8, 1)),\n  //   clickEventData: eventButtonOne,\n  //   callbackFunction: null,\n  //   fontName: '20pt Arial',\n  //   baseOpacity: 0.8,\n  //   hoverOpacity: 1,\n  // }\n  //\n  // const buttonOptionTutorialOne = _.extend(_.clone(buttonOptionLevelOne), {\n  //   id: 'buttonTutorialLevelFour',\n  //   text: 'Tutorial 1',\n  //   margin: {\n  //     rightPixels: (width) + widthOffset,\n  //     bottomPixels: height,\n  //   },\n  //   clickEventData: eventButtonTutorialOne,\n  // })\n  //\n  //\n  // const buttonOptionLevelTwo = _.extend(_.clone(buttonOptionLevelOne), {\n  //   id: 'buttonLevelTwo',\n  //   text: 'Level 2',\n  //   margin: {\n  //     rightPixels: widthOffset,\n  //     topPixels: 0,\n  //   },\n  //   clickEventData: eventButtonTwo,\n  // })\n  //\n  // const buttonOptionLevelThree = _.extend(_.clone(buttonOptionLevelOne), {\n  //   id: 'buttonLevelThree',\n  //   text: 'Level 3',\n  //   margin: {\n  //     leftPixels: widthOffset,\n  //     topPixels: 0,\n  //   },\n  //   clickEventData: eventButtonThree,\n  // })\n  //\n  // const buttonOptionLevelFour = _.extend(_.clone(buttonOptionLevelOne), {\n  //   id: 'buttonLevelFour',\n  //   text: 'Level 4',\n  //   margin: {\n  //     leftPixels: (width) + widthOffset,\n  //     topPixels: 0,\n  //   },\n  //   clickEventData: eventButtonFour,\n  // })\n  //\n  // const buttonOptionTutorialFour = _.extend(_.clone(buttonOptionLevelOne), {\n  //   id: 'buttonTutorialLevelFour',\n  //   text: 'Tutorial 4',\n  //   margin: {\n  //     leftPixels: (width) + widthOffset,\n  //     bottomPixels: height,\n  //   },\n  //   clickEventData: eventButtonTutorialFour,\n  // })\n  //\n  // Promise.all([stateManager.promise('addButton', buttonOptionLevelOne),\n  //   stateManager.promise('addButton', buttonOptionLevelTwo),\n  //   stateManager.promise('addButton', buttonOptionLevelThree),\n  //   stateManager.promise('addButton', buttonOptionLevelFour),\n  //   stateManager.promise('addButton', buttonOptionTutorialOne),\n  //   stateManager.promise('addButton', buttonOptionTutorialFour),\n  // ])\n  //   .then((buttons) => {\n  //     elements2D.levelButtons = buttons\n  //     for (const button of buttons) {\n  //       button.levelVisible = true\n  //     }\n  //     deferred.resolve('stateManager.selectLevel: resolved')\n  //   })\n\n  return deferred.promise\n}\n\nconst startLevel = function (options = null) {\n  if (typeof this.taskObject === 'undefined') {\n    throw new Error('state.startLevel: this.taskObject is undefined')\n  }\n\n  if (typeof options.data.level === 'undefined') {\n    throw new Error('state.startLevel: options.level is undefined')\n  }\n\n  /* --- Get context --- */\n  const taskObject = this.taskObject\n  const stateManager = this.stateManager\n  const R = this.R\n  const elements2D = stateManager.get('elements2D')\n  stateManager.emptyTimeTriggerEvents()\n  elements2D.agent.opacity = 0\n  elements2D.cross.spriteFrame = R.get.cross_base\n\n  /* --- Delete buttons --- */\n  stateManager.promise('disposeOfButtons')\n\n  stateManager.setGlobal('level', options.data.level)\n  stateManager.setGlobal('levelObject', taskObject.parameters.levels[options.data.level - 1])\n\n  stateManager.set('positionData', {\n    indexOnTransitionSequence: -1,\n    indexOnPredictionSequence: -1,\n    fullSequenceIndex: taskObject.parameters.levels[options.data.level - 1].sequenceObject.fullSequence.length - 3, // TODO PUT IT BACK -1,\n  })\n\n  if (stateManager.currentStateKey !== R.get.states_running) { stateManager.goToState(R.get.states_running) }\n\n  return ('state.startLevel: resolved')\n}\n\nconst endActive = function () {\n  this.stateManager.promise('disposeOfButtons')\n}\nexport { startLevel, selectLevel, endActive }\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/scenes/main/states/active.js","import { EventData } from 'experiment-js'\n\nconst awakenEnd = function () {\n  const R = this.R\n  const scene = this.scene\n  this.stateManager.call('hideAll')\n  scene.initialGui.levelVisible = false\n  this.dataManager.authorize_manual_login = false\n  this.dataManager.query('hasCheckpoint', { checkpoint: R.get.checkpoint_taskDone }, this.connection)\n  .then((r) => {\n    const event = new EventData(this.R.get.events_aknowledgedEnding)\n    this.stateManager.onNext(this.R.get.events_aknowledgedEnding, () => {\n      window.open('', '_self').close()\n    })\n    let reason = 'You completed the task !'\n    let title = R.get.taskFinishedTitle\n    let content = R.get.taskFinishedContent\n\n    if (r.code !== R.get.checkpoint_taskDone) {\n      reason = this.stateManager.get('endReason', '')\n      title = R.get.taskStoppedTitle\n      content = R.get.taskStoppedMessage\n      if (reason !== '') {\n        content += R.get.taskStoppedReason.replace('{t}', reason)\n      }\n      this.taskObject.setCheckpoint(R.get.checkpoint_taskEndNoComeback, reason)\n\n      this.taskObject.modal({ type: 'centralLarge', title, content, event })\n    } else {\n      // this.dataManager.query('getFinalCode', null, this.connection)\n      // .then((r) => {\n      //   content = content.replace('{c}', r.code)\n      this.taskObject.modal({ type: 'centralLarge', title, content, event })\n      // })\n    }\n  })\n}\n\nexport { awakenEnd } //eslint-disable-line\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/scenes/main/states/end.js","import BABYLON from 'experiment-babylon-js'\nimport {\n  Array, // eslint-disable-line\n  String, // eslint-disable-line\n  hasConstructor,\n  delay,\n} from 'experiment-js'\n\nimport { setMargins } from '../functions/globalFunctions'\n\n\nconst awakenPause = function () {\n  const stateManager = this.stateManager\n  const levelObject = stateManager.get('levelObject')\n  const GUI = stateManager.get('GUI')\n  const R = this.R\n  const state = this.state\n  const pauseTime = stateManager.timeInMs\n  const threshold = R.get.thresholdIdle\n\n  stateManager.get('sounds').prediction.play()\n\n  state.hitKeyTime = null\n  state.initialGuiVisible = GUI.levelVisible\n\n  GUI.backgroundFill = BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0, 0, 0, 1))\n  GUI.levelVisible = true\n\n  const lastPauseInfo = stateManager.get('lastPauseInfo', { level: levelObject.level, time: pauseTime })\n  if (lastPauseInfo.level !== levelObject.level) {\n    stateManager.set('pauseTimeLeft', threshold)\n  }\n\n  const currentTimeLeft = stateManager.get('pauseTimeLeft', threshold)\n  stateManager.set('lastPauseInfo', { level: levelObject.level, time: pauseTime })\n\n  // datamanager get pause left\n  const options = { id: 'pauseText',\n    parent: GUI,\n    marginAlignment: 'h: center, v: center',\n    fontName: '30pt Arial',\n    fontSignedDistanceField: true,\n  }\n\n  state.timerText = function () {\n    const timeLeft = parseInt((currentTimeLeft - stateManager.timeInMs + pauseTime) / 1000, 10)\n    if (timeLeft < 0) { return false }\n    return R.get.timeLimitText.replace('{n}', String(timeLeft))\n  }\n\n  let t = 0\n  const delayInMs = 200\n  state.tic = function () {\n    state.centerText.levelVisible = true\n    const text = state.timerText()\n    if (text === false) {\n      stateManager.set('endReason', R.get.endReasonIdle.replace('{t}', (threshold / 1000)).replace('{l}', levelObject.level))\n      stateManager.goToState(R.get.states_end)\n    } else {\n      state.centerText.text = text\n      delay(delayInMs).then(() => {\n        if (stateManager.currentStateKey === R.get.states_pause) { state.tic() }\n      })\n      t += delayInMs\n      if (t >= 3000) {\n        stateManager.get('sounds').prediction.play()\n        t = 0\n      }\n    }\n  }\n\n  if (!hasConstructor(BABYLON.Text2D, state.centerText)) {\n    state.topText = new BABYLON.Text2D(R.get.pauseText, options)\n    setMargins(state.topText, { topPixels: 0, bottomPixels: 40, leftPixels: 0, rightPixels: 0 })\n    state.centerText = new BABYLON.Text2D(state.timerText(), options)\n  } else {\n    state.topText.levelVisible = true\n    state.centerText.levelVisible = true\n    state.centerText.text = state.timerText\n  }\n\n\n  delay(200).then(() => {\n    if (stateManager.currentStateKey === R.get.states_pause) { state.tic() }\n  })\n}\n\nconst pauseKeyDown = function () {\n  const state = this.state\n  const stateManager = this.stateManager\n  const levelObject = stateManager.get('levelObject')\n  const R = this.R\n  const context = this\n  const threshold = R.get.thresholdIdle\n\n  if (state.hitKeyTime === null) { state.hitKeyTime = stateManager.timeInMs }\n\n  state.timerText = function () {\n    const timeLeft = Math.ceil((3000 - stateManager.timeInMs + state.hitKeyTime) / 1000, 10)\n    if (timeLeft < 0) { return false }\n    return R.get.pauseRestart.replace('{n}', String(timeLeft))\n  }\n\n  state.tic = function () {\n    const text = state.timerText()\n    if (text !== false) {\n      state.centerText.text = text\n      delay(200).then(() => {\n        if (!document.hasFocus()) {\n          const lastPauseInfo = stateManager.get('lastPauseInfo', { level: levelObject.level, time: stateManager.timeInMs })\n          const previousTimeLeft = stateManager.get('pauseTimeLeft', threshold)\n          const currentTimeLeft = previousTimeLeft - stateManager.timeInMs + lastPauseInfo.time\n\n          stateManager.set('pauseTimeLeft', currentTimeLeft)\n          awakenPause.bind(context)()\n        } else if (stateManager.currentStateKey === R.get.states_pause) { state.tic() }\n      })\n    } else if (stateManager.frozenState) { stateManager.goToState(stateManager.frozenState) }\n  }\n\n  delay(200).then(() => {\n    if (!document.hasFocus()) {\n      awakenPause.bind(context)()\n    } else if (stateManager.currentStateKey === R.get.states_pause) { state.tic() }\n  })\n}\n\nconst endPause = function () {\n  const stateManager = this.stateManager\n  const state = this.state\n  const levelObject = stateManager.get('levelObject')\n  const GUI = stateManager.get('GUI')\n  const R = this.R\n  const threshold = R.get.thresholdIdle\n\n  GUI.backgroundFill = BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(1, 1, 1, 0))\n  GUI.levelVisible = state.initialGuiVisible\n\n  state.hitKeyTime = null\n  state.topText.levelVisible = false\n  state.centerText.levelVisible = false\n\n  const lastPauseInfo = stateManager.get('lastPauseInfo', { level: levelObject.level, time: stateManager.timeInMs })\n  const previousTimeLeft = stateManager.get('pauseTimeLeft', threshold)\n  const currentTimeLeft = previousTimeLeft - stateManager.timeInMs + lastPauseInfo.time\n\n  if (currentTimeLeft < -3) {\n    stateManager.call('prematureEnd', { reason: R.get.prematureEndPauseAboveThreshold })\n  } else {\n    stateManager.set('pauseTimeLeft', currentTimeLeft)\n  }\n}\n\n\nexport { awakenPause, endPause, pauseKeyDown }\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/scenes/main/states/pause.js","import _ from 'lodash'\nimport BABYLON from 'experiment-babylon-js'\nimport {\n  EventData,\n  Array, // eslint-disable-line\n  String, // eslint-disable-line\n  Deferred,\n  delay,\n  mandatory,\n  debuglog,\n  debugWarn,\n  debugError,\n  sizeToVec,\n  hasConstructor,\n} from 'experiment-js'\n\n\nimport { sampleExponential } from '../../../utilities/taskUtilities'\n\n  /* --- State function --- */\n\nconst stateUnfrozen = function () {\n  if (_.has(this.state, 'currentTrialData.hasPaused')) {\n    this.state.currentTrialData.hasPaused = true\n  }\n}\n\nconst pauseTransition = function () {\n  const stateManager = this.stateManager\n  const state = this.state\n  const R = this.R\n  const level = stateManager.get('levelObject') ? stateManager.get('levelObject').level : ''\n\n  try {\n    const levelObject = stateManager.get('levelObject')\n    const sequenceObject = levelObject.sequenceObject\n    const positionData = stateManager.get('positionData')\n    const startTransitionTime = stateManager.timeInMs\n    state.currentTrialData = null\n\n    stateManager.call('hideAll')\n    let text2d\n    if (level <= 3) {\n      this.taskObject.setCheckpoint(R.get.checkpoint_levelDone[level - 1]).promise\n      .then(() => {\n        const maxTransitionTime = 15 * 60 * 1000\n        const promise = stateManager.resolveOnKey({ except: null })\n        let shouldtic = true\n\n        const transitionText = function () {\n          const timeLeft = Math.ceil((maxTransitionTime - stateManager.timeInMs + startTransitionTime) / 1000, 10)\n          if (timeLeft < 0) { return false }\n          return R.get.finishedLevelTransition.replace('{n}', String(timeLeft)).replace('{l}', level)\n        }\n\n        state.tic = function () {\n          if (!shouldtic) { return }\n          const text = transitionText()\n          if (text !== false) {\n            text2d.text = text\n            state.tooltipPause.box.levelVisible = true\n            delay(200).then(() => {\n              state.tooltipPause.box.levelVisible = false\n              state.tic()\n            })\n          } else {\n            stateManager.set('endReason', 'You were idle for more than 15 min')\n            stateManager.goToState(R.get.states_end)\n          }\n        }\n\n\n        const centerPosition = sizeToVec(this.taskObject.renderSize).scale(0.5)\n\n        state.tooltipPause = stateManager.tooltip({ position: centerPosition.add(new BABYLON.Vector2(0, (this.taskObject.renderSize.height / 2) - 100)), text: transitionText(), duration: promise })\n        text2d = state.tooltipPause.text\n        this.state.shouldPause = false\n        state.tic()\n\n        promise.then(() => {\n          shouldtic = false\n          stateManager.goToState(R.get.states_active)\n          // stateManager.newEvent(R.get.flags_levelDefined, null, { level: level + 1 }, ['globalLog', `stateRunningEventsLvl${level}`])\n        })\n      })\n    } else if ((level === 4) && (positionData.fullSequenceIndex >= sequenceObject.block.length - 1)) {\n      this.taskObject.setCheckpoint(R.get.checkpoint_levelDone[level - 1])\n      this.taskObject.setCheckpoint(R.get.checkpoint_taskDone).promise\n      .then(() => {\n        stateManager.goToState(R.get.states_end)\n      })\n    } else if (level === 4) {\n      positionData.fullSequenceIndex -= 1\n      const blockDone = sequenceObject.block[positionData.fullSequenceIndex]\n      const startTransitionTime = stateManager.timeInMs\n      const maxTransitionTime = 5 * 60 * 1000\n      const promise = stateManager.resolveOnKey({ except: null })\n      let shouldtic = true\n\n      const transitionText = function () {\n        const timeLeft = Math.ceil((maxTransitionTime - stateManager.timeInMs + startTransitionTime) / 1000, 10)\n        if (timeLeft < 0) { return false }\n        return R.get.finishedBlockTransition.replace('{n}', String(timeLeft)).replace('{b}', blockDone + 1)\n      }\n\n      state.tic = function () {\n        if (!shouldtic) { return }\n        const text = transitionText()\n        if (text !== false) {\n          text2d.text = text\n          state.tooltipPause.box.levelVisible = true\n          delay(200).then(() => {\n            state.tooltipPause.box.levelVisible = false\n            state.tic()\n          })\n        } else {\n          stateManager.set('endReason', 'You were idle for more than 5 min')\n          stateManager.goToState(R.get.states_end)\n        }\n      }\n\n\n      const centerPosition = sizeToVec(this.taskObject.renderSize).scale(0.5)\n\n      state.tooltipPause = stateManager.tooltip({ position: centerPosition.add(new BABYLON.Vector2(0, (this.taskObject.renderSize.height / 2) - 100)), text: transitionText(), duration: promise })\n      text2d = state.tooltipPause.text\n      this.state.shouldPause = false\n      state.tic()\n\n      promise.then(() => {\n        shouldtic = false\n        this.state.shouldPause = true\n        stateManager.call('showAll')\n        const nextTransitionTime = this.stateManager.timeInMs + 100\n        stateManager.newEvent(R.get.events_goNextPosition, nextTransitionTime, null, ['globalLog', `stateRunningEventsLvl${levelObject.level}`])\n      })\n    }\n  } catch (e) {\n    debugError('running.pauseTransition: error with the level data.')\n    stateManager.set('endReason', 'There was an error with the task. We are sorry.')\n    stateManager.goToState(R.get.states_end)\n  }\n}\n\nconst startRunning = function () {\n  if (typeof this.taskObject === 'undefined') {\n    throw new Error('state.startRunning: this.taskObject is undefined')\n  }\n\n  const stateManager = this.stateManager\n  const state = this.state\n  const R = stateManager.R\n\n  if (!document.hasFocus()) {\n    stateManager.newEvent(R.get.forcePause)\n  }\n\n  state.shouldPause = true\n  state.pausedBetween = []\n  const levelObject = stateManager.get('levelObject')\n  const elements2D = stateManager.get('elements2D')\n  stateManager.call('showAll')\n  elements2D.loader.value = 0\n\n    /* --- Setup state variables --- */\n  if (typeof state.data === 'undefined') {\n    state.data = []\n  }\n  state.numberOfMissed = 0\n  state.isPredicting = false\n\n\n    // TODO function that stores data from the states\n    // TODO function that transform state data into cwData\n\n    /* --- Store the data --- */\n\n\n  const centerPosition = sizeToVec(this.taskObject.renderSize).scale(0.5)\n  const promise = stateManager.resolveOnKey({ except: null })\n  stateManager.tooltip({ position: centerPosition.add(new BABYLON.Vector2(0, (this.taskObject.renderSize.height / 2) - 100)), text: `You are about to start level ${levelObject.level}\\nHit a key to start`, duration: promise })\n\n  promise.then(() => {\n    // show the first position\n    const nextTransitionTime = this.stateManager.timeInMs + 100\n    const nextTransitionEvent = new EventData(R.get.events_goNextPosition, nextTransitionTime, {\n      belongsTo: [\n        'globalLog', `stateRunningEventsLvl${levelObject.level}`,\n      ],\n      handledAt: null,\n      storedAt: null,\n    })\n    stateManager.addTimeTriggerEvent(nextTransitionEvent)\n  })\n\n\n    // Wait after learning\n    // Start prediction\n    // Wait predictionDuration - look for valid click\n\n    /* --- Redraw tiles --- */\n\n  return ('state.startRunning: resolved')\n}\n\nconst storeData = function () {\n  const state = this.state\n  const stateManager = this.stateManager\n  const levelObject = stateManager.get('levelObject')\n  const sequenceObject = levelObject.sequenceObject\n  const positionData = stateManager.get('positionData')\n  const index = positionData.fullSequenceIndex\n\n  /* --- If currentTrialData is already set, send it to the dataManager to be stored before handling new position --- */\n  let dataToStore = state.currentTrialData\n  try {\n    if ((hasConstructor(Object, state.currentTrialData)) && (stateManager.get('subject_id'))) {\n      const { level, block, blockType, trial, trialType, position, choice, responseTime, startObservation,\n      startPrediction, respondedAt, endPrediction, keysHits, hasPaused, clicks, endObservation } = state.currentTrialData\n\n      /* --- Check if the transition observed was dominant --- */\n      let dominant = null\n      if (levelObject.dominantStructure) {\n        if (!hasConstructor(String, levelObject.dominantStructure)) { levelObject.dominantStructure = String(levelObject.dominantStructure) }\n        dominant = 0\n        if (index - 1 >= 0 && sequenceObject.fullSequence[index - 1] && sequenceObject.fullSequence[index]) {\n          const positionIndexInStructure = levelObject.dominantStructure.indexOf(sequenceObject.fullSequence[index - 1])\n          if (positionIndexInStructure !== -1) {\n            const nextIndex = positionIndexInStructure === 3 ? 0 : positionIndexInStructure + 1\n            if (parseInt(levelObject.dominantStructure[nextIndex], 10) === sequenceObject.fullSequence[index]) {\n              dominant = 1\n            }\n          }\n        }\n      }\n\n      // check if next position is not end of sequence\n      let correct = null\n      let transitionTo = null\n      if (index + 1 < sequenceObject.fullSequence.length) {\n        correct = parseInt(sequenceObject.fullSequence[index + 1], 10) === parseInt(choice, 10)\n        transitionTo = sequenceObject.fullSequence[index + 1]\n      }\n\n\n      /* --- Store the data --- */\n      dataToStore = {\n        subject_id: stateManager.get('subject_id'),\n        level,\n        block,\n        block_type: blockType,\n        dominant_structure: levelObject.dominantStructure,\n        dominant_transition_probability: levelObject.dominantProbability,\n        trial,\n        trial_type: trialType,\n        position,\n        observation_duration: startPrediction ? (startPrediction - startObservation) : (this.timeInMs - startObservation),\n        observed_transition_was_dominant: dominant, // NA for first transition in a sublevel and after prediction\n        transition_to: transitionTo, // NA for GO trials (non blackouts)\n        subject_choice: choice, // NA for NOGO\n        response_time: responseTime, // NA for NOGO or no response\n        correct,\n        key_hits: JSON.stringify(keysHits), // ['key', 'time'], [k,t], ...\n        clicks: JSON.stringify(clicks),\n        has_paused: hasPaused,\n        start_observation: startObservation,\n        end_observation: endObservation,\n        start_prediction: startPrediction,\n        responded_at: respondedAt,\n        end_prediction: endPrediction,\n        belongsTo: ['cwData'],\n      }\n      stateManager.storeData(dataToStore)\n      state.currentTrialData = null\n    }\n  } catch (e) {\n    const message = 'runningState.goToNextPosition: could not store cwData.'\n    debugError(message)\n    stateManager.storeInErrorLog({ message, timestamp: stateManager.timeInMs, data: dataToStore })\n    // TODO check that the stateManager will store it in the DB\n  }\n}\n\nconst goToNextPosition = function (event = {}) {\n  if (typeof this.state === 'undefined') {\n    throw new Error('state.goToNextPosition: state is undefined')\n  }\n  const stateManager = this.stateManager\n  const state = this.state\n  const R = stateManager.R\n  const levelObject = stateManager.get('levelObject')\n\n\n  /* --- Check the participant is doing the task and has valid connection --- */\n  if (!document.hasFocus()) {\n    stateManager.newEvent(R.get.events_windowBlur, null, null, [`stateRunningEventsLvl${levelObject.level}`])\n  }\n\n  let checkConnection = false\n  if (hasConstructor(Deferred, this.state.checkLastInteraction)) {\n    if (!this.state.checkLastInteraction.pending) {\n      this.state.checkLastInteraction = new Deferred()\n      checkConnection = true\n    }\n  } else {\n    this.state.checkLastInteraction = new Deferred()\n    checkConnection = true\n  }\n  if (checkConnection) {\n    stateManager.call('checkIdleAndConnection', { deferred: this.state.checkLastInteraction })\n  }\n\n  /* --- Setup next position --- */\n  const elements2D = stateManager.get('elements2D')\n  const sounds = stateManager.get('sounds')\n  const cross = elements2D.cross\n\n  const sequenceObject = levelObject.sequenceObject\n  const positionData = stateManager.get('positionData')\n\n  const souldPlaySound = levelObject.sound === true\n\n    // Check if the agent should animate to its new position\n  let moveFunction = 'moveAgentToTile'\n  if ((typeof event.data !== 'undefined') && (typeof event.data.data !== 'undefined') && (typeof event.data.data.animate !== 'undefined')) { // TODO think of an easier way to access this\n    moveFunction = event.data.data.animate ? 'animateAgentToTile' : 'moveAgentToTile'\n  }\n\n  /* --- Store Data --- */\n  storeData.bind(this)()\n\n  /* --- Set index --- */\n  positionData.fullSequenceIndex += 1\n  const index = positionData.fullSequenceIndex\n  elements2D.loader.value = 100 * positionData.fullSequenceIndex / sequenceObject.fullSequence.length\n\n  /* --- Check if end of level --- */\n  if (index >= sequenceObject.fullSequence.length) {\n    positionData.fullSequenceIndex -= 1\n      // go to endBlock -> pause - wait for next level to start\n    const nextTransitionEvent = new EventData(R.get.events_pauseTransition, stateManager.timeInMs, {\n      belongsTo: [\n        'globalLog', `stateRunningEventsLvl${levelObject.level}`,\n      ],\n      handledAt: null,\n      storedAt: null,\n    })\n    stateManager.addTimeTriggerEvent(nextTransitionEvent)\n    return ('goToNextPosition: resolved. End of sequence.')\n  } else if ((index > 0) && (sequenceObject.block[index - 1] !== sequenceObject.block[index]) && state.pausedBetween.indexOf(sequenceObject.block[index - 1]) === -1) {\n    /* --- End of block --- */\n    state.pausedBetween.push(sequenceObject.block[index - 1])\n      // go to endBlock -> pause - wait for next block to start\n    stateManager.newEvent(R.get.events_pauseTransition, null, null, ['globalLog', `stateRunningEventsLvl${levelObject.level}`])\n    return ('goToNextPosition: resolved. Changing block.')\n  }\n\n  let agentType = 'rabbit'\n  if ((levelObject.level !== 4) || (sequenceObject.blockType[index] === 'normal')) {\n        // either classic levels or a normal block == choose the wolf agent\n    agentType = 'wolf'\n  }\n\n  if (elements2D.agentType !== agentType) {\n    stateManager.promise('setAgent', { agent: agentType })\n  }\n\n\n      // setup the trialData for this specific trial\n  const trialData = {\n    level: levelObject.level,\n    fullSequenceIndex: index,\n    block: sequenceObject.block[index],\n    blockType: sequenceObject.blockType[index],\n    trial: sequenceObject.trial[index],\n    trialType: sequenceObject.trialType[index],\n    state: state.stateKey,\n    position: sequenceObject.fullSequence[index],\n    choice: null,\n    responseTime: null,\n    startObservation: null,\n    endObservation: null,\n    respondedAt: null,\n    startPrediction: null,\n    endPrediction: null,\n    nextPosition: null,\n    observedTransitionWasDominant: null,\n    keysHits: [],\n    clicks: [],\n    hasPaused: false,\n  }\n  state.data.push(trialData)\n\n\n  // Change the currentTrialData to match new index\n  // keep the currentTrialData reference directly in the state\n  state.currentTrialData = trialData\n\n      // start from a new position - set the prediction phase to false\n  state.isPredicting = false\n\n      // set up a deferred object to return and catch promises resolution\n  const deferred = new Deferred()\n\n\n  // Redraw tiles and move to next position\n  stateManager.call('drawTiles')\n  stateManager.call('setBlackScreen', { on: false })\n  cross.spriteFrame = R.get.cross_base\n  stateManager.call('drawTiles')\n  stateManager.promise(moveFunction, { tile: trialData.position - 1, opacity: 1 })\n  .then(() => {\n    if (souldPlaySound) { sounds.observation.play() }\n    trialData.startObservation = stateManager.timeInMs\n    stateManager.newEvent(R.get.events_endObservation, levelObject.observationDuration, null, [`stateRunningEventsLvl${levelObject.level}`])\n\n  /* --- Presentation will depends on the trial type --- */\n    if (trialData.trialType === 'classic') {\n    // Classic trials are a treated separately\n    // Each position is both a learning example and a feedback\n    // Wait observationDuration then start prediction\n      debugWarn(`classic trial: moved to ${trialData.position}`)\n      const startPredictionTime = levelObject.observationDuration + _.random(levelObject.minISIAfterLearning, levelObject.maxISIAfterLearning)\n      stateManager.newEvent(R.get.events_startPrediction, startPredictionTime, null, ['globalLog', `stateRunningEventsLvl${levelObject.level}`])\n    } else if (trialData.trialType === 'observation_prediction') {\n      debugWarn(`observation_prediction trial: moved to ${trialData.position}`)\n      // set the time until prediction phase\n      const observationTime = levelObject.observationDuration +\n            levelObject.fixedISIAfterObservation +\n            sampleExponential(levelObject.sampleMeanISIAfterObservation, 0, levelObject.maxSampleAfterObservation, levelObject.maxSampleAfterObservation)\n      debugWarn('Observation Time', (observationTime - stateManager.timeInMs) / 1000)\n\n      // create prediction event\n      stateManager.newEvent(R.get.events_startPrediction, parseInt(observationTime, 10), null, [`stateRunningEventsLvl${levelObject.level}`])\n    } else if (trialData.trialType === 'blackout') {\n      debugWarn(`Blackout trial: moved to ${trialData.position}`)\n\n      // set the time until prediction phase\n      const observationTime = levelObject.observationDuration +\n            levelObject.fixedISIAfterObservation +\n            sampleExponential(levelObject.sampleMeanISIAfterObservation, 0, levelObject.maxSampleAfterObservation, levelObject.maxSampleAfterObservation)\n\n      debugWarn('Observation Time', (observationTime) / 1000)\n\n      const blackoutTime = observationTime + levelObject.fixedBlackScreenDuration +\n            sampleExponential(levelObject.sampleMeanBlackScreen, 0, levelObject.maxSampleBlackScreen, levelObject.maxSampleBlackScreen)\n\n      // create prediction event\n      stateManager.newEvent(R.get.events_goNextPosition, blackoutTime, null, [`stateRunningEventsLvl${levelObject.level}`])\n      debugWarn('blackout Time', (blackoutTime) / 1000)\n    }\n\n    if (state.numberOfMissed >= 5) {\n      stateManager.newEvent(R.get.events_moreThanFiveNA, null, null, [`stateRunningEventsLvl${levelObject.level}`])\n      deferred.resolve('goToNextPosition: resolved. Too many NA.')\n    }\n\n    deferred.resolve('stateManager.goToNextPosition: resolved')\n  })\n  /* --- Check if data is set and if subject had not been idle  --- */\n\n\n  return deferred.promise\n}\n\nconst endObservation = function () {\n  this.state.currentTrialData.endObservation = this.stateManager.timeInMs\n  this.stateManager.call('setAgentOpacity', { opacity: 0 })\n  return 'endObservation resolved'\n}\n\nconst startPrediction = function () {\n  if (typeof this.state.currentTrialData === 'undefined') {\n    throw new Error('state.startPrediction: state.currentTrialData is undefined')\n  }\n\n  const state = this.state\n  const stateManager = this.stateManager\n  const R = stateManager.R\n\n  state.numberOfMissed += 1\n\n  const levelObject = stateManager.get('levelObject')\n  stateManager.promise('setAgentOpacity', { opacity: R.get.agent_predictionOpacity })\n\n  stateManager.call('drawPredictionTiles')\n\n  const cross = this.stateManager.get('elements2D').cross\n  cross.spriteFrame = R.get.cross_predict\n  if (levelObject.sound === true) { this.stateManager.get('sounds').prediction.play() }\n\n  state.isPredicting = true\n  state.currentTrialData.startPrediction = stateManager.timeInMs\n  const endResponse = levelObject.predictionDuration\n\n  this.stateManager.newEvent(R.get.events_responseTimeEnded, endResponse, null, [`stateRunningEventsLvl${levelObject.level}`])\n}\n\nconst endPrediction = function () {\n  if (typeof this.state.currentTrialData === 'undefined') {\n    throw new Error('state.startPrediction: currentTrialData is undefined')\n  }\n\n  const stateManager = this.stateManager\n  const state = this.state\n  const R = stateManager.R\n\n  const levelObject = stateManager.get('levelObject')\n  const cross = this.stateManager.get('elements2D').cross\n\n    /* --- End prediction - store data --- */\n\n  state.isPredicting = false\n  if (levelObject.level === 4) {\n      // fMRI levels\n    state.currentTrialData.endPrediction = stateManager.timeInMs\n    if (this.state.currentTrialData.choice !== null) {\n      cross.spriteFrame = R.get.crossLockByPosition[this.state.currentTrialData.choice - 1]\n    } else {\n      cross.spriteFrame = R.get.cross_base\n    }\n    const endPrediction = levelObject.fixedISIAfterPrediction +\n        sampleExponential(levelObject.sampleMeanISIAfterPrediction, null, levelObject.maxSampleAfterPrediction, levelObject.maxSampleAfterPrediction)\n\n    this.stateManager.newEvent(R.get.events_goNextPosition, endPrediction, null, [`stateRunningEventsLvl${levelObject.level}`])\n  } else {\n      // classic levels\n    state.currentTrialData.endPrediction = stateManager.timeInMs\n    this.stateManager.newEvent(R.get.events_goNextPosition, null, null, [`stateRunningEventsLvl${levelObject.level}`])\n  }\n\n  return 'state.endPrediction: resolved'\n}\n\nconst checkForClickPrediction = function (event = mandatory()) {\n  try {\n    if (typeof this.taskObject === 'undefined') {\n      throw new Error('state.checkForClickPrediction: this.taskObject is undefined')\n    }\n\n      // todo with click detection Canvas2D\n    if (typeof event.data.clientY === 'undefined') {\n      throw new Error('state.checkForClickPrediction: event.data.clientY is undefined.')\n    }\n\n    if (typeof this.state.currentTrialData === 'undefined') {\n      throw new Error('state.checkForClickPrediction: options.trialData is undefined')\n    }\n\n    const stateManager = this.stateManager\n    const state = this.state\n\n    state.currentTrialData.clicks.push([event.data.engineX, event.data.engineY, stateManager.timeInMs])\n  } catch (e) {\n    debugError(e)\n  }\n  return 'checkForClickPrediction resolved'\n}\n\nconst checkKeyStrokeForPrediction = function (event = mandatory()) {\n  try {\n    if (typeof this.taskObject === 'undefined') {\n      throw new Error('state.checkKeyStrokeForPrediction: this.taskObject is undefined')\n    }\n\n    if (typeof event.data.keyCode === 'undefined') {\n      throw new Error('state.startPrediction: event.data.keyCode is undefined')\n    }\n\n    if (typeof this.state.currentTrialData === 'undefined') {\n      throw new Error('state.startPrediction: state.currentTrialData is undefined')\n    }\n\n    const stateManager = this.stateManager\n    const state = this.state\n    const R = this.R\n\n    const levelObject = stateManager.get('levelObject')\n\n    const keyCode = event.data.keyCode\n    const key = event.data.key\n\n    if (_.has(state, 'currentTrialData.keysHits')) {\n      if (!hasConstructor(Array, state.currentTrialData.keysHits)) {\n        state.currentTrialData.keysHits = []\n      }\n\n      state.currentTrialData.keysHits.push([key, keyCode, stateManager.timeInMs])\n    }\n\n    const keys = {\n      m: [77, 3, R.get.cross_bottomRight],\n      d: [68, 1, R.get.cross_topLeft],\n      c: [67, 4, R.get.cross_bottomLeft],\n      k: [75, 2, R.get.cross_topRight],\n    }\n\n      /* --- Check if the subjects click was during the prediction phase and that he did not already chose  --- */\n\n    if ((state.isPredicting === true) && (state.currentTrialData.startPrediction !== null) && (state.currentTrialData.choice === null)) {\n      let position = null\n      let cross = 1\n      _.forEach(keys, (keyPosition) => {\n        if (keyCode === keyPosition[0]) {\n          position = keyPosition[1]\n          cross = keyPosition[2]\n        }\n      })\n        /* --- If the key was one of the specified store the corresponding position, responseTime and choice --- */\n\n      if (position !== null) {\n          // Store the choice of the subject and responseTime\n\n        state.currentTrialData.choice = position\n        state.currentTrialData.responseTime = stateManager.timeInMs - state.currentTrialData.startPrediction\n        state.currentTrialData.respondedAt = stateManager.timeInMs\n\n        this.stateManager.get('elements2D').cross.spriteFrame = cross\n        stateManager.call('highlightPosition', {\n          position: position - 1,\n        })\n\n          // reset the number of missed trials\n        state.numberOfMissed = 0\n\n        stateManager.newEvent(R.get.events_hasResponded, null, null, [`stateRunningEventsLvl${levelObject.level}`])\n\n        debuglog(`state.checkKeyStrokeForPrediction: has chosen position ${position}.`)\n        return position\n      }\n      debuglog('state.checkKeyStrokeForPrediction: key did not correspond to state selection keys.')\n      return false\n    }\n    debuglog('state.checkKeyStrokeForPrediction: already chosen')\n    return false\n  } catch (e) {\n    debugError(e)\n    return false\n  }\n}\n\nconst playSound = function (event) {\n  const sounds = this.stateManager.getGlobal('sounds')\n  sounds[event.data.name].play()\n}\n\nexport {\n  stateUnfrozen,\n  startRunning,\n  goToNextPosition,\n  startPrediction,\n  checkForClickPrediction,\n  checkKeyStrokeForPrediction,\n  endPrediction,\n  playSound,\n  endObservation,\n  pauseTransition,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/scenes/main/states/running.js","import _ from 'lodash'\nimport BABYLON from 'experiment-babylon-js'\nimport {\n  EventData,\n  Array, // eslint-disable-line\n  String, // eslint-disable-line\n  Deferred,\n  delay,\n  mandatory,\n  debuglog,\n  hasConstructor,\n  rep,\n  sizeToVec,\n  debugError,\n  debugWarn,\n} from 'experiment-js'\n\nimport { getFullSequenceObjectForClassicLevels, sampleExponential } from '../../../utilities/taskUtilities'\n\n\nconst awakeTryout = function () {\n  const taskObject = this.taskObject\n  const state = this.state\n  const currentTutorial = this.stateManager.get('currentTutorial', 1)\n  const stateManager = this.stateManager\n  const elements2D = stateManager.get('elements2D')\n  const R = this.R\n\n  elements2D.loader.value = 0\n  stateManager.call('showAll')\n\n  state.data = state.data || []\n  state.isPredicting = false\n  state.shouldPause = (currentTutorial !== 1)\n  state.index = -1\n  stateManager.setGlobal('level', `tryout-${currentTutorial}`)\n\n  // Test list\n  state.tests = {\n    wolfFirstAppears: {\n      title: 'Four possible positions',\n      message: 'The wolf may appear at any of the four position on the screen.',\n      passed: false,\n    },\n    wolfHasAppeared: {\n      title: 'Predict wolf\\'s next position',\n      message: `The wolf has appeared on the top left position. With the keyboard keys predict its next position.<br>\n      D for top left, C for bottom left, K for top right, and M for bottom right.`,\n      passed: false,\n    },\n    predictionTest: {\n      title: 'Prediction phase',\n      message: 'Predict the next position of the wolf {n}/3.',\n      passed: false,\n      numberOfPrediction: 0,\n    },\n    realTimeTest: {\n      title: 'Now try with the real timing',\n      message: 'Congratulations ! Now that you got the gist of it, you will have to predict as fast as possible.',\n      passed: false,\n    },\n    rabbitFirstAppear: {\n      title: 'Predict the next position of the Rabbit',\n      message: 'Use the keyboard to predict the next position of the rabbit.',\n      passed: false,\n    },\n    rabbitFirstDisapear: {\n      title: R.get.rabbitFirstDisapearTitle,\n      message: R.get.rabbitFirstDisapearMessage,\n      passed: false,\n    },\n    wolfFmriFirstAppear: {\n      title: R.get.wolfFmriFirstAppearTitle,\n      message: R.get.wolfFmriFirstAppearMessage,\n      passed: false,\n    },\n    blackoutFirstAppear: {\n      title: R.get.blackoutFirstAppearTitle,\n      message: R.get.blackoutFirstAppearMessage,\n      passed: false,\n    },\n  }\n\n  state.hasPassedAllTest = function () {\n    for (const key in state.tests) {\n      if (state.tests.hasOwnProperty(key)) {\n        const test = state.tests[key]\n        if (!test.passed) { return false }\n      }\n    }\n    return true\n  }\n\n\n  if (currentTutorial === 1) {\n    // set classic sequence object with 10 transition\n    state.sequenceObject = getFullSequenceObjectForClassicLevels([1, 3, 4, 2, 1, 3, 4, 2, 1, 3, 2, 4, 2, 1, 3])\n    stateManager.setGlobal('levelObject', this.taskObject.parameters.levels[0])\n  } else {\n    // set fMRI sequence object with 5 transition wolf and 5 transition rabbit\n    state.sequenceObject = {\n      fullSequence: [1, 2, 1, 3, 4, 2, 1, 3, 4, 3],\n      trial: _.range(1, 10),\n      trialType: rep(['observation_prediction', 'blackout'], 5),\n      block: rep(1, 5).concat(rep(2, 5)),\n      blockType: rep('random', 5).concat(rep('normal', 5)),\n    }\n    stateManager.setGlobal('levelObject', taskObject.parameters.levels[3])\n  }\n\n  this.stateManager.newEvent(this.R.get.events_goNextPosition, null, null, [`stateTryout${currentTutorial}`])\n}\n\nconst tryoutGoToNextPosition = function () {\n  // TODO experiment-boxes penser a faire dans un tooltip tool qui permet de focus sur un element et fait un modal en dessous pour expliquer\n\n  const stateManager = this.stateManager\n  const state = this.state\n  state.index += 1\n\n  const elements2D = stateManager.get('elements2D')\n  const levelObject = stateManager.get('levelObject')\n  const cross = elements2D.cross\n  const R = this.R\n  const tutorials = R.get.tutorials\n\n  const currentTutorial = stateManager.get('currentTutorial', 1)\n  const index = state.index\n  const sequenceObject = state.sequenceObject\n\n  stateManager.hideTooltip()\n\n  const ntransition = sequenceObject.fullSequence.length\n  // Check if finished\n  if (index > ntransition - 1) {\n    // show finished tryout\n    stateManager.call('hideAll')\n\n    if (currentTutorial === 1) {\n      const event = new EventData(this.R.get.flags_levelDefined, stateManager.timeInMs, { level: 1 })\n      this.taskObject.modal({ title: tutorials.askContinue.title.en, content: tutorials.askContinue.content.en, event })\n    } else {\n      const event = new EventData(this.R.get.flags_levelDefined, stateManager.timeInMs, { level: 4 })\n      this.taskObject.modal({ title: tutorials.askfMRIContinue.title.en, content: tutorials.askfMRIContinue.content.en, event })\n    }\n\n    this.taskObject.currentModal.modalBox.buttonText = 'Go !'\n\n    return 'state.tryoutGoToNextPosition: finished tryout'\n  }\n\n  elements2D.loader.value = 100 * index / ntransition\n\n\n  let lastChoice = null\n  if ((typeof state.currentTrialData === 'object') && (typeof state.currentTrialData.choice === 'number')) {\n    lastChoice = parseInt(state.currentTrialData.choice, 10)\n  }\n\n  // setup the trialData for this specific trial\n  const trialData = {\n    level: levelObject.level,\n    fullSequenceIndex: index,\n    block: sequenceObject.block[index],\n    blockType: sequenceObject.blockType[index],\n    trial: sequenceObject.trial[index],\n    trialType: sequenceObject.trialType[index],\n    state: state.stateKey,\n    position: sequenceObject.fullSequence[index],\n    choice: null,\n    responseTime: null,\n    startObservation: null,\n    endObservation: null,\n    respondedAt: null,\n    startPrediction: null,\n    endPrediction: null,\n    nextPosition: null,\n    observedTransitionWasDominant: null,\n    keysHits: [],\n    clicks: [],\n    hasPaused: null,\n  }\n  state.data.push(trialData)\n\n  /* --- If currentTrialData is already set, send it to the dataManager to be stored before handling new position --- */\n  let dataToStore = state.currentTrialData\n  try {\n    if ((typeof state.currentTrialData !== 'undefined') && (stateManager.get('subject_id'))) {\n      const { block, blockType, trial, trialType, position, choice, responseTime, startObservation,\n      startPrediction, respondedAt, endPrediction, keysHits, hasPaused, clicks, endObservation } = state.currentTrialData\n\n      /* --- Check if the transition observed was dominant --- */\n      const dominant = null\n\n\n      /* --- Store the data --- */\n      dataToStore = {\n        subject_id: stateManager.get('subject_id'),\n        level: currentTutorial,\n        block,\n        block_type: blockType,\n        dominant_structure: levelObject.dominantStructure,\n        dominant_transition_probability: levelObject.dominantProbability,\n        trial,\n        trial_type: trialType,\n        position,\n        observation_duration: startPrediction ? (startPrediction - startObservation) : (this.timeInMs - startObservation),\n        observed_transition_was_dominant: dominant, // NA for first transition in a sublevel and after prediction\n        transition_to: sequenceObject.fullSequence[index], // NA for GO trials (non blackouts)\n        subject_choice: choice, // NA for NOGO\n        response_time: responseTime, // NA for NOGO or no response\n        correct: parseInt(sequenceObject.fullSequence[index], 10) === parseInt(choice, 10),\n        key_hits: JSON.stringify(keysHits), // ['key', 'time'], [k,t], ...\n        clicks: JSON.stringify(clicks),\n        has_paused: hasPaused,\n        start_observation: startObservation,\n        end_observation: endObservation,\n        start_prediction: startPrediction,\n        responded_at: respondedAt,\n        end_prediction: endPrediction,\n        belongsTo: ['tryoutData'],\n      }\n      stateManager.storeData(dataToStore)\n    }\n  } catch (e) {\n    const message = 'runningState.goToNextPosition: could not store cwData.'\n    debugError(message)\n    stateManager.storeInErrorLog({ message, timestamp: stateManager.timeInMs, data: dataToStore })\n    // TODO check that the stateManager will store it in the DB\n  }\n\n    // keep the currentTrialData reference directly in the state\n  state.currentTrialData = trialData\n\n    // start from a new position - set the prediction phase to false\n  state.isPredicting = false\n\n  // set up a deferred object to return and catch promises resolution\n  // const deferred = new Deferred()\n\n  let agentType = 'wolf'\n  if (sequenceObject.blockType[index] === 'random') { agentType = 'rabbit' }\n  if (elements2D.agentType !== agentType) {\n    stateManager.call('setAgent', { agent: agentType })\n  }\n\n  cross.spriteFrame = this.R.get.cross_base\n  stateManager.call('drawTiles', { withKeys: false })\n  stateManager.call('moveAgentToTile', { tile: trialData.position - 1, opacity: 1 })\n  let promise = Promise.resolve()\n  if ((currentTutorial === 1) && (!state.tests.wolfFirstAppears.passed)) {\n    promise = this.taskObject.modal({ title: state.tests.wolfFirstAppears.title, content: state.tests.wolfFirstAppears.message })\n    state.tests.wolfFirstAppears.passed = true\n  } else if ((currentTutorial === 2) && (!state.tests.rabbitFirstAppear.passed)) {\n    promise = this.taskObject.modal({ title: state.tests.rabbitFirstAppear.title, content: state.tests.rabbitFirstAppear.message })\n    state.tests.rabbitFirstAppear.passed = true\n  } else if ((currentTutorial === 2) && (sequenceObject.trialType[index - 1] === 'blackout') && (!state.tests.blackoutFirstAppear.passed)) {\n    promise = this.taskObject.modal({ title: state.tests.blackoutFirstAppear.title, content: state.tests.blackoutFirstAppear.message })\n    state.tests.blackoutFirstAppear.passed = true\n  } else if ((currentTutorial === 2) && (sequenceObject.blockType[index] === 'normal') && (!state.tests.wolfFmriFirstAppear.passed)) {\n    promise = this.taskObject.modal({ title: state.tests.wolfFmriFirstAppear.title, content: state.tests.wolfFmriFirstAppear.message })\n    state.tests.wolfFmriFirstAppear.passed = true\n  }\n\n  promise.then(() => {\n    trialData.startObservation = stateManager.timeInMs\n\n    let promise = Promise.resolve()\n\n    const centerPosition = sizeToVec(this.taskObject.renderSize).scale(0.5)\n\n    if ((index !== 0) && (sequenceObject.trialType[index - 1] !== 'blackout') && (sequenceObject.blockType[index - 1] === sequenceObject.blockType[index])) {\n      if (lastChoice === sequenceObject.fullSequence[index]) {\n         // Correct\n        const background = new BABYLON.Color4(0.1, 0.7, 0.1, 0.9)\n        let text = 'Correct!'\n        let duration = 2000\n        if ((currentTutorial === 1) && (!state.tests.predictionTest.passed)) {\n          text += '\\nHit a key to continue'\n          promise = stateManager.resolveOnKey({ except: null })\n          duration = promise\n        }\n\n\n        let position = centerPosition\n        const tilePosition = stateManager.call('getTilePositions')[lastChoice - 1]\n        position = tilePosition\n        stateManager.tooltip({ position, background, text, duration })\n      } else {\n           // Incorrect\n        const background = new BABYLON.Color4(0.7, 0.1, 0.1, 0.9)\n\n        let position = centerPosition // TODO this.taskObject.center\n        if (hasConstructor(Number, lastChoice)) {\n          const tilePosition = stateManager.call('getTilePositions')[lastChoice - 1]\n               // const sign = Math.sign(position.subtract(tilePosition).x)\n          position = tilePosition\n        }\n\n        let text = 'Incorrect!'\n        let duration = 2000\n        if ((currentTutorial === 1) && (!state.tests.predictionTest.passed)) {\n          text += '\\nHit a key to continue'\n          promise = stateManager.resolveOnKey({ except: null })\n          duration = promise\n        }\n\n        stateManager.tooltip({ position, background, text, duration })\n      }\n    }\n\n\n    if (currentTutorial === 1 && !state.tests.predictionTest.passed && state.tests.predictionTest.numberOfPrediction >= 3) {\n      state.tests.predictionTest.passed = true\n      promise = stateManager.resolveOnKey({ except: null })\n      stateManager.tooltip({ position: centerPosition.add(new BABYLON.Vector2(0, centerPosition.y - 100)), text: `${state.tests.realTimeTest.message}\\nHit a key to continue`, duration: promise })\n    }\n\n    return promise\n  })\n  .then(() => {\n    trialData.startObservation = stateManager.timeInMs\n    stateManager.newEvent(R.get.events_endObservation, levelObject.observationDuration, null, [`stateRunningEventsLvl${levelObject.level}`])\n\n    if (currentTutorial === 1) {\n      const nextTransitionTime = trialData.startObservation + levelObject.observationDuration + _.random(levelObject.minISIAfterLearning, levelObject.maxISIAfterLearning)\n      stateManager.newEvent(this.R.get.events_startPrediction, nextTransitionTime, null, [`stateTryout${currentTutorial}`])\n    } else if (sequenceObject.trialType[index] === 'blackout') {\n      const observationTime = levelObject.observationDuration +\n            levelObject.fixedISIAfterObservation +\n            sampleExponential(levelObject.sampleMeanISIAfterObservation, 0, levelObject.maxSampleAfterObservation, levelObject.maxSampleAfterObservation)\n\n      // add a blackout delay\n      delay(observationTime).then(() => {\n        stateManager.newEvent(R.get.events_screenWentBlack, null, [`stateRunningEventsLvl${levelObject.level}`])\n        stateManager.call('setAgentOpacity', { opacity: 0 })\n      })\n\n\n      const blackoutTime = observationTime + levelObject.fixedBlackScreenDuration +\n            sampleExponential(levelObject.sampleMeanBlackScreen, 0, levelObject.maxSampleBlackScreen, levelObject.maxSampleBlackScreen)\n\n          // create prediction event\n      stateManager.newEvent(R.get.events_goNextPosition, blackoutTime, null, [`stateRunningEventsLvl${levelObject.level}`])\n    } else if (sequenceObject.trialType[index] === 'observation_prediction') {\n      let observationTime = stateManager.timeInMs + levelObject.observationDuration + levelObject.fixedISIAfterObservation\n      observationTime += sampleExponential(levelObject.sampleMeanISIAfterObservation, 0, levelObject.maxSampleAfterObservation, levelObject.maxSampleAfterObservation)\n\n      debugWarn('Observation Time', (observationTime - stateManager.timeInMs) / 1000)\n          // create prediction event\n      stateManager.newEvent(R.get.events_startPrediction, observationTime, [`stateRunningEventsLvl${levelObject.level}`])\n    } else {\n      debugError('Error in sequence', sequenceObject)\n    }\n  })\n\n  return 'tryoutGoToNextPosition: finish sync call'\n}\n\nconst tryoutStartPrediction = function () {\n  const state = this.state\n  const stateManager = this.stateManager\n  const R = stateManager.R\n\n  const currentTutorial = stateManager.get('currentTutorial', 1)\n\n  const levelObject = stateManager.get('levelObject')\n  stateManager.promise('setAgentOpacity', { opacity: R.get.agent_predictionOpacity })\n\n  const cross = stateManager.get('elements2D').cross\n  cross.spriteFrame = R.get.cross_predict\n\n  const centerPosition = sizeToVec(this.taskObject.renderSize).scale(0.5)\n\n  const npred = state.tests.predictionTest.numberOfPrediction\n\n  let promise = Promise.resolve()\n  if ((currentTutorial === 1) && (!state.tests.predictionTest.passed)) {\n    stateManager.call('drawPredictionTiles', { withKeys: 'dkmc' })\n    promise = stateManager.resolveOnKey({ except: null })\n    stateManager.tooltip({\n      position: centerPosition.add(new BABYLON.Vector2(0, centerPosition.y - 100)),\n      text: `${state.tests.predictionTest.message.replace('{n}', npred + 1)}\\n${R.get.hitAKeyToContinue}`,\n      duration: promise,\n      event: new EventData('predictionTextDismissed'),\n    })\n\n    const text = R.get.changeCenterSquare\n    stateManager.tooltip({ position: centerPosition.add(new BABYLON.Vector2(0, -50)), text, duration: promise })\n  } else {\n    stateManager.call('drawPredictionTiles')\n  }\n\n  promise.then(() => {\n    state.isPredicting = true\n    state.currentTrialData.startPrediction = stateManager.timeInMs\n\n    if ((currentTutorial === 1) && (!state.tests.predictionTest.passed)) {\n      const background = null // new BABYLON.Color4(0.6, 100 / 255, 0, 0.9)\n      const choiceDeferred = new Deferred()\n      state.choiceDeferred = choiceDeferred\n\n      const text = R.get.chooseNextPosition\n      stateManager.tooltip({ position: centerPosition, background, text, duration: choiceDeferred.promise })\n      choiceDeferred.promise.then(() => {\n        stateManager.newEvent(R.get.events_responseTimeEnded, stateManager.timeInMs + levelObject.predictionDuration, null, [`stateTryout${currentTutorial}`])\n      })\n    } else if (currentTutorial === 1) {\n      stateManager.newEvent(R.get.events_responseTimeEnded, stateManager.timeInMs + levelObject.predictionDuration, null, [`stateTryout${currentTutorial}`])\n    } else {\n      stateManager.call('setAgentOpacity', { opacity: 0 })\n      const endResponse = levelObject.predictionDuration\n      delay(endResponse).then(() => {\n        this.state.isPredicting = false\n        if (this.state.currentTrialData.choice !== null) {\n          cross.spriteFrame = R.get.crossLockByPosition[this.state.currentTrialData.choice - 1]\n        } else {\n          cross.spriteFrame = R.get.cross_base\n        }\n      })\n      const endPrediction = endResponse + levelObject.fixedISIAfterPrediction +\n          sampleExponential(levelObject.sampleMeanISIAfterPrediction, null, levelObject.maxSampleAfterPrediction, levelObject.maxSampleAfterPrediction)\n\n      this.stateManager.newEvent(R.get.events_goNextPosition, endPrediction, null, [`stateTryout${currentTutorial}`])\n    }\n  })\n}\n\nconst tryoutCheckKeyStrokeForPrediction = function (event = mandatory()) {\n  if (typeof event.data.keyCode === 'undefined') {\n    throw new Error('state.checkKeyStrokeForPrediction: event.data.keyCode is undefined')\n  }\n\n\n  const stateManager = this.stateManager\n  const state = this.state\n  const R = this.R\n\n  const currentTutorial = stateManager.get('currentTutorial', 1)\n\n\n  const keyCode = event.data.keyCode\n  const key = event.data.key\n  const keys = {\n    m: [77, 3, R.get.cross_bottomRight],\n    d: [68, 1, R.get.cross_topLeft],\n    c: [67, 4, R.get.cross_bottomLeft],\n    k: [75, 2, R.get.cross_topRight],\n  }\n\n  if (_.has(state, 'currentTrialData.keysHits')) {\n    if (!hasConstructor(Array, state.currentTrialData.keysHits)) {\n      state.currentTrialData.keysHits = []\n    }\n\n    state.currentTrialData.keysHits.push([key, keyCode, stateManager.timeInMs])\n  }\n\n  /* --- Check if the subjects hit was during the prediction phase and that he did not already chose  --- */\n\n  if ((state.isPredicting === true) && (state.currentTrialData.startPrediction !== null) && (state.currentTrialData.choice === null)) {\n    let position = null\n    let cross = 1\n    let chosenKey = null\n    for (const key in keys) {\n      if (keys.hasOwnProperty(key)) {\n        const keyPosition = keys[key]\n        if (keyCode === keyPosition[0]) {\n          position = keyPosition[1]\n          cross = keyPosition[2]\n          chosenKey = key\n        }\n      }\n    }\n    /* --- If the key was one of the specified store the corresponding position, responseTime and choice --- */\n\n    if (position !== null) {\n      // Store the choice of the subject and responseTime\n      if (hasConstructor(Deferred, state.choiceDeferred)) {\n        state.choiceDeferred.resolve()\n        state.choiceDeferred = null\n      }\n\n      state.currentTrialData.choice = position\n      state.currentTrialData.responseTime = stateManager.timeInMs - state.currentTrialData.startPrediction\n      state.currentTrialData.respondedAt = stateManager.timeInMs\n\n      this.stateManager.get('elements2D').cross.spriteFrame = cross\n      if (!state.tests.predictionTest.passed) {\n        state.tests.predictionTest.numberOfPrediction += 1\n\n        const centerPosition = sizeToVec(this.taskObject.renderSize).scale(0.5)\n        let tilePosition = stateManager.call('getTilePositions')[position - 1]\n        const sign = Math.sign(centerPosition.subtract(tilePosition).x)\n        tilePosition = tilePosition.add(new BABYLON.Vector2(sign * 50, sign * 50))\n        stateManager.tooltip({ position: tilePosition, text: `${R.get.youSelectedThisTile} (${chosenKey})`, duration: delay(2000) })\n        const text = R.get.aLittleSquareShowsYourChoice\n        stateManager.tooltip({ position: centerPosition.add(new BABYLON.Vector2(0, -50)), text, duration: 2000 })\n      }\n\n      // reset the number of missed trials\n      state.numberOfMissed = 0\n\n\n      stateManager.newEvent(R.get.events_hasResponded, null, null, [`stateTryout${currentTutorial}`])\n      debuglog(`state.checkKeyStrokeForPrediction: has chosen position ${position}.`)\n      return position\n    }\n    debuglog('state.checkKeyStrokeForPrediction: key did not correspond to state selection keys.')\n    return false\n  }\n  debuglog('state.checkKeyStrokeForPrediction: not a valid time to choose or already chosen')\n  return false\n}\n\nconst tryoutEndPrediction = function () {\n  const stateManager = this.stateManager\n  const state = this.state\n  const R = this.R\n\n  const currentTutorial = stateManager.get('currentTutorial', 1)\n\n  /* --- End prediction - store data --- */\n  state.isPredicting = false\n  state.currentTrialData.endPrediction = stateManager.timeInMs\n\n  stateManager.newEvent(R.get.events_goNextPosition, null, null, [`stateTryout${currentTutorial}`])\n  return ('state.endPrediction: resolved')\n}\n\n\nconst tryoutEnd = function () {\n  const stateManager = this.stateManager\n  const R = this.R\n\n  const currentTutorial = stateManager.get('currentTutorial', 1)\n  this.taskObject.setCheckpoint(R.get.checkpoint_tutorialDone[currentTutorial - 1])\n}\n\nexport {\n  awakeTryout,\n  tryoutEndPrediction,\n  tryoutCheckKeyStrokeForPrediction,\n  tryoutGoToNextPosition,\n  tryoutStartPrediction,\n  tryoutEnd,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/scenes/main/states/tryout.js","module.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"experiment-mathjs\",\"commonjs2\":\"experiment-mathjs\",\"amd\":\"experiment-mathjs\",\"root\":\"math\"}\n// module id = 15\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"jQuery\",\"commonjs2\":\"jQuery\",\"amd\":\"jQuery\",\"root\":\"jQuery\"}\n// module id = 16\n// module chunks = 0"],"sourceRoot":""}