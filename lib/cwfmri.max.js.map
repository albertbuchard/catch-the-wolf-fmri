{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap c4d69d37ccd586c094f3","webpack:///external {\"commonjs\":\"experiment-js\",\"commonjs2\":\"experiment-js\",\"amd\":\"experiment-js\",\"root\":\"experiment\"}","webpack:///external {\"commonjs\":\"experiment-babylon-js\",\"commonjs2\":\"experiment-babylon-js\",\"amd\":\"experiment-babylon-js\",\"root\":\"BABYLON\"}","webpack:///external {\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"lodash\",\"root\":\"_\"}","webpack:///./src/task/utilities/taskUtilities.js","webpack:///./src/task/scenes/main/functions/globalFunctions.js","webpack:///./src/task/scenes/main/states/tutorial.js","webpack:///./src/task/startup/startup.js","webpack:///./builder.js","webpack:///./src/task/scenes/main/MainScene.js","webpack:///./src/task/scenes/main/states/active.js","webpack:///./src/task/scenes/main/states/end.js","webpack:///./src/task/scenes/main/states/pause.js","webpack:///./src/task/scenes/main/states/running.js","webpack:///./src/task/scenes/main/states/tryout.js","webpack:///external {\"commonjs\":\"experiment-boxes\",\"commonjs2\":\"experiment-boxes\",\"amd\":\"experiment-boxes\",\"root\":\"experimentBoxes\"}","webpack:///external {\"commonjs\":\"experiment-mathjs\",\"commonjs2\":\"experiment-mathjs\",\"amd\":\"experiment-mathjs\",\"root\":\"math\"}","webpack:///external {\"commonjs\":\"jQuery\",\"commonjs2\":\"jQuery\",\"amd\":\"jQuery\",\"root\":\"jQuery\"}"],"names":["getAspectRatio","surfaceObject","constructor","Texture","getBaseSize","w","width","h","height","Error","getBaseGraphMatrices","graphMatrix1","graphMatrix2","baseMatrices","A","B","transpose","C","D","computeValidStateSpace","taskObject","options","Promise","resolve","reject","optionsBase","maxNumberOfCycles","stateSpace","extend","rules","parameters","rulesProportions","proportionThreshold","rulesData","i","length","push","rule","proportion","threshold","numberOfRows","numberOfTargets","linearRules","without","currentTarget","position","beginLineIndex","Math","floor","downIndex","upIndex","rightIndex","leftIndex","closestTargets","up","left","down","right","randomNumber","random","currentRuleData","clone","find","e","d","sample","nextPosition","sampleNewRule","lStateSpace","state","recursivelyExpandStateSpace","loopIndex","timeIndependantRules","newSpace","recurse","k","nextHiddenState","hiddenStateIndex","firstTargetHiddenState","findKey","p","secondTargetHiddenState","thirdTargetHiddenState","indexOf","concat","slice","transitionMatrixFromStateSpace","Array","transitionMatrix","zeros","subset","index","getCyclesFromTransitionMatrix","maxTransitions","_size","spaceSize","positionsInCycle","cycles","currentCyclePositions","startingPosition","currentPositionVector","currentPosition","flatten","_data","numberOfTransitions","multiply","currentPositionIndexInCycle","cycle","union","loopOnStateSpace","hiddenSpace","smallestSize","smallestCycleIndex","positionToChange","validStateSpaces","getTransitionMatrixFromBase","baseMatrix","mainTransitionProbability","noSelfTransition","matrix","size","map","value","getValidTransitionArray","transitionArray","toArray","lengths","uniqueLengths","uniqueValues","getRandomTransitionMatrix","stateProbabilities","outputType","getZeroOrderTransitionMatrix","dominantPosition","dominantProbability","numberOfStates","nonDominantProbability","round","rowValue","randomTransitionMatrix","positionToVector","numberOfPositions","Number","isInteger","vectorPosition","vectorToPosition","vector","forEach","sampleNextTransition","nextPositionProbabilities","count","sampleTransitions","startPosition","includeStart","transitions","j","sampledPosition","getDominantCellByRow","dominantArray","indicesOfMaxValue","indicesOf","max","console","warn","maxIndex","getDominantProbabilityByRow","matrixKlDivergence","qMatrix","pMatrix","flattenQDistribution","flattenPDistribution","klDivergence","kldivergence","getProportionArray","absolutes","sumRow","proportionArray","sum","getObservedArrays","sequence","observedTransitionArray","proportions","getObservedAndDistanceMatrix","observedArrays","observedMatrix","distanceMatrix","subtract","totalError","abs","smoothSequenceDistribution","errorThreshold","numberOfNewTransitions","resultObject","unevenPosition","rowArray","maxVariations","sortBy","positionInformations","newSequence","pickedUneven","smoothedPosition","allIndices","highTransitionIndices","filter","replacedIndex","addedTransitions","restSequence","restartAt","finishSequence","promiseSequenceFromTransitionMatrix","baseOptions","sequenceLength","maxLoop","positionVector","loop","bestSequence","bestError","promiseMultipleSequences","numberOfSequences","sequenceArray","then","sequences","promiseMultipleRandomSequences","dominantPositions","promiseSegmentsAndProbesByBlock","segmentSizes","observationSegmentRepetitionPerBlock","numberOfBlocks","positions","numberOfTimeAProbeIsRepeated","numberOfDominant","segmentSizeSequencesEvenlyDistributed","probeSequences","transitionTypes","blockArray","segmentPermutations","probeSequence","hasNeighbouringRepeat","segmentEvenlyPermutated","leftSegmentPermutations","pop","indices","range","transitionType","dominantCount","r","splice","segmentSizeSequences","block","numberOfProbePerBlock","numberOfObservationPerBlock","getFullSequenceObjectForRandomBlackoutBlock","observePredictionPerBlock","blockType","segmentLength","trialTypes","o","oP","pBP","blackout","segAPermutations","segBPermutations","segmentSequence","v","blockSize","blackoutIndices","integrate","addPostBlackout","predictionIndices","fullSequence","fullBlockType","fullBlock","fullTrial","fullTrialType","trial","trialType","promiseFullSequenceForIntermitentPrediction","sequenceALength","sequenceBLength","protectFirstBlock","sequenceA","sequenceB","result","currentBlock","currentTrial","segAIndex","indicesBlackout","segmentsA","segmentsB","lenghtBlockA","blockLength","lenghtSegmentB","tempBlock","first","shift","addedSegmentLenght","addedSegment","addTrials","addedTrialType","addedBlock","nblocks","blockTrialType","indicesPrediction","promiseFullSequenceForOneLevel","insertRandomBlocksAt","randomBlocksDominantStates","randomBlocksDominantStateProbability","randomBlocksNonDominantProbability","randomBlocksDominantState","randomBlocksNonDominantStates","dominantMatrix","dominantTransition","nonDominantTransitions","segments","numberOfRandomBlocks","randomSequences","smoothedSequences","observedData","errors","kls","sequenceObjects","error","blocksNumber","fullSequenceBlock","fullSequenceBlockType","completeSequence","trials","smoothedSequencesIndex","randomSequencesIndex","blockIndices","probeTransitions","nonDominantIndices","currentDominantTransitions","currentNonDominantTransitions","segmentSizesOfBlock","probeSequenceRemaining","currentObservationIndex","lastTrial","segmentIndex","endIndex","segment","probePosition","feedback","N","_","getFullSequenceObjectForClassicLevels","t","insertSequenceObjectAtBlock","baseObject","insertedObject","atBlocks","newObject","offset","baseCurrentBlock","insertedBlock","promiseBestSequencesForAllBlocksAndSave","getDensity","elements","nsteps","windowSize","some","isNaN","min","stepSize","elementsInWindow","windowPosition","density","points","centered","x","y","windows","numberOfElements","chartOptions","type","data","datasets","label","scales","xAxes","randomColor","opacity","computeDurationEstimate","parametersBase","minNumberOfObservationsPerLearning","maxNumberOfObservationsPerLearning","observationDuration","interObservationDuration","minTimeToPredict","maxTimeToPredict","feedbackDuration","minISIAfterLearning","maxISIAfterLearning","minISIAfterFeedback","maxISIAfterFeedback","rabbitAutoTransition","rabbitDominantProbability","observationSegmentSizes","feedbackType","numberOfObservationPerLevel","oneObservationDuration","observationsDurationPerBlock","numberOfPredictionEventsPerBlock","timeDurationMatrix","factorMatrix","predictionDurationMatrix","sumPredictionDurationVector","predictionsDurationPerBlock","observationDurationMatrix","durationPerBlock","add","totalDuration","mean","softMaxByRow","model","temperature","exp","divide","prediction","modelProportions","algorithm","learnerPredict","learnerType","learningRate","trueModel","predictions","optimalPredictions","sameAsOptimal","sameAsOptimalProbability","sameAsSequence","sameAsSequenceProbability","predictionPosition","optimalPrediction","targetPosition","dominant","positionIndex","returnObject","finalModel","updateWithRule","sampleExponential","jitter","pWindow","lambda","log","redrawAssets","rabbitFaceTexture","cloneAssetIntoScene","R","get","rabbitFace","scene","wolfFaceTexture","wolfFace","crossSheet","hasAlpha","elements2D","stateManager","crossSprite","cross_predict","crossOpacity","loaderOpacity","loaderValue","wolfOpacity","rabbitOpacity","agentType","tiles","cross","spriteFrame","levelVisible","wolfFaceSprite","rabbitFaceSprite","loader","levelV","call","Sprite2D","parent","initialCanvas","id","marginAlignment","spriteSize","Size","spriteLocation","Vector2","border","Canvas2D","GetSolidColorBrush","Color4","borderThickness","margin","leftPixels","rightPixels","topPixels","bottomPixels","minSize","renderSize","origin","Zero","zOrder","agent_scale","agent","canvas","setGlobal","tile","clearTiles","ntile","dispose","tileOpacity","Rectangle2D","fill","addButton","timeInMs","text","clickEventData","fontName","baseOpacity","hoverOpacity","fontSignedDistanceField","padding","buttonOptions","roundRadius","children","Text2D","marginVAlignment","marginHAlignment","buttonRect","pointerEventObservable","PrimitivePointerInfo","PointerOver","PointerOut","happenedAt","button","addEvent","PointerUp","disposeOfButtons","levelButtons","getTileSize","greaterLength","tile_scale","setMargins","prim","drawTiles","hightlight","withKeys","cross_opacity","keysInfoboxText","keysInfobox","tilePositions","normalSize","tileMargins","fullOpacity","tile_fullOpacity","lowOpacity","tile_lowOpacity","fontSuperSample","normalColor","normalTile","getTileMargins","tileSize","tile_offset","margins","getTilePositions","center","highlightPosition","promise","drawPredictionTiles","setAgent","currentMargin","getAgentPositionOnTile","scaledAgentSize","scaleInPlace","scale","newPosition","getAgentMarginsOnTile","offsetH","offsetW","newMargins","moveAgentToTile","set","animateAgentToTile","deferred","animation","Animation","ANIMATIONTYPE_VECTOR2","ANIMATIONLOOPMODE_CONSTANT","keys","frame","setKeys","end","AnimationEvent","animations","beginAnimation","setAgentOpacity","setBlackScreen","on","getGlobal","has","blackScreen","hideAll","showAll","checkIdleAndConnection","returnToState","dataManager","connection","currentStateKey","query","delay","lastInteraction","delayMin","goToState","states_end","catch","states_idle","onNext","events_unfrozen","freeze","modal","title","lostConnectionTitle","content","lostConnectionContent","intro","en","disclaimer","trialInstruction","fourLevels","progressInstruction","keyboardInstruction","introToTryout","correctPrediction","incorrectPrediction","askContinue","fmriIntro","fmriDelay","lockedCross","catchRabbit","askfMRIContinue","noResponse","level2Start","level3Start","tutorials","pageOrderTutorialOne","pageOrderTutorialFMRI","awakeTutorial","currentTutorial","pageOrder","showIntro","events_showModal","page","addTimeTriggerEvent","showModal","currentModal","modalBox","destroy","hasOwnProperty","tutorial","event","events_modalDismissed","showNextPage","currentPage","currentIndex","showEvent","states_tryout","window","calibrator","defferedDomLoaded","document","addEventListener","scripts","getElementsByTagName","assetsFolderFullpath","src","delimiterIndices","substr","p1","p2","addFiles","imageToPreload","p3","preloadedImages","Object","assign","loadingPromise","all","mergeWith","fullSequenceObjectLevel1","fullSequenceObjectLevel2","fullSequenceObjectLevel3","fullSequenceObjectLevel4","baseLevel","level","sequenceObject","dominantStructure","probeObservationDuration","predictionDuration","levelOne","levelTwo","levelThree","levelFour","fixedISIAfterObservation","sampleMeanISIAfterObservation","fixedISIAfterPrediction","sampleMeanISIAfterPrediction","fixedBlackScreenDuration","sampleMeanBlackScreen","maxSampleAfterPrediction","maxSampleAfterObservation","maxSampleBlackScreen","sound","levels","shouldChooseLevel","mainProbability","decisionModel","variables","shouldSeeInformation","assetsToLoad","path","observation","predict","registerSceneGenerator","sceneNames","predictionOpacity","animate","parametersNames","parametersConstraints","currentScene","rParams","paramBox","bind","tempMaxNumberOfRetry","MAX_NUMBER_OF_RETRY","endpoint","loginForm","fields","userId","constraints","authorizedValues","password","format","callback","credentials","form","buttonText","context","states_active","setConnection","signInForm","loggedIn","login","startTask","message","queryString","generateSequence","require","MainScene","sceneKey","canvasBackground","backgroundRoundRadius","clearColor","canvasPercentWidth","canvasPercentHeight","mode","create2DScene","onResize","sounds","sounds_observation","sounds_predict","register","cwDataFields","addTable","connections","eventFields","indexOnTransitionSequence","indexOnPredictionSequence","fullSequenceIndex","states","running","tryout","tryoutFMRI","checkpoint","tutorialDone","levelDone","taskDone","taskEndNoComeback","flags","levelDefined","events","sequenceGenerated","goNextPosition","endObservation","startPrediction","responseTimeEnded","isiAfterLearningEnded","feedbackEnded","isiAfterFeedbackEnded","pauseTransition","forcePause","predictionStartBlackout","blackoutEnds","predictionEndsBlackout","isiAfterPredictionEndsBlackout","screenWentBlack","playPredictionSound","playObservationSound","goToTutorial","hasResponded","restartTutorial","goToLevel1","goToLevel2","goToLevel3","goToLevel4","tic","moreThanFiveNA","aknowledgedEnding","addState","states_tutorial","states_running","tutorialState","runningState","tryoutState","endState","pauseState","pause","eventData","flags_levelDefined","belongsTo","handledAt","storedAt","active","addAwakeningFunctions","addEndingFunctions","addEventFunctions","events_goToTutorial","goToPause","shouldPause","states_pause","events_goNextPosition","events_endObservation","events_startPrediction","events_responseTimeEnded","events_pauseTransition","events_forcePause","events_windowBlur","events_moreThanFiveNA","events_click","events_keydown","events_playPredictionSound","events_playObservationSound","events_restartTutorial","events_windowFocus","selectLevel","checkTaskDone","checkpoint_taskDone","checkTaskEndNoComeback","checkpoint_taskEndNoComeback","results","code","eventLevel","checkpoint_tutorialDone","checkpoint_levelDone","startLevel","emptyTimeTriggerEvents","endActive","awakenEnd","initialGui","events_aknowledgedEnding","reason","taskFinishedTitle","taskFinishedContent","taskStoppedTitle","taskStoppedMessage","taskStoppedReason","replace","setCheckpoint","awakenPause","levelObject","GUI","pauseTime","hitKeyTime","initialGuiVisible","backgroundFill","lastPauseInfo","time","currentTimeLeft","timerText","timeLeft","parseInt","timeLimitText","centerText","topText","pauseText","pauseKeyDown","ceil","pauseRestart","hasFocus","previousTimeLeft","frozenState","endPause","prematureEndPauseAboveThreshold","stateUnfrozen","currentTrialData","hasPaused","positionData","startTransitionTime","text2d","maxTransitionTime","resolveOnKey","shouldtic","transitionText","finishedLevelTransition","tooltipPause","box","centerPosition","tooltip","duration","blockDone","finishedBlockTransition","nextTransitionTime","newEvent","startRunning","pausedBetween","numberOfMissed","isPredicting","nextTransitionEvent","goToNextPosition","checkConnection","checkLastInteraction","pending","souldPlaySound","moveFunction","trialData","stateKey","choice","responseTime","startObservation","respondedAt","endPrediction","observedTransitionWasDominant","keysHits","clicks","dataToStore","positionIndexInStructure","nextIndex","subject_id","block_type","dominant_structure","dominant_transition_probability","trial_type","observation_duration","observed_transition_was_dominant","transition_to","subject_choice","response_time","correct","key_hits","JSON","stringify","has_paused","start_observation","end_observation","start_prediction","responded_at","end_prediction","storeData","storeInErrorLog","timestamp","cross_base","play","startPredictionTime","observationTime","blackoutTime","agent_predictionOpacity","endResponse","crossLockByPosition","checkForClickPrediction","clientY","engineX","engineY","checkKeyStrokeForPrediction","keyCode","key","m","cross_bottomRight","cross_topLeft","c","cross_bottomLeft","cross_topRight","keyPosition","events_hasResponded","playSound","name","awakeTryout","tests","wolfFirstAppears","passed","wolfHasAppeared","predictionTest","numberOfPrediction","realTimeTest","rabbitFirstAppear","rabbitFirstDisapear","rabbitFirstDisapearTitle","rabbitFirstDisapearMessage","wolfFmriFirstAppear","wolfFmriFirstAppearTitle","wolfFmriFirstAppearMessage","blackoutFirstAppear","blackoutFirstAppearTitle","blackoutFirstAppearMessage","hasPassedAllTest","test","tryoutGoToNextPosition","hideTooltip","ntransition","lastChoice","background","tilePosition","events_screenWentBlack","tryoutStartPrediction","npred","hitAKeyToContinue","changeCenterSquare","choiceDeferred","chooseNextPosition","tryoutCheckKeyStrokeForPrediction","chosenKey","sign","youSelectedThisTile","aLittleSquareShowsYourChoice","tryoutEndPrediction","tryoutEnd"],"mappings":"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Ae,QAAjB,EAA5C;AAA0E,KAD9G;AAED,GA7ED;;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAOrB,SAAShB,OAAhB;AACD,CAlND;;AAoNA,IAAMwS,aAAa,SAAbA,UAAa,GAA0B;AAAA,MAAhBt0B,OAAgB,uEAAN,IAAM;;AAC3C,MAAI,OAAO,KAAKD,UAAZ,KAA2B,WAA/B,EAA4C;AAC1C,UAAM,IAAIX,KAAJ,CAAU,gDAAV,CAAN;AACD;;AAED,MAAI,OAAOY,QAAQkW,IAAR,CAAa0T,KAApB,KAA8B,WAAlC,EAA+C;AAC7C,UAAM,IAAIxqB,KAAJ,CAAU,8CAAV,CAAN;AACD;;AAED;AACA,MAAMW,aAAa,KAAKA,UAAxB;AACA,MAAMob,eAAe,KAAKA,YAA1B;AACA,MAAMT,IAAI,KAAKA,CAAf;AACA,MAAMQ,aAAaC,aAAaR,GAAb,CAAiB,YAAjB,CAAnB;AACAQ,eAAaoZ,sBAAb;AACArZ,aAAW4C,KAAX,CAAiBtH,OAAjB,GAA2B,CAA3B;;AAEA;AACA2E,eAAa2G,OAAb,CAAqB,kBAArB;;AAEA3G,eAAa6C,SAAb,CAAuB,OAAvB,EAAgChe,QAAQkW,IAAR,CAAa0T,KAA7C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","file":"cwfmri.max.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"experiment-js\"), require(\"experiment-babylon-js\"), require(\"lodash\"), require(\"experiment-boxes\"), require(\"experiment-mathjs\"), require(\"jQuery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cwfmri\", [\"experiment-js\", \"experiment-babylon-js\", \"lodash\", \"experiment-boxes\", \"experiment-mathjs\", \"jQuery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cwfmri\"] = factory(require(\"experiment-js\"), require(\"experiment-babylon-js\"), require(\"lodash\"), require(\"experiment-boxes\"), require(\"experiment-mathjs\"), require(\"jQuery\"));\n\telse\n\t\troot[\"cwfmri\"] = factory(root[\"experiment\"], root[\"BABYLON\"], root[\"_\"], root[\"experimentBoxes\"], root[\"math\"], root[\"jQuery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_15__, __WEBPACK_EXTERNAL_MODULE_16__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c4d69d37ccd586c094f3","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"experiment-js\",\"commonjs2\":\"experiment-js\",\"amd\":\"experiment-js\",\"root\":\"experiment\"}\n// module id = 0\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"experiment-babylon-js\",\"commonjs2\":\"experiment-babylon-js\",\"amd\":\"experiment-babylon-js\",\"root\":\"BABYLON\"}\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"lodash\",\"root\":\"_\"}\n// module id = 2\n// module chunks = 0","/** @module taskUtilities */\nimport math from 'experiment-mathjs'\nimport _ from 'lodash'\n\nimport { TaskObject, matrix, mandatory, debuglog, rep, getRow, samplePermutation, rowSum, debugWarn, diag } from 'experiment-js'\nimport BABYLON from 'experiment-babylon-js'\n\n/* ======= Texture Functions ======= */\nconst getAspectRatio = function (surfaceObject = mandatory()) {\n  if (surfaceObject.constructor === BABYLON.Texture) {\n    const { width: w, height: h } = surfaceObject.getBaseSize()\n    return (w / h)\n  }\n\n  throw new Error('getAspectRatio: object type not valid.')\n}\n\n/* =============== Task specific functions =============== */\n/**\n * Returns an array of the four possible main transition matrices\n * @return {Array} Each of the four entry is a 16*16 matrix with either 0 or 1\n */\nconst getBaseGraphMatrices = function () {\n  /* --- Graph setup --- */\n  const graphMatrix1 = matrix(4, 4, 0)\n  const graphMatrix2 = matrix(4, 4, 0)\n  graphMatrix1[0][1] = graphMatrix1[1][2] = graphMatrix1[2][3] = graphMatrix1[3][0] = 1 //eslint-disable-line\n  graphMatrix2[0][2] = graphMatrix2[1][3] = graphMatrix2[2][1] = graphMatrix2[3][0] = 1 //eslint-disable-line\n\n  const baseMatrices = {\n    A: graphMatrix1,\n    B: math.transpose(graphMatrix1),\n    C: graphMatrix2,\n    D: math.transpose(graphMatrix2),\n  }\n\n  return baseMatrices\n}\n\n/**\n * Computes one valid stateSpace store them in the taskObject.parameters.validStateSpaces\n * @param  {TaskObject} taskObject Object of class TaskObject\n * @param  {object} options      object with optional arguments: maxNumberOfCycles default to 2\n */\nconst computeValidStateSpace = function (taskObject = mandatory('taskObject'), options = {}) {\n  return new Promise((resolve, reject) => {\n    if (taskObject.constructor !== TaskObject) {\n      reject('computeValidGraphs promise: taskObject is not of class TaskObject.')\n    }\n\n    const optionsBase = {\n      maxNumberOfCycles: 2,\n      stateSpace: null,\n    }\n\n    options = _.extend(optionsBase, options)\n\n    // const maxNumberOfCycles = options.maxNumberOfCycles\n    let stateSpace = options.stateSpace\n\n    // get a reference to the scene and the taskObject\n\n    const rules = taskObject.parameters.rules\n    const rulesProportions = taskObject.parameters.rulesProportions\n\n    /* --- buid rule proportion array with threshold *** TODO generalize and use in the task --- */\n    let proportionThreshold = 0\n    const rulesData = []\n    for (let i = 0; i < rules.length; i++) {\n      // associate target with rule and rulesProportion (one entry for each rule)\n      rulesData.push({\n        rule: rules[i],\n        proportion: rulesProportions[i],\n        threshold: proportionThreshold,\n      })\n\n      // add proportion to shift threshold (used by drawTargetDistribution)\n      proportionThreshold += rulesProportions[i]\n    }\n\n    const numberOfRows = taskObject.parameters.numberOfRows\n    const numberOfTargets = taskObject.parameters.numberOfRows ** 2\n\n    /* --- Create array of rules without random and oneBackThenRight --- */\n    // const rulesWithoutRandom = _.without(taskObject.parameters.rules, 'random')\n    const linearRules = _.without(taskObject.parameters.rules, 'random', 'oneBackThenRight')\n\n    if (stateSpace === null) {\n      /**\n       * The stateSpace array hold position information as well as the rule associated to each observable state (position on the screen).\n       * Arugments:\n       * {closestTargets: Object {down:1,left:2,right:2,up:1},\n       * nextPosition:2, next observed position\n       * position:3, observed position\n       * rule:\"right\"}\n       *\n       * @type {Array}\n       */\n      stateSpace = []\n      for (let i = 0; i < numberOfTargets; i++) {\n        /* --- setup the current target  --- */\n        const currentTarget = {}\n        currentTarget.position = i\n\n        /* --- Calculate the neihgbours indices mapped to a spherical space\n        (going up on the top row bring you to the last row on the same column)--- */\n        const beginLineIndex = Math.floor(i / numberOfRows) * numberOfRows\n\n        const downIndex = (i + (numberOfRows * (numberOfRows - 1))) % (numberOfRows * numberOfRows)\n        const upIndex = (i + numberOfRows) % (numberOfRows * numberOfRows)\n\n        const rightIndex = ((i - (beginLineIndex + 1)) % (numberOfRows)) + beginLineIndex\n        const leftIndex = (((i - beginLineIndex) + (numberOfRows - 1)) % (numberOfRows)) + beginLineIndex\n\n        currentTarget.closestTargets = {\n          up: upIndex,\n          left: leftIndex,\n          down: downIndex,\n          right: rightIndex,\n        }\n\n        // draw a random number and select a target-rule based on the result\n        const randomNumber = Math.random()\n\n        // find the one target-rule depending on the proportionThreshold\n        const currentRuleData = _.clone(_.find(rulesData, (e) => {\n          const d = randomNumber - e.threshold\n          return ((d <= e.proportion) && (d > 0))\n        }))\n\n        // if target-rule is \"random\" pick a non-random time independant rule: up down right left\n        if (currentRuleData.rule === 'random') {\n          currentRuleData.rule = _.sample(linearRules)\n        }\n\n        currentTarget.rule = currentRuleData.rule\n\n        switch (currentTarget.rule) {\n          case 'up':\n            currentTarget.nextPosition = upIndex\n            break\n          case 'down':\n            currentTarget.nextPosition = downIndex\n            break\n          case 'left':\n            currentTarget.nextPosition = leftIndex\n            break\n          case 'right':\n            currentTarget.nextPosition = rightIndex\n            break\n          case 'oneBackThenRight':\n            currentTarget.nextPosition = 'last'\n            break\n          default:\n            throw new Error(`getHiddenStateMatrixFromDistribution: state at ${currentTarget.position} of the distribution aray has an invalid rule ${currentTarget.rule}`)\n        }\n\n        // populate the array\n        stateSpace.push(currentTarget)\n      }\n    }\n\n    const sampleNewRule = function (lStateSpace = mandatory(), position = mandatory()) {\n      if (typeof lStateSpace[position] === 'undefined') {\n        throw new Error(`sampleNewRule: lStateSpace[${position}] is undefined.`)\n      }\n\n      // get the reference to the particular state to change\n      const state = lStateSpace[position]\n\n      // draw a random number and select a target-rule based on the result\n      const randomNumber = Math.random()\n\n      // find the one target-rule depending on the proportionThreshold\n      const currentRuleData = _.clone(_.find(rulesData, (e) => {\n        const d = randomNumber - e.threshold\n        return ((d <= e.proportion) && (d > 0))\n      }))\n\n      // if target-rule is \"random\" pick a non-random time independant rule: up down right left\n      if (currentRuleData.rule === 'random') {\n        currentRuleData.rule = _.sample(linearRules)\n      }\n\n      state.rule = currentRuleData.rule\n\n      switch (state.rule) {\n        case 'up':\n          state.nextPosition = state.closestTargets.up\n          break\n        case 'down':\n          state.nextPosition = state.closestTargets.down\n          break\n        case 'left':\n          state.nextPosition = state.closestTargets.left\n          break\n        case 'right':\n          state.nextPosition = state.closestTargets.right\n          break\n        case 'oneBackThenRight':\n          state.nextPosition = 'last'\n          break\n        default:\n          throw new Error(`getHiddenStateMatrixFromDistribution: state at ${position} of the distribution aray has an invalid rule ${state.rule}`)\n      }\n\n      return (lStateSpace)\n    }\n\n    /**\n     * From a sized n state space, the function returns a sized p memoryless state space (array of state objects) where time dependant\n     * state rules have been translsated to a number of hidden states.\n     * The oneBackThenRight rule is non linear and the system cannot be represented by a transition matrix (with size the initial number of state squared)\n     * We need to create a space of hidden states in order to linearize the system so it could be represented as a transition matrix.\n     * Linearize the space is only useful for time dependant rules. This function creates the hidden state matrix by creating as many states as necessary\n     * e.g for the 'oneBackThenRight' rule, if the state is of degree 3, meaning that 3 states are transitioning to it\n     * to linearize the space you would that unique state to be represented by 7 states :\n     * * 3 states, one for each incoming states, and 3 states for the excape to the right 90 degrees, and one state in case you start at this position\n     * And and each incoming state as 2 states :\n     * * one going to the first state, the other to the excape state\n     *\n     * To the initial state object the function adds arguments : nextHiddenState and hiddenStateIndex. It changes the nextPosition value for oneBackThenRight states to a random\n     * target from the closestTargets property of the state object.\n     *\n     * @param  {array} lStateSpace Array of state objects\n     * @param  {numeric} loopIndex  the number of time the function was recursively called (stops recursion at 50 and returns false)\n     * @return {array|false}            Array with new hidden states allowing to describe the task as a linear system (Hidden markov model).\n     *                                  Returns false if more than 50 recursive call were made.\n     */\n    const recursivelyExpandStateSpace = function (lStateSpace = mandatory(), loopIndex = mandatory()) {\n      const timeIndependantRules = ['up', 'right', 'down', 'left']\n      if (loopIndex > 50) {\n        return (false)\n      }\n\n      let newSpace = []\n      let recurse = false\n      for (let k = 0; k < lStateSpace.length; k++) {\n        const state = _.clone(lStateSpace[k])\n        if (typeof state.nextHiddenState === 'undefined') {\n          state.nextHiddenState = state.nextPosition\n        }\n        if (typeof state.hiddenStateIndex === 'undefined') {\n          state.hiddenStateIndex = state.position\n        }\n        if (state.nextHiddenState === 'last') {\n          // if you start on the oneBackThenRight state it select a random nextHiddenState\n          // TODO: discuss how it should be handled\n          state.nextHiddenState = _.sample(state.closestTargets)\n          state.nextPosition = state.nextHiddenState\n        }\n\n        if (lStateSpace[state.nextHiddenState].rule === 'oneBackThenRight') {\n          const firstTargetHiddenState = _.clone(lStateSpace[state.nextHiddenState])\n          firstTargetHiddenState.hiddenStateIndex = lStateSpace.length\n          firstTargetHiddenState.rule = _.findKey(firstTargetHiddenState.closestTargets, p => (p === state.position))\n\n          const secondTargetHiddenState = _.clone(state)\n          secondTargetHiddenState.hiddenStateIndex = lStateSpace.length + 1\n\n          const thirdTargetHiddenState = _.clone(lStateSpace[state.nextHiddenState])\n          thirdTargetHiddenState.hiddenStateIndex = lStateSpace.length + 2\n          // next rule direction is 90 degrees from the last rule\n          thirdTargetHiddenState.rule = timeIndependantRules[(timeIndependantRules.indexOf(firstTargetHiddenState.rule) + 1) % 4]\n          thirdTargetHiddenState.nextPosition = thirdTargetHiddenState.closestTargets[thirdTargetHiddenState.rule]\n\n          // set the nextHiddenState for each new states\n          state.nextHiddenState = firstTargetHiddenState.hiddenStateIndex\n          firstTargetHiddenState.nextHiddenState = secondTargetHiddenState.hiddenStateIndex\n          secondTargetHiddenState.nextHiddenState = thirdTargetHiddenState.hiddenStateIndex\n          thirdTargetHiddenState.nextHiddenState = thirdTargetHiddenState.nextPosition\n\n          newSpace.push(state)\n          newSpace = _.concat(newSpace, _.slice(lStateSpace, k + 1))\n\n          newSpace.push(firstTargetHiddenState)\n          newSpace.push(secondTargetHiddenState)\n          newSpace.push(thirdTargetHiddenState)\n\n          recurse = true\n\n          break\n        } else {\n          newSpace.push(state)\n        }\n      }\n      debuglog(`recursivelyExpandStateSpace: loopIndex ${loopIndex} recurse ${recurse}`)\n      debuglog(newSpace)\n      if (recurse) { // (_.keys(_.filter(newSpace, function(state) { return(newSpace[state.nextHiddenState].rule == \"oneBackThenRight\"); })).length) {\n        return (recursivelyExpandStateSpace(newSpace, loopIndex + 1))\n      }\n      debuglog('were here god damnit')\n      return (newSpace)\n    }\n    /**\n     * Returns a p*p math.matrix object from a stateSpace array of size p. A stateSpace array contains object with protperties :\n     * e.g. stateSpace = {closestTargets: Object {down:1,left:2,right:2,up:1},\n     * hiddenStateIndex: 9, true state\n     * nextHiddenState: 2, next true state\n     * nextPosition:2, next observed position\n     * position:3, observed position\n     * rule:\"right\"}\n     * @param  {array} lStateSpace array of p state objects.\n     * @return {math.matrix}            matrix of p*p size\n     */\n    const transitionMatrixFromStateSpace = function (lStateSpace = mandatory()) {\n      if (lStateSpace.constructor !== Array) {\n        debuglog(lStateSpace)\n        throw new Error('transitionMatrixFromStateSpace: stateSpace is not an array.')\n      }\n\n      const transitionMatrix = math.zeros(lStateSpace.length, lStateSpace.length)\n\n      for (let i = 0; i < lStateSpace.length; i++) {\n        if (typeof lStateSpace[i].nextHiddenState === 'undefined') {\n          throw new Error(`transitionMatrixFromStateSpace: state ${i} has an undefined nextHiddenState`)\n        }\n\n        transitionMatrix.subset(math.index(i, lStateSpace[i].nextHiddenState), 1)\n      }\n\n      return (transitionMatrix)\n    }\n\n    /**\n     * Returns the number of cycle present in the graph by using the transition matrix.\n     * @param  {math.matrix} transitionMatrix transitionMatrix from which you want to extract cycles\n     * @return {numeric} the number of cycles in the graph\n     */\n    const getCyclesFromTransitionMatrix = function (transitionMatrix = mandatory(), maxTransitions = 64) {\n      /* if X is the position vector and A the transitionMatrix\n       * x*(A)^n = x means that X is an eigen vector of the transitionMatrix raised to the nth power\n       * and it also means you return to the same position after n movements starting from x\n       */\n      if (typeof transitionMatrix._size === 'undefined') {\n        throw new Error('getCyclesFromTransitionMatrix: transitionMatrix._size is undefined.')\n      }\n\n      const spaceSize = transitionMatrix._size\n      if (spaceSize[0] !== spaceSize[1]) {\n        throw new Error('getCyclesFromTransitionMatrix: transitionMatrix is not square.')\n      }\n\n      let positionsInCycle = []\n      const cycles = []\n\n      for (let i = 0; i < spaceSize[0]; i++) {\n        if (positionsInCycle.indexOf(i) === -1) {\n          // this position is part of a previously detected cycle\n\n          const currentCyclePositions = []\n          const startingPosition = math.zeros(1, spaceSize[0])\n          startingPosition.subset(math.index(0, i), 1)\n\n          let currentPositionVector = _.clone(startingPosition)\n          let currentPosition = (math.flatten(currentPositionVector))._data.indexOf(1)\n          currentCyclePositions.push(currentPosition)\n          let numberOfTransitions = 1\n\n          while (numberOfTransitions < maxTransitions) {\n          // let newPosition = math.multiply(startingPosition, math.pow(transitionMatrix,numberOfTransitions))\n            currentPositionVector = math.multiply(currentPositionVector, transitionMatrix)\n            currentPosition = (math.flatten(currentPositionVector))._data.indexOf(1)\n\n            const currentPositionIndexInCycle = currentCyclePositions.indexOf(currentPosition)\n            if (currentPositionIndexInCycle !== -1) {\n            // this position was visited before\n            // close the cycle store it and get out of the loop\n              const cycle = _.slice(currentCyclePositions, currentPositionIndexInCycle)\n              positionsInCycle = _.union(positionsInCycle, cycle)\n              cycles.push(cycle)\n              break\n            }\n\n            if (positionsInCycle.indexOf(currentPosition) !== -1) {\n            // this position was visited in a previous cycle - the trajectory will be absorbed by it - no need to store new info\n              break\n            }\n\n            currentCyclePositions.push(currentPosition)\n            numberOfTransitions += 1\n          }\n        }\n      }\n\n      return (cycles)\n    }\n\n    let loopOnStateSpace = 0\n    while (loopOnStateSpace < 110) {\n      // count the number of cycle\n      const hiddenSpace = recursivelyExpandStateSpace(stateSpace, 0)\n      if (hiddenSpace === false) {\n        resolve('computeValidGraphs: could not expand state space.')\n        break\n      } else {\n        debuglog(`were past hiddenSpace loopOnStateSpace${loopOnStateSpace}`)\n        const transitionMatrix = transitionMatrixFromStateSpace(hiddenSpace)\n        const cycles = getCyclesFromTransitionMatrix(transitionMatrix)\n\n        if (cycles.length > options.maxNumberOfCycles) {\n          debuglog('too many cycles')\n          loopOnStateSpace += 1\n          // find smallest cycle\n          let smallestSize = -1\n          let smallestCycleIndex = 0\n          for (let i = 0; i < cycles.length; i++) {\n            if ((smallestSize === -1) || (cycles[i].length < smallestSize)) {\n              smallestSize = cycles[i].length\n              smallestCycleIndex = i\n            }\n          }\n          const positionToChange = hiddenSpace[_.sample(cycles[smallestCycleIndex])].position\n          // let positionToChange = _.sample(_.range(0, hiddenSpace.length));\n          stateSpace = sampleNewRule(stateSpace, positionToChange)\n        } else {\n          break\n        }\n\n        if (loopOnStateSpace > 100) {\n          resolve('computeValidGraphs: could not converge to a valid graph')\n          break\n        }\n      }\n    }\n\n    // store the targetRules in the stateManager\n    const validStateSpaces = taskObject.parameters.validStateSpaces\n    validStateSpaces.push(stateSpace)\n\n    resolve('computeValidGraphs: a valid stateSpace was stored in taskObject.parameters.validStateSpaces array.')\n  })\n}\n\nconst getTransitionMatrixFromBase = function (baseMatrix = mandatory(), mainTransitionProbability = mandatory(), noSelfTransition = true) {\n  // make sure baseMatrix is in math.matrix format\n  baseMatrix = math.matrix(baseMatrix)\n  const size = (baseMatrix.size())[0] - 1\n  const transitionMatrix = baseMatrix.map((value, index) => {\n    if (noSelfTransition && (index[0] === index[1])) {\n      return 0\n    }\n    switch (value) {\n      case 0:\n        return ((1 - mainTransitionProbability) / (size - (noSelfTransition ? 1 : 0)))\n      case 1:\n        return (mainTransitionProbability)\n      default:\n        throw new Error('taskObject.getTransitionMatrix: mainTransitionProbability is not 0 or 1')\n    }\n  })\n\n  return transitionMatrix\n}\n\nconst getValidTransitionArray = function (transitionArray = mandatory()) {\n  if (transitionArray.constructor !== Array) {\n    if (typeof transitionArray.toArray === 'function') {\n      transitionArray = transitionArray.toArray()\n    } else {\n      throw new Error('TaskObject.getValidTransitionArray: transitionArray is not an array and cannot be coerced to array.')\n    }\n  }\n\n  if (!transitionArray.length) {\n    throw new Error('TaskObject.getValidTransitionArray: transitionArray is empty.')\n  }\n\n  const lengths = []\n  for (let i = 0; i < transitionArray.length; i++) {\n    lengths[i] = transitionArray[i].length\n  }\n\n  const uniqueLengths = lengths.uniqueValues()\n  if (uniqueLengths.length !== 1) {\n    throw new Error('TaskObject.getValidTransitionArray: rows are of multiple lengths.')\n  }\n\n  if (transitionArray.length !== uniqueLengths[0]) {\n    throw new Error('TaskObject.getValidTransitionArray: transition array is not square.')\n  }\n\n  /* --- Transition array passed the checks, return it --- */\n  return (transitionArray)\n}\n\n/**\n * Returns a 0 order n*n transition matrix from a one dimensional size n array with a probability for each state\n * @param  {array} stateProbabilities eg [0.1 0.2 0.2 0.5] for a 10% chance of transition to state 1 at any time t, 50% chance for state 4\n * @return {object} transition matrix (math.matrix) or two dimensional array depending on outputType\n */\nconst getRandomTransitionMatrix = function (stateProbabilities, outputType = 'array') {\n  const size = stateProbabilities.length\n  const baseMatrix = math.matrix(matrix(size, size, 0))\n\n  const transitionMatrix = baseMatrix.map((value, index) => (stateProbabilities[index[1]]))\n\n  if (outputType === 'array') {\n    // return an array\n    return getValidTransitionArray(transitionMatrix)\n  }\n    // return a math.matrix\n  return transitionMatrix\n}\n\nconst getZeroOrderTransitionMatrix = function (dominantPosition = mandatory(), dominantProbability = mandatory(), numberOfStates = 4) {\n  const nonDominantProbability = Math.round(((1 - dominantProbability) / (numberOfStates - 1)) * 100) / 100\n  const rowValue = rep(nonDominantProbability, numberOfStates)\n  rowValue[dominantPosition] = dominantProbability\n  const randomTransitionMatrix = getRandomTransitionMatrix(rowValue)\n\n  return randomTransitionMatrix\n}\n\nconst positionToVector = function (position = mandatory(), numberOfPositions = 4) {\n  // const maxIndex = numberOfPositions - 1\n  if (Number.isInteger(position)) {\n    let vectorPosition = rep(0, numberOfPositions)\n    vectorPosition[position] = 1\n    vectorPosition = math.matrix(vectorPosition)\n\n    return vectorPosition\n  }\n  throw new Error('taskObject.positionToVector: position is not numeric.')\n}\n\nconst vectorToPosition = function (vector = mandatory()) {\n  if (vector.constructor !== math.matrix().constructor) {\n    if (vector.constructor === Array) {\n      vector = math.matrix(vector)\n    } else {\n      throw new Error('taskObject.vectorToPosition: vector is not of type math.matrix() or Array')\n    }\n  }\n\n  if ((vector.size()).length > 1) {\n    throw new Error('taskObject.vectorToPosition: vector has more than one dimension.')\n  }\n\n  let position = null\n  vector.forEach((value, index) => {\n    switch (value) {\n      case 1:\n        if (position === null) {\n          position = index[0]\n        } else {\n          throw new Error('taskObject.vectorToPosition: vector has more than one entry equal to 1.')\n        }\n        break\n      case 0:\n        break\n      default:\n        throw new Error(`taskObject.vectorToPosition: vector has at least one entry not equal to 0 or 1. Entry ${value}`)\n    }\n  })\n\n  if (position === null) {\n    throw new Error('taskObject.vectorToPosition: no entry equal to one was found in vector, position is null.')\n  }\n\n  return position\n}\n\nconst sampleNextTransition = function (transitionMatrix = mandatory(), currentPosition = mandatory()) {\n  /* currentPosition is :\n   * * either a vector of same size m as transitionMatrix (m*p)\n   * * or a number that will be transformed into a vector\n   */\n  if (Number.isInteger(currentPosition)) {\n    currentPosition = positionToVector(currentPosition, (math.size(transitionMatrix))[0])\n  }\n\n  transitionMatrix = math.matrix(transitionMatrix)\n\n  if ((currentPosition.size())[0] !== (transitionMatrix.size())[0]) {\n    throw new Error('taskObject.sampleNextTransition: currentPosition vector is not of same size as transitionMatrix')\n  }\n\n  const nextPositionProbabilities = math.multiply(math.transpose(currentPosition), transitionMatrix)\n\n  /* --- Draw a random position --- */\n  let count = 0\n  const randomNumber = Math.random()\n  let nextPosition = null\n  nextPositionProbabilities.map((value, index) => {\n    if (randomNumber > count) {\n      nextPosition = index[0]\n    }\n    count += value\n    return count\n  })\n\n  if (nextPosition === null) {\n    throw new Error('taskObject.sampleNextTransition: nextPosition is null')\n  }\n\n  return nextPosition\n}\n\n\nconst sampleTransitions = function (transitionMatrix = mandatory(), startPosition = mandatory(), numberOfTransitions = mandatory(), includeStart = true) {\n  let vectorPosition\n  if (Number.isInteger(startPosition)) {\n    vectorPosition = positionToVector(startPosition)\n  } else {\n    vectorPosition = startPosition\n    startPosition = vectorToPosition(vectorPosition)\n  }\n  const transitions = []\n\n  if (includeStart) {\n    transitions.push(startPosition)\n  }\n\n  for (let j = transitions.length; j < numberOfTransitions; j++) {\n    const sampledPosition = sampleNextTransition(transitionMatrix, vectorPosition)\n    transitions.push(sampledPosition)\n    vectorPosition = positionToVector(sampledPosition)\n  }\n\n  return (transitions)\n}\n\n\nconst getDominantCellByRow = function (transitionArray = mandatory()) {\n  transitionArray = getValidTransitionArray(transitionArray)\n\n  const dominantArray = matrix(transitionArray.length, transitionArray.length, 0)\n  for (let i = 0; i < transitionArray.length; i++) {\n    // sample one of the max index if ex aequo\n    const indicesOfMaxValue = transitionArray[i].indicesOf(_.max(transitionArray[i]))\n    if (indicesOfMaxValue.length > 1) {\n      console.warn(`TaskObject.getDominantCellByRow: ${indicesOfMaxValue.length} cells in row ${i} of transition matrix are ex-aequo. Sampling one of them as dominant.`)\n    }\n    const maxIndex = _.sample(indicesOfMaxValue)\n    dominantArray[i][maxIndex] = 1\n  }\n\n  return (dominantArray)\n}\n\nconst getDominantProbabilityByRow = function (transitionArray = mandatory()) {\n  transitionArray = getValidTransitionArray(transitionArray)\n\n  const dominantArray = _.map(transitionArray, value => (_.max(value)))\n\n  return (dominantArray)\n}\n\nconst matrixKlDivergence = function (qMatrix = mandatory(), pMatrix = mandatory()) {\n  if (qMatrix.constructor !== math.matrix().constructor) {\n    if (qMatrix.constructor === Array) {\n      qMatrix = math.matrix(qMatrix)\n    } else {\n      throw new Error('taskObject.vectorToPosition: qMatrix is not of type math.matrix() or Array')\n    }\n  }\n\n  if (pMatrix.constructor !== math.matrix().constructor) {\n    if (pMatrix.constructor === Array) {\n      pMatrix = math.matrix(pMatrix)\n    } else {\n      throw new Error('taskObject.vectorToPosition: pMatrix is not of type math.matrix() or Array')\n    }\n  }\n\n  /* --- Get unidimensional distributions --- */\n  const flattenQDistribution = math.flatten(qMatrix)\n  const flattenPDistribution = math.flatten(pMatrix)\n\n  const klDivergence = math.kldivergence(flattenQDistribution, flattenPDistribution)\n\n  // symetric would be math.kldivergence(q, p) + math.kldivergence(p, q)\n\n  return (klDivergence)\n}\n\n/**\n * Return a vector or matrix of same size as absolutes, each cells being the proportion of the absolutes values by row. In array format.\n * @param  {array|object} absolutes Array or math.js matrix containing the absolute values\n * @return {array}           Matrix in array format of same dimension as absolutes, converted to proportions.\n */\nconst getProportionArray = function (absolutes = mandatory()) {\n  const sumRow = []\n  const proportionArray = []\n  for (let i = 0; i < absolutes.length; i++) {\n    if (absolutes[i].constructor === Array) {\n      sumRow[i] = math.sum(absolutes[i])\n      proportionArray[i] = []\n      for (let j = 0; j < absolutes[i].length; j++) {\n        proportionArray[i][j] = absolutes[i][j] / sumRow[i]\n      }\n    } else {\n      sumRow[i] = math.sum(absolutes)\n      proportionArray[i] = absolutes[i] / sumRow[i]\n    }\n  }\n\n  return (proportionArray)\n}\n\n/**\n * From a particular sequence of consequent position in a unidimensional array. Returns an object with two properties. First property \"absolutes\" is an array containing the number of observed transition in absolute values,\n * \"proportions\" is the proportions of observed transition for each position (row).\n * @param  {array} sequence         unidimensional array containing the sequence of positions\n * @param  {array|object} transitionMatrix optional: array or math.js matrix containing the true transition matrix (only used for the number of positions)\n * @return {[object}                  Object with absolutes and proportions property\n */\nconst getObservedArrays = function (sequence = mandatory(), transitionMatrix = null) {\n  let size = 4\n  if (transitionMatrix !== null) {\n    size = (getValidTransitionArray(transitionMatrix)).length\n  }\n\n  /* --- Create observation matrix from sequence using array (not math.js matrix object) --- */\n\n  const observedTransitionArray = matrix(size, size, 0)\n  for (let i = 0; i < sequence.length - 1; i++) {\n    observedTransitionArray[sequence[i]][sequence[i + 1]] += 1\n  }\n\n  return ({\n    absolutes: observedTransitionArray,\n    proportions: getProportionArray(observedTransitionArray),\n  })\n}\n\nconst getObservedAndDistanceMatrix = function (sequence = mandatory(), transitionMatrix = mandatory()) {\n  transitionMatrix = getValidTransitionArray(transitionMatrix)\n  // const size = (math.size(transitionMatrix))[0]\n\n  const observedArrays = getObservedArrays(sequence, transitionMatrix)\n\n  const observedMatrix = math.matrix(observedArrays.proportions)\n\n  const distanceMatrix = math.subtract(transitionMatrix, observedMatrix) // math.dotDivide(math.subtract(transitionMatrix, observedMatrix), transitionMatrix);\n\n  return ({\n    observedMatrix,\n    distanceMatrix,\n    totalError: math.sum(math.abs(distanceMatrix)),\n  })\n}\n\n/* ======== Full sequence generators ======== */\n/**\n * Returns a transition sequence where the transition probabilities are equal to the given transitionMatrix with an error under the errorThreshold\n * @param  {array} sequence               Array of positions\n * @param  {array} transitionMatrix       transition matrix of the model\n * @param  {Number} errorThreshold         threshold under which the sequence is validated\n * @param  {Number} numberOfNewTransitions Number of transitions added every time the algorithms modify a previous transition\n * @return {array}                        New sequence\n */\nconst smoothSequenceDistribution = function (sequence, transitionMatrix, errorThreshold = 0.05, numberOfNewTransitions = 1) {\n  transitionMatrix = getValidTransitionArray(transitionMatrix)\n\n  /* --- Get the distance matrix between observed transitions and true transition matrix --- */\n  const resultObject = getObservedAndDistanceMatrix(sequence, transitionMatrix)\n  // const observedMatrix = resultObject.observedMatrix\n  const distanceMatrix = resultObject.distanceMatrix\n\n  /* --- Find the positions with distance from true transition probability above the errorThreshold --- */\n  const size = (math.size(transitionMatrix))[0]\n  const unevenPosition = []\n  for (let i = 0; i < size; i++) {\n    if (rowSum(math.abs(distanceMatrix), i) > errorThreshold) {\n      let rowArray = (getRow(distanceMatrix, i)).toArray()\n      rowArray = rowArray[0]\n      const maxVariations = _.sortBy(rowArray)\n      // const minVariation = _.min(rowArray)\n\n      // [positionIndex, maxVariationPositionIndex, maxVariationValue, minVariationPositionIndex, minVariationValue]\n      const positionInformations = [i,\n        rowArray.indexOf(maxVariations[0]),\n        maxVariations[0],\n        rowArray.indexOf(maxVariations[size - 1]),\n        maxVariations[size - 1],\n      ]\n\n      unevenPosition.push(positionInformations)\n    }\n  }\n\n  // debuglog(unevenPosition);\n  let newSequence = sequence\n  if (unevenPosition.length > 0) {\n    // smooth it\n    // const addAtTheEnd = null\n\n    const pickedUneven = unevenPosition[_.random(0, unevenPosition.length - 1)]\n\n    const smoothedPosition = pickedUneven[0]\n    // debuglog(pickedUneven);\n    const allIndices = sequence.indicesOf(smoothedPosition)\n    const highTransitionIndices = _.filter(allIndices, (i) => {\n      if (sequence[i + 1] === pickedUneven[1]) {\n        return true\n      }\n      return false\n    })\n\n    const replacedIndex = _.sample(highTransitionIndices)\n\n    const addedTransitions = [pickedUneven[3]]\n    let vectorPosition = positionToVector(pickedUneven[3])\n    for (let j = 1; j < numberOfNewTransitions; j++) {\n      const sampledPosition = sampleNextTransition(transitionMatrix, vectorPosition)\n      addedTransitions.push(sampledPosition)\n      vectorPosition = positionToVector(sampledPosition)\n    }\n\n    let restSequence = _.slice(sequence, replacedIndex + 2)\n    const restartAt = restSequence.indexOf(addedTransitions[addedTransitions.length - 1])\n\n    if (restartAt === -1) {\n      restSequence = sampleTransitions(transitionMatrix, addedTransitions[addedTransitions.length - 1], restSequence.length)\n    } else {\n      restSequence = _.slice(restSequence, restartAt + 1)\n    }\n\n    newSequence = _.concat(_.slice(sequence, 0, replacedIndex + 1), addedTransitions, _.slice(restSequence, restartAt + 1))\n\n    if (newSequence.length !== sequence.length) {\n      if (newSequence.length > sequence.length) {\n        newSequence = _.slice(newSequence, newSequence.length - sequence.length)\n      } else {\n        const finishSequence = sampleTransitions(transitionMatrix, newSequence[newSequence.length - 1], sequence.length - newSequence.length)\n        newSequence = _.concat(newSequence, finishSequence)\n      }\n      // debuglog(newSequence.length, \" restarted at \" + restartAt + \" addAtTheEnd \" + addAtTheEnd + \" replacedIndex \" + replacedIndex);\n    }\n\n    return (newSequence)\n  }\n  return (null)\n}\n\nconst promiseSequenceFromTransitionMatrix = function (transitionMatrix = mandatory(), options = null) {\n  transitionMatrix = getValidTransitionArray(transitionMatrix)\n  return new Promise((resolve) => {\n    const baseOptions = {\n      sequenceLength: 50,\n      errorThreshold: 0.06,\n      numberOfNewTransitions: 4,\n      maxLoop: 100,\n    }\n\n    options = _.extend(baseOptions, options)\n\n    /* --- Infer number of state from the size of the transition matrix --- */\n    const numberOfStates = (math.size(transitionMatrix))[0]\n\n    /* --- Generate a starting sequence based on transition probabilities --- */\n    let sequence = []\n    const startPosition = _.random(0, numberOfStates - 1)\n    sequence.push(startPosition)\n    let positionVector = positionToVector(startPosition)\n    for (let i = 0; i < options.sequenceLength - 1; i++) {\n      const nextPosition = sampleNextTransition(transitionMatrix, positionVector)\n      positionVector = positionToVector(nextPosition)\n      sequence.push(nextPosition)\n    }\n\n    /* ---\n      Start the loop to get a sequence as close as possible to the true transition probabilities\n      With a limit the number of cycles at 1000\n    --- */\n    let loop = 0\n    const maxLoop = options.maxLoop\n\n    let bestSequence = null\n    let bestError = 100\n    while (loop < maxLoop) {\n      const newSequence = smoothSequenceDistribution(sequence, transitionMatrix, options.errorThreshold, options.numberOfNewTransitions)\n\n      // newSequence is null if no better sequence was found by smoothSequenceDistribution -> loop breaks\n      if (newSequence !== null) {\n        const resultObject = getObservedAndDistanceMatrix(newSequence, transitionMatrix)\n        const totalError = resultObject.totalError\n\n        if ((bestSequence === null) || (bestError > totalError)) {\n          bestSequence = {\n            sequence: newSequence,\n            observedMatrix: resultObject.observedMatrix,\n            distanceMatrix: resultObject.distanceMatrix,\n          }\n          bestError = totalError\n        }\n\n        sequence = newSequence\n      } else {\n        break\n      }\n      loop += 1\n    }\n\n    /* --- After the loop if a better sequence was found return it, else return the start sequence sample from the transition probabilites --- */\n    if (bestSequence !== null) {\n      resolve(bestSequence.sequence)\n    } else {\n      resolve(sequence)\n    }\n  })\n}\n\nconst promiseMultipleSequences = function (transitionMatrix = mandatory(), options = null) {\n  return new Promise((resolve) => {\n    transitionMatrix = getValidTransitionArray(transitionMatrix)\n\n    const baseOptions = {\n      numberOfSequences: 6,\n      sequenceLength: 130,\n      sequenceArray: [],\n    }\n\n    options = _.extend(baseOptions, options)\n\n    debuglog(`Generated ${options.sequenceArray.length} sequences`)\n\n    if (options.sequenceArray.length < options.numberOfSequences) {\n      debuglog(options.sequenceArray)\n      promiseSequenceFromTransitionMatrix(transitionMatrix, {\n        sequenceLength: options.sequenceLength,\n      }).then((sequence) => {\n        options.sequenceArray.push(sequence)\n        promiseMultipleSequences(transitionMatrix, options).then((sequences) => {\n          resolve(sequences)\n        })\n      })\n    } else {\n      resolve(options.sequenceArray)\n    }\n  })\n}\n\nconst promiseMultipleRandomSequences = function (options = null) {\n  return new Promise((resolve) => {\n    const baseOptions = {\n      numberOfSequences: 4,\n      sequenceLength: 30,\n      dominantProbability: 0.4,\n      dominantPositions: [0, 1, 2, 3],\n      errorThreshold: 0.02,\n      maxLoop: 10000,\n      numberOfNewTransitions: 4,\n      sequenceArray: [],\n    }\n\n    options = _.extend(baseOptions, options)\n\n    debuglog(`Generated ${options.sequenceArray.length} sequences`)\n\n    if (options.sequenceArray.length < options.numberOfSequences) {\n      // get the zero order transitionMatrix corresponds to the dominantPositions\n      const transitionMatrix = getZeroOrderTransitionMatrix(options.sequenceArray.length, options.dominantProbability)\n\n      promiseSequenceFromTransitionMatrix(transitionMatrix, {\n        sequenceLength: options.sequenceLength,\n        errorThreshold: options.errorThreshold,\n        numberOfNewTransitions: options.numberOfNewTransitions,\n        maxLoop: options.maxLoop,\n      }).then((sequence) => {\n        options.sequenceArray.push(sequence)\n        promiseMultipleRandomSequences(options).then((sequences) => {\n          resolve(sequences)\n        })\n      })\n    } else {\n      resolve(options.sequenceArray)\n    }\n  })\n}\n\n\nconst promiseSegmentsAndProbesByBlock = function (options = null) {\n  return new Promise((resolve) => {\n    const baseOptions = {\n      segmentSizes: [3, 4, 5],\n      observationSegmentRepetitionPerBlock: 2,\n      numberOfBlocks: 6,\n      dominantProbability: 0.75,\n      positions: [0, 1, 2, 3],\n    }\n\n    options = _.extend(baseOptions, options)\n\n    const numberOfTimeAProbeIsRepeated = options.segmentSizes.length * options.observationSegmentRepetitionPerBlock\n    const positions = options.positions\n\n    // Number of dominant transition by probe position\n    const numberOfDominant = math.floor(options.dominantProbability * numberOfTimeAProbeIsRepeated)\n\n    // let segmentSizeSequences = [];\n    let segmentSizeSequencesEvenlyDistributed = []\n    let probeSequences = []\n    let transitionTypes = []\n    let blockArray = []\n    for (let i = 0; i < options.numberOfBlocks; i++) {\n      /* --- Generate the segment size sequence for the block --- */\n      const segmentPermutations = samplePermutation(rep(options.segmentSizes, positions.length * options.observationSegmentRepetitionPerBlock))\n      // segmentSizeSequences = segmentSizeSequences.concat(segmentPermutations);\n      blockArray = blockArray.concat(rep(i, segmentPermutations.length))\n\n      // Each position sees the same number of segment sizes\n      let probeSequence = samplePermutation(rep(options.positions, numberOfTimeAProbeIsRepeated))\n\n      // make sure there is no repeated probe just one after the other\n      // const previousProbe = null\n      let loop = 0\n      while (loop < 100) {\n        if (probeSequence.hasNeighbouringRepeat()) {\n          probeSequence = samplePermutation(rep(options.positions, numberOfTimeAProbeIsRepeated))\n        } else {\n          break\n        }\n        loop += 1\n      }\n\n      // Distribute uniformely position with segment sizes.\n      // You have the right number of probes but now but not association with segment length\n      const segmentEvenlyPermutated = []\n      const leftSegmentPermutations = positions.map(() => samplePermutation(rep(options.segmentSizes, options.observationSegmentRepetitionPerBlock)))\n\n      for (let i = 0; i < probeSequence.length; i++) {\n        segmentEvenlyPermutated[i] = leftSegmentPermutations[probeSequence[i]].pop()\n        if (typeof segmentEvenlyPermutated[i] === 'undefined') {\n          throw new Error('promiseSegmentsAndProbesByBlock: leftSegmentPermutations is empty cannot pop !')\n        }\n      }\n      segmentSizeSequencesEvenlyDistributed = segmentSizeSequencesEvenlyDistributed.concat(segmentEvenlyPermutated)\n\n      /* --- Concat the probe sequence to the array for all blocks --- */\n      probeSequences = probeSequences.concat(probeSequence)\n\n      /* --- Compute dominant transitions --- */\n      const indices = _.range(probeSequence.length)\n      const transitionType = rep(0, probeSequence.length)\n      const dominantCount = [0, 0, 0, 0]\n      while (indices.length) {\n        const r = _.random(0, indices.length - 1)\n        const index = indices.splice(r, 1)\n        const position = probeSequences[index]\n        if (dominantCount[position - 1] >= numberOfDominant) {\n          transitionType[index] = 0\n        } else {\n          dominantCount[position - 1] += 1\n          transitionType[index] = 1\n        }\n      }\n\n      /* --- Concat dominant transitions --- */\n\n      transitionTypes = transitionTypes.concat(transitionType)\n    }\n\n    resolve({\n      segmentSizeSequences: segmentSizeSequencesEvenlyDistributed,\n      block: blockArray,\n      probeSequences,\n      transitionTypes,\n      numberOfProbePerBlock: options.segmentSizes.length * options.observationSegmentRepetitionPerBlock * options.positions.length,\n      numberOfObservationPerBlock: _.sum(options.segmentSizes) * options.observationSegmentRepetitionPerBlock * options.positions.length,\n    })\n  })\n}\n\nconst getFullSequenceObjectForRandomBlackoutBlock = function (sequence = mandatory(), options = null) {\n  const baseOptions = {\n    observePredictionPerBlock: 16,\n    block: 0,\n    blockType: 'random',\n    segmentLength: {\n      A: [5, 2, 3, 4, 2],\n      B: [2, 3, 4, 5],\n    },\n    trialTypes: {\n      o: 'observation',\n      oP: 'observation_prediction',\n      pBP: 'post_blackout_prediction',\n      blackout: 'blackout',\n    },\n  }\n\n  options = _.extend(baseOptions, options)\n\n  const segAPermutations = samplePermutation(options.segmentLength.A)\n  const segBPermutations = samplePermutation(options.segmentLength.B)\n  const segmentSequence = []\n  segAPermutations.map((v, i) => { //eslint-disable-line\n    segmentSequence.push(segAPermutations[i])\n    if (i < segBPermutations.length) {\n      segmentSequence.push(segBPermutations[i])\n    }\n  })\n\n  const blockSize = options.segmentLength.A.sum() + options.segmentLength.B.sum()\n  const blackoutIndices = segmentSequence.integrate()\n  const addPostBlackout = []\n  let predictionIndices = _.range(0, blockSize).filter((v) => {\n    if (blackoutIndices.indexOf(v) !== -1) {\n      return false\n    } else if (blackoutIndices.indexOf(v - 1) !== -1) {\n      addPostBlackout.push(v)\n      return false\n    }\n    return true\n  })\n  predictionIndices = samplePermutation(predictionIndices)\n    .slice(0, options.observePredictionPerBlock)\n\n  const fullSequence = sequence.slice()\n  const fullBlockType = rep(options.blockType, blockSize)\n  const fullBlock = rep(options.block, blockSize)\n  const fullTrial = _.range(1, blockSize + 1)\n  const fullTrialType = []\n  for (let i = 0; i < sequence.length; i++) {\n    if (predictionIndices.indexOf(i) !== -1) {\n      fullTrialType.push(options.trialTypes.oP)\n    } else if (addPostBlackout.indexOf(i) !== -1) {\n      fullTrialType.push(options.trialTypes.pBP)\n    } else if (blackoutIndices.indexOf(i) !== -1) {\n      fullTrialType.push(options.trialTypes.blackout)\n    } else {\n      fullTrialType.push(options.trialTypes.o)\n    }\n  }\n\n  return ({\n    fullSequence,\n    blockType: fullBlockType,\n    block: fullBlock,\n    trial: fullTrial,\n    trialType: fullTrialType,\n  })\n}\n\nconst promiseFullSequenceForIntermitentPrediction = function (transitionMatrix = mandatory(), options = null) {\n  transitionMatrix = getValidTransitionArray(transitionMatrix)\n  return new Promise((resolve) => {\n    const baseOptions = {\n      sequenceLength: 180,\n      sequenceALength: 96,\n      sequenceBLength: 84,\n      observePredictionPerBlock: 16,\n      errorThreshold: 0.06,\n      numberOfNewTransitions: 4,\n      maxLoop: 100,\n      segmentLength: {\n        A: [5, 2, 3, 4, 2],\n        B: [2, 3, 4, 5],\n      },\n      protectFirstBlock: true,\n      trialTypes: {\n        o: 'observation',\n        oP: 'observation_prediction',\n        pBP: 'post_blackout_prediction',\n        blackout: 'blackout',\n      },\n    }\n\n    options = _.extend(baseOptions, options)\n\n    let sequenceA\n    let sequenceB\n\n    options.sequenceLength = options.sequenceALength\n    return promiseSequenceFromTransitionMatrix(transitionMatrix, options)\n      .then((result) => {\n        const resultObject = getObservedAndDistanceMatrix(result, transitionMatrix)\n        // const observedMatrix = resultObject.observedMatrix\n        const distanceMatrix = resultObject.distanceMatrix\n\n        debugWarn('promiseFullSequenceForIntermitentPrediction.sequenceA', math.sum(math.abs(distanceMatrix)))\n\n        sequenceA = result\n        options.sequenceLength = options.sequenceBLength\n\n        return (promiseSequenceFromTransitionMatrix(transitionMatrix, options))\n      })\n      .then((result) => {\n        const resultObject = getObservedAndDistanceMatrix(result, transitionMatrix)\n        // const observedMatrix = resultObject.observedMatrix\n        const distanceMatrix = resultObject.distanceMatrix\n\n        debugWarn('promiseFullSequenceForIntermitentPrediction.sequenceB', math.sum(math.abs(distanceMatrix)))\n\n        sequenceB = _.clone(result)\n\n        // start loop for blackouts\n        let currentBlock = -1\n        let currentTrial = 0\n        let segAIndex = 0\n        let indicesBlackout = []\n\n        let fullSequence = []\n        let fullTrialType = [] // fill it in the end of each block\n        let fullTrial = []\n        let fullBlock = []\n\n        let segmentsA = _.clone(options.segmentLength.A)\n        let segmentsB = _.clone(options.segmentLength.B)\n        const lenghtBlockA = segmentsA.sum()\n        const blockLength = lenghtBlockA + segmentsB.sum()\n        let lenghtSegmentB = samplePermutation(segmentsB)\n        for (let i = 0; i < sequenceA.length; i++) {\n          const tempBlock = Math.floor(i / lenghtBlockA)\n\n\n          if (tempBlock !== currentBlock) {\n            segmentsA = _.clone(options.segmentLength.A)\n            segmentsB = _.clone(options.segmentLength.B)\n            currentBlock = tempBlock\n            currentTrial = 0\n            segAIndex = 0\n            if ((currentBlock === 0) && (options.protectFirstBlock)) {\n              let first = segmentsA.shift()\n              segmentsA[0] += first\n              indicesBlackout = segmentsA.integrate()\n              lenghtSegmentB = samplePermutation(segmentsB)\n              first = lenghtSegmentB.shift()\n              lenghtSegmentB[0] += first\n            } else {\n              indicesBlackout = samplePermutation(segmentsA).integrate()\n              lenghtSegmentB = samplePermutation(segmentsB)\n            }\n          }\n\n          fullTrial.push(currentTrial)\n          fullSequence.push(sequenceA[i])\n          fullBlock.push(currentBlock)\n          segAIndex += 1\n          currentTrial += 1\n\n          if ((segAIndex !== lenghtBlockA) && (indicesBlackout.indexOf(segAIndex) !== -1)) {\n            fullTrialType.push(options.trialTypes.blackout)\n            const addedSegmentLenght = lenghtSegmentB.shift()\n            const addedSegment = sequenceB.splice(0, addedSegmentLenght)\n            const addTrials = _.range(currentTrial, currentTrial + addedSegmentLenght)\n            const addedTrialType = rep(options.trialTypes.o, addedSegmentLenght)\n            addedTrialType[0] = options.trialTypes.pBP\n            const addedBlock = rep(currentBlock, addedSegmentLenght)\n\n            fullSequence = fullSequence.concat(addedSegment)\n            fullTrial = fullTrial.concat(addTrials)\n            fullTrialType = fullTrialType.concat(addedTrialType)\n            fullBlock = fullBlock.concat(addedBlock)\n\n            currentTrial += addedSegment.length\n          } else {\n            fullTrialType.push(options.trialTypes.o)\n          }\n        }\n\n        // Add observation_prediction to each block\n        const nblocks = Math.floor(fullSequence.length / blockLength)\n        for (let i = 0; i < nblocks; i++) {\n          const blockTrialType = fullTrialType.slice(i * blockLength, (i + 1) * blockLength)\n          const indicesPrediction = samplePermutation(blockTrialType.indicesOf(options.trialTypes.o)).slice(0, options.observePredictionPerBlock)\n          for (let j = 0; j < indicesPrediction.length; j++) {\n            const index = i * (blockLength + indicesPrediction[j])\n            fullTrialType[index] = options.trialTypes.oP\n          }\n        }\n\n        resolve({\n          fullSequence,\n          trial: fullTrial,\n          trialType: fullTrialType,\n          block: fullBlock,\n          blockType: rep('normal', fullSequence.length),\n        })\n      })\n  })\n}\n\n/**\n * From a transitionMatrix returns an object with two properties sequence and trialType. Each position is either learning, probe, or feedback.\n * @param  {array} transitionMatrix Array or matrix\n * @param  {[type]} options          [description]\n * @return {[type]}                  [description]\n */\nconst promiseFullSequenceForOneLevel = function (transitionMatrix = mandatory(), options = null) {\n  return new Promise((resolve) => {\n    /* --- Make sure the transitionMatrix is valid --- */\n    transitionMatrix = getValidTransitionArray(transitionMatrix)\n    const numberOfStates = math.size(transitionMatrix)[0]\n\n    const baseOptions = {\n      numberOfSequences: 8,\n      insertRandomBlocksAt: [2, 6],\n      randomBlocksDominantStates: [2, 2],\n      randomBlocksDominantStateProbability: 0.4,\n    }\n\n    options = _.extend(baseOptions, options)\n\n    /* --- Create random matrix --- */\n\n    const randomBlocksNonDominantProbability = (1 - options.randomBlocksDominantStateProbability) / (numberOfStates - 1)\n    const randomTransitionMatrix = getRandomTransitionMatrix(rep(randomBlocksNonDominantProbability, numberOfStates))\n    randomTransitionMatrix[options.randomBlocksDominantStates] = options.randomBlocksDominantStateProbability\n\n    /* ---\n      Get the dominant transitions and non dominant transitions for each position\n      This will help build the feedback sequence\n     --- */\n\n    // for random blocks\n    const randomBlocksDominantState = matrix(options.randomBlocksDominantStates.length, numberOfStates, 0)\n    const randomBlocksNonDominantStates = matrix(options.randomBlocksDominantStates.length, numberOfStates, rep(0, numberOfStates - 1))\n    for (let i = 0; i < options.randomBlocksDominantStates.length; i++) {\n      for (let j = 0; j < numberOfStates; j++) {\n        randomBlocksDominantState[i][j] = options.randomBlocksDominantStates[i]\n        randomBlocksNonDominantStates[i][j] = _.range(0, numberOfStates).filter(v => (v !== options.randomBlocksDominantStates[i]))\n      }\n    }\n\n    // for non random blocks\n    const dominantMatrix = getDominantCellByRow(transitionMatrix)\n    const dominantTransition = []\n    const nonDominantTransitions = []\n    _.forEach(dominantMatrix, (value, index) => {\n      dominantTransition[index] = vectorToPosition(value)\n      nonDominantTransitions[index] = _.range(0, dominantMatrix.length).filter(v => ((v !== index) && (v !== dominantTransition[index])))\n    })\n\n    promiseSegmentsAndProbesByBlock(options)\n      .then((segments) => {\n        const numberOfRandomBlocks = options.insertRandomBlocksAt.constructor === Array ? options.insertRandomBlocksAt.length : 0\n\n        promiseMultipleSequences(randomTransitionMatrix, { // TODO: replace by a specific randomsequencegenerator able to change the main state\n          numberOfSequences: numberOfRandomBlocks,\n          sequenceLength: segments.numberOfObservationPerBlock,\n        })\n          .then((randomSequences) => {\n            promiseMultipleSequences(transitionMatrix, {\n              numberOfSequences: options.numberOfSequences - numberOfRandomBlocks,\n              sequenceLength: segments.numberOfObservationPerBlock,\n            })\n              .then((smoothedSequences) => {\n                const numberOfBlocks = (segments.block.uniqueValues()).length\n                if (smoothedSequences.length > numberOfBlocks) {\n                  // More sequences than block, select the best sequences\n                  const observedData = []\n                  const errors = []\n                  const kls = []\n                  const sequenceObjects = []\n                  let bestSequence = null // eslint-disable-line\n                  let bestError = null\n                  for (let i = 0; i < smoothedSequences.length; i++) {\n                    observedData[i] = getObservedAndDistanceMatrix(smoothedSequences[i], transitionMatrix) // eslint-disable-line\n                    errors[i] = observedData[i].totalError\n                    kls[i] = matrixKlDivergence(observedData[i].observedMatrix, transitionMatrix)\n                    sequenceObjects.push({\n                      sequence: smoothedSequences[i], // eslint-disable-line\n                      error: errors[i],\n                    })\n                    if ((bestError === null) || (errors[i] < bestError)) {\n                      bestSequence = smoothedSequences[i] // eslint-disable-line\n                      bestError = errors[i]\n                    }\n                  }\n\n                  console.warn(_.sortBy(errors))\n                  let smoothedSequences = _.sortBy(sequenceObjects, 'error').map(o => o.sequence)\n                }\n\n                debuglog(segments)\n\n                // in case the array is not ordered properly do a by block iteration\n                const blocksNumber = segments.block.uniqueValues()\n                let fullSequenceBlock = []\n                let fullSequenceBlockType = []\n                let completeSequence = []\n                let trialType = []\n                let trials = []\n\n                let smoothedSequencesIndex = 0\n                let randomSequencesIndex = 0\n                let sequence\n                let block\n                let blockIndices\n                let probeTransitions\n                let blockType\n                let nonDominantIndices\n                let currentDominantTransitions\n                let currentNonDominantTransitions\n\n                for (let i = 0; i < blocksNumber.length; i++) {\n                  if (options.insertRandomBlocksAt.indexOf(i) !== -1) {\n                    /* --- Random sequence processing --- */\n                    sequence = randomSequences[randomSequencesIndex]\n\n                    currentDominantTransitions = randomBlocksDominantState[randomSequencesIndex]\n                    currentNonDominantTransitions = randomBlocksNonDominantStates[randomSequencesIndex]\n\n                    blockType = 'random'\n\n                    randomSequencesIndex += 1\n                  } else {\n                    /* --- Non random sequence processing --- */\n                    sequence = smoothedSequences[smoothedSequencesIndex]\n\n                    currentDominantTransitions = dominantTransition\n                    currentNonDominantTransitions = nonDominantTransitions\n\n                    blockType = 'normal'\n\n                    smoothedSequencesIndex += 1\n                  }\n\n                  block = blocksNumber[i]\n                  blockIndices = segments.block.indicesOf(block)\n                  const segmentSizesOfBlock = _.clone(segments.segmentSizeSequences) // eslint-disable-line\n                    .filter((value, index) => (blockIndices.indexOf(index) !== -1))\n\n                  // Creates the probeTransitions feedback sequence\n                  probeTransitions = []\n                  nonDominantIndices = [_.random(0, 1), _.random(0, 1), _.random(0, 1), _.random(0, 1)]\n                  const probeSequenceRemaining = _.clone(segments.probeSequences).filter((value, index) => {\n                    // checks that the probe is part of the block\n                    if (blockIndices.indexOf(index) !== -1) {\n                      // checks wether the transition is dominant or non dominant\n                      if (segments.transitionTypes[index] === 1) {\n                        // transition is dominant, pushing a dominant feedback\n                        probeTransitions.push(currentDominantTransitions[value])\n                      } else {\n                        // transition is non dominant, make sure to switch the non dominant transition so it is never twice the same consecutivelly\n                        probeTransitions.push(currentNonDominantTransitions[value][nonDominantIndices[value]])\n\n                        nonDominantIndices[value] += 1\n                        if (nonDominantIndices[value] >= currentNonDominantTransitions[value].length) {\n                          nonDominantIndices[value] = 0\n                        }\n                      }\n                      return (true)\n                    }\n                    return (false)\n                  })\n\n                  let currentObservationIndex = 0\n                  let lastTrial = 0\n                  for (let j = 0; j < blockIndices.length; j++) {\n                    const segmentIndex = blockIndices[j]\n                    const endIndex = currentObservationIndex + segments.segmentSizeSequences[segmentIndex]\n                    if (endIndex > sequence.length) {\n                      throw new Error('StateManager.getFullSequenceForBlock: sequence length is not equal to the total number of observation generated by segment for block')\n                    }\n\n                    const segment = sequence.slice(currentObservationIndex, endIndex)\n                    completeSequence = completeSequence.concat(segment)\n                    trialType = trialType.concat(rep('learning', segment.length))\n                    currentObservationIndex = endIndex\n\n                    // let probeIndex = segmentIndex;\n                    const probePosition = probeSequenceRemaining[j]\n                    const feedback = probeTransitions[j]\n\n                    // old way ... why ??\n                    // TODO think of a way to separate probesequence indx and segment index?? why...\n                    // let probeIndex = _.random(0, probeSequenceRemaining.length - 1);\n                    // let probePosition = probeSequenceRemaining.splice(probeIndex, 1);\n                    // let feedback = probeTransitions.splice(probeIndex, 1);\n\n                    completeSequence = (completeSequence.concat(probePosition)).concat(feedback)\n                    trialType = trialType.concat(['probe', 'feedback'])\n\n                    fullSequenceBlock = fullSequenceBlock.concat(rep(block, segment.length + 2))\n                    fullSequenceBlockType = fullSequenceBlockType.concat(rep(blockType, segment.length + 2))\n                    // get trials\n                    const N = segment.length + 2\n                    const addTrials = Array(...new Array(N)).map((_, i) => i + lastTrial + 1)\n                    lastTrial = addTrials[addTrials.length - 1]\n                    trials = trials.concat(addTrials)\n\n                    // trial = trial.concat([...Array(segment.length + 2).keys()].map(x => x+lastTrial))\n                  }\n                }\n\n                resolve({\n                  fullSequence: completeSequence,\n                  trialType,\n                  block: fullSequenceBlock,\n                  blockType: fullSequenceBlockType,\n                  trial: trials,\n                })\n              })\n          })\n      })\n  })\n}\n\n\nconst getFullSequenceObjectForClassicLevels = function (sequence, options = {}) {\n  const baseOptions = {\n    trialType: 'classic',\n    blockType: 'normal',\n    block: 0,\n  }\n\n  options = _.extend(baseOptions, options)\n\n  let t = 0\n  return ({\n    fullSequence: sequence,\n    block: rep([options.block], sequence.length),\n    blockType: rep([options.blockType], sequence.length),\n    trialType: rep([options.trialType], sequence.length),\n    trial: rep([0], sequence.length).map(() => {\n      t += 1\n      return t\n    }),\n  })\n}\n\nconst insertSequenceObjectAtBlock = function (baseObject = mandatory(), insertedObject = mandatory(), atBlocks = mandatory()) {\n  const newObject = {\n    fullSequence: [],\n    block: [],\n    trial: [],\n    trialType: [],\n    blockType: [],\n  }\n\n  if (atBlocks.constructor === Number) {\n    atBlocks = [atBlocks]\n  }\n\n  let offset = 0\n  let currentBlock = baseObject.block[0]\n  let baseCurrentBlock = currentBlock\n  for (let i = 0; i < baseObject.block.length; i++) {\n    if (atBlocks.indexOf(baseObject.block[i]) !== -1) {\n      // Get rid of this insert marker\n      atBlocks = atBlocks.filter(v => (v !== baseObject.block[i]))\n      const insertedBlock = insertedObject.block[offset]\n\n      if (baseObject.block[i] !== 0) { currentBlock += 1 } // Allows to start at 0 if marker was at 0\n\n      while (insertedObject.block[offset] === insertedBlock) {\n        newObject.fullSequence.push(insertedObject.fullSequence[offset])\n        newObject.block.push(currentBlock)\n        newObject.trial.push(insertedObject.trial[offset])\n        newObject.trialType.push(insertedObject.trialType[offset])\n        newObject.blockType.push(insertedObject.blockType[offset])\n        offset += 1\n      }\n    }\n\n    if (baseObject.block[i] !== baseCurrentBlock) {\n      currentBlock += 1\n      baseCurrentBlock = baseObject.block[i]\n    }\n\n    newObject.fullSequence.push(baseObject.fullSequence[i])\n    newObject.block.push(currentBlock)\n    newObject.trial.push(baseObject.trial[i])\n    newObject.trialType.push(baseObject.trialType[i])\n    newObject.blockType.push(baseObject.blockType[i])\n  }\n\n  // Take care of an addition at the end - all remaining blocks of inserted object will be added\n  if ((atBlocks.indexOf(baseObject.block.max() + 1) !== -1) && (offset < insertedObject.block.length)) {\n    let insertedBlock = -1\n    while (offset < insertedObject.block.length) {\n      if (insertedBlock !== insertedObject.block[offset]) {\n        currentBlock += 1\n        insertedBlock = insertedObject.block[offset]\n      }\n\n      newObject.fullSequence.push(insertedObject.fullSequence[offset])\n      newObject.block.push(currentBlock)\n      newObject.trial.push(insertedObject.trial[offset])\n      newObject.trialType.push(insertedObject.trialType[offset])\n      newObject.blockType.push(insertedObject.blockType[offset])\n      offset += 1\n    }\n  }\n\n  return newObject\n}\n\nconst promiseBestSequencesForAllBlocksAndSave = function () {\n  // / NOT IMPLEMENTED\n  // return new Promise(function (resolve, reject) {\n\n  //   // Recovers options\n  //   // Prepare to generate x amount of sequence and select the best one\n\n  //   let baseOptions = {\n  //     levelOne: {\n  //       numberOfSequences: 1,\n  //       sequenceLength: 75,\n  //       dominantProbability: 1\n  //     },\n  //     levelTwo: {\n  //       numberOfSequences: 500,\n  //       sequenceLength: 120,\n  //       dominantProbability: 0.95\n  //     },\n  //     levelThree: {\n  //       numberOfSequences: 500,\n  //       sequenceLength: 150,\n  //       dominantProbability: 0.85\n  //     },\n  //     levelFour: {\n  //       numberOfSequences: 500,\n  //       sequenceLength: 120\n  //     }\n  //   };\n\n  //   // Generate level 1\n  //   taskObject.promiseMultipleSequences(transitionMatrix, {\n  //       numberOfSequences: 6,\n  //       sequenceLength: segments.numberOfObservationPerBlock\n  //     })\n  //     .then(function (smoothedSequences) {\n  //       debuglog(segments);\n  //       let observedData = [];\n  //       let errors = [];\n  //       let kls = [];\n  //       let sequenceObjects = [];\n  //       let bestSequence = null;\n  //       let bestError = null;\n  //       for (let i = 0; i < smoothedSequences.length; i++) {\n  //         observedData[i] = taskObject.getObservedAndDistanceMatrix(smoothedSequences[i], transitionMatrix);\n  //         errors[i] = observedData[i].totalError;\n  //         kls[i] = taskObject.matrixKlDivergence(observedData[i].observedMatrix, transitionMatrix);\n  //         sequenceObjects.push({\n  //           sequence: smoothedSequences[i],\n  //           error: errors[i]\n  //         });\n  //         if ((bestError === null) || (errors[i] < bestError)) {\n  //           bestSequence = smoothedSequences[i];\n  //           bestError = errors[i];\n  //         }\n  //       }\n  //     });\n\n  //   // Generate level 2\n  //   // Generate level 3\n  //   // Generate level 4\n  //   resolve([{}, {}, {}, {}]);\n  // });\n}\n\n\nconst getDensity = function (elements, nsteps = 100, windowSize = 3) { // eslint-disable-line\n  if (elements.some(isNaN)) {\n    throw new Error('TaskObject.getDensity: elements are not all numeric.')\n  }\n\n  const range = [math.min(elements), math.max(elements)]\n\n  const stepSize = (range[1] - range[0]) / nsteps\n  // const windowLenght = stepSize * windowSize\n\n  const elementsInWindow = []\n  const windowPosition = []\n  const density = []\n  const points = []\n  for (let i = 0; i < nsteps; i++) {\n    const subset = _.filter(elements, (e) => {\n      const centered = e - range[0] - (i * stepSize)\n      return ((centered >= 0) && (centered < stepSize))\n    })\n\n    windowPosition[i] = (i + 0.5) * stepSize\n    elementsInWindow[i] = subset.length\n    density[i] = elementsInWindow[i] / elements.length\n    points[i] = {\n      x: windowPosition[i],\n      y: density[i],\n    }\n  }\n\n  return ({\n    windows: {\n      position: windowPosition,\n      numberOfElements: elementsInWindow,\n      density,\n    },\n    points,\n    chartOptions: {\n      type: 'line',\n      data: {\n        datasets: [{\n          label: 'Density',\n          data: points,\n        }],\n      },\n      options: {\n        scales: {\n          xAxes: [{\n            type: 'linear',\n            position: 'bottom',\n          }],\n        },\n      },\n    },\n  })\n}\n\nconst randomColor = function (opacity) {\n  return `rgba(${Math.round(Math.random() * 255)},${Math.round(Math.random() * 255)},${Math.round(Math.random() * 255)},${opacity || '.3'})`\n}\n\nconst computeDurationEstimate = function (options = {}) {\n  const parametersBase = {\n    dominantProbability: 0.76,\n    minNumberOfObservationsPerLearning: 3,\n    maxNumberOfObservationsPerLearning: 7,\n    observationDuration: 500,\n    interObservationDuration: 50, // to add ?\n    minTimeToPredict: 2000,\n    maxTimeToPredict: 5000,\n    feedbackDuration: 500,\n    minISIAfterLearning: 1000,\n    maxISIAfterLearning: 1500,\n    minISIAfterFeedback: 3000,\n    maxISIAfterFeedback: 5000,\n    rabbitAutoTransition: false,\n    rabbitDominantProbability: 0.6,\n    observationSegmentSizes: [3, 4, 5],\n    observationSegmentRepetitionPerBlock: 2,\n    numberOfBlocks: 6,\n    numberOfRandomBlocks: 2,\n    feedbackType: 'transition',\n  }\n\n  options = _.extend(parametersBase, options)\n\n  // number of observation = sum(segment sizes) * segment repetition per block\n  const numberOfObservationPerLevel = math.sum(options.observationSegmentSizes) * options.observationSegmentRepetitionPerBlock\n\n  // duration of one observation = observationDuration (add inter observation duration ?)\n  const oneObservationDuration = options.observationDuration\n\n  // observation duration for one block\n  const observationsDurationPerBlock = numberOfObservationPerLevel * oneObservationDuration\n\n  // number of prediction per block\n  const numberOfPredictionEventsPerBlock = options.observationSegmentSizes.length * options.observationSegmentRepetitionPerBlock\n\n  // min max and mean duration of one prediction event stored in a matrix\n  // timeDurationMatrix 4*2 min, max\n  const timeDurationMatrix = math.matrix([\n    [options.minISIAfterLearning, options.maxISIAfterLearning],\n    [options.minTimeToPredict, options.maxTimeToPredict],\n    [options.feedbackDuration, options.feedbackDuration],\n    [options.maxISIAfterFeedback, options.maxISIAfterFeedback],\n  ])\n\n  // factorMatrix 2*3 min max mean\n  const factorMatrix = math.matrix([\n    [1, 0, 1 / 2],\n    [0, 1, 1 / 2],\n  ])\n\n  // predictionDurationMatrix 4*3\n  const predictionDurationMatrix = math.multiply(timeDurationMatrix, factorMatrix)\n\n  // sumPredictionDurationVector 1*3\n  const sumPredictionDurationVector = math.multiply(math.matrix([1, 1, 1, 1]), predictionDurationMatrix)\n\n  const predictionsDurationPerBlock = math.multiply(sumPredictionDurationVector, numberOfPredictionEventsPerBlock)\n\n  // duration of one block\n  const observationDurationMatrix = math.matrix(rep(observationsDurationPerBlock, 3))\n\n  const durationPerBlock = math.add(observationDurationMatrix, predictionsDurationPerBlock)\n\n  // let total duration for one level min max mean in miliseconds\n  const totalDuration = (math.multiply(durationPerBlock, (options.numberOfBlocks + options.numberOfRandomBlocks))).toArray()\n\n  return ({\n    min: totalDuration[0],\n    max: totalDuration[1],\n    mean: totalDuration[2],\n  })\n}\n\n// Object.defineProperty(TaskObject, \"durationLevelOne\", {\n//     get: function durationLevelOne() {\n//         return(this.computeDurationEstimate(this.))\n//     }\n// });\n\nconst softMaxByRow = function (model = mandatory(), temperature = 0.2) {\n  const proportionArray = []\n  const sumRow = []\n  for (let i = 0; i < model.length; i++) {\n    if (model[i].constructor === Array) {\n      sumRow[i] = math.sum(math.exp(math.divide(model[i], temperature)))\n      proportionArray[i] = []\n      for (let j = 0; j < model[i].length; j++) {\n        proportionArray[i][j] = math.exp(model[i][j] / temperature) / sumRow[i]\n      }\n    } else {\n      sumRow[i] = math.sum(math.exp(math.divide(model, temperature)))\n      proportionArray[i] = math.exp(model[i] / temperature) / sumRow[i]\n    }\n  }\n\n  return (proportionArray)\n}\n\n\nconst prediction = function (model = mandatory(), position = mandatory(), options = {}) {\n  model = getValidTransitionArray(model)\n  let modelProportions\n\n  const optionsBase = {\n    algorithm: 'SOFTMAX',\n    temperature: 2,\n  }\n\n  options = _.extend(optionsBase, options)\n\n  if (options.algorithm === 'SOFTMAX') {\n    modelProportions = softMaxByRow(model)\n  } else if (options.algorithm === 'MAX') {\n    modelProportions = getDominantCellByRow(getProportionArray(model))\n  } else {\n    modelProportions = getProportionArray(model)\n  }\n\n  return (sampleNextTransition(modelProportions, position))\n}\n\n\nconst learnerPredict = function (sequence = mandatory(), options = {}) {\n  const optionsBase = {\n    learnerType: 'structural',\n    rules: ['mainTransitionOut', 'mainTransitionIn'], // noSquare, noBack, noSelf, or All\n    offset: 0.01,\n    learningRate: 0.2,\n    temperature: 2,\n    trueModel: null, // if set to a transition matrix the function also returns accuracy compared to optimal performer\n    trialType: null,\n    algorithm: 'SOFTMAX',\n  }\n\n  options = _.extend(optionsBase, options)\n\n  /* --- Check if the offset to prefill action values [0,1] bording values --- */\n\n  if ((options.offset > 1) || (options.offset < 0)) {\n    throw new Error('TaskObject.learnerPredict: offset needs to be between 0 and 1.')\n  }\n\n  const algorithm = options.algorithm\n  if (['SOFTMAX', 'MAX', 'PROPORTIONAL'].indexOf(algorithm) === -1) {\n    throw new Error('TaskObject.learnerPredict: algorithm is of invalid type (SOFTMAX, MAX or PROPORTIONAL).')\n  }\n\n  if (((options.rules).indexOf('dominantStructure') !== -1) && (options.trueModel === null)) {\n    throw new Error('TaskObject.learnerPredict: using the dominantStructure rule necessitate options.trueModel to be set.')\n  }\n\n  /* --- constants --- */\n  // const trialLearning = 'learning'\n  // const trialProbe = 'probe'\n  // const trialFeedback = 'feedback'\n\n  /* --- Check if trial type is null or of the correct format --- */\n  if (options.trialType !== null) {\n    if (options.trialType.constructor !== Array) {\n      throw new Error('TaskObject.learnerPredict: options.trialType should be an array or null')\n    }\n\n    if (options.trialType.length !== sequence.length) {\n      throw new Error('TaskObject.learnerPredict: options.trialType should be of same length')\n    }\n  }\n\n  const observedMatrix = matrix(4, 4, 0)\n  const model = matrix(4, 4, options.offset)\n  const predictions = []\n  const optimalPredictions = []\n  const sameAsOptimal = []\n  const sameAsOptimalProbability = []\n  const sameAsSequence = []\n  const sameAsSequenceProbability = []\n\n  /* --- Has the learner learned that there is no self transition ? --- */\n  if ((options.learnerType === 'structural') && ((options.rules).indexOf('noSelf') !== -1)) {\n    // set auto transition to 0\n    diag(model, 0)\n  }\n\n  /* --- Start learning --- */\n\n  for (let i = 0; i < sequence.length; i++) {\n    const currentPosition = sequence[i]\n\n    /* --- Do first prediction --- */\n    const predictionPosition = prediction(model, currentPosition, {\n      algorithm,\n    })\n    predictions.push(predictionPosition)\n\n    let dominantArray = null\n    if (options.trueModel !== null) {\n      dominantArray = getDominantCellByRow(options.trueModel)\n      const optimalPrediction = sampleNextTransition(dominantArray, currentPosition)\n      optimalPredictions.push(optimalPrediction)\n      sameAsOptimal.push((optimalPrediction === predictionPosition) ? 1 : 0)\n      sameAsOptimalProbability.push(model[currentPosition][optimalPrediction])\n    }\n\n    /* --- At the end of the sequence stop learning --- */\n\n    if (i === sequence.length - 1) {\n      break\n    }\n\n    /*\n     * If position is a feedback or a learning that leads to a probe,\n     * do not learn (probe and observation sequence are independant)\n     */\n    if (options.trialType !== null) {\n      // if trial type is not set do not fill the array to limit the risk of false conclusions\n      if ((options.trialType[i + 1] === 'probe') || (options.trialType[i] === 'feedback')) {\n        sameAsSequence.push(null)\n        sameAsSequenceProbability.push(null)\n        continue\n      } else {\n        sameAsSequence.push((predictionPosition === sequence[i + 1]) ? 1 : 0)\n        sameAsSequenceProbability.push(model[currentPosition][sequence[i + 1]])\n      }\n    }\n\n    /* --- Learn from next transition --- */\n\n    /*\n     * Reinforcement learning derived from Q Learning,\n     * discout factor of 0 due to the design of the task (markov chain ergodic and graph strongly connected)\n     */\n    const targetPosition = sequence[i + 1]\n    observedMatrix[currentPosition][targetPosition] += 1\n    // debuglog(\"options.trialType i+1: \" + options.trialType[i + 1]);\n    // debuglog(\"options.trialType i: \" + options.trialType[i]);\n    console.warn(`${currentPosition}${sequence[i + 1]}`)\n    /* --- learnerType determine the update --- */\n    switch (options.learnerType) {\n      case 'structural':\n        if ((options.rules).indexOf('dominantStructure') !== -1) {\n        // check if the transition is dominant\n          let dominant = false\n          if (dominantArray[currentPosition][targetPosition] === 1) {\n            dominant = true\n          }\n        // update model\n          for (let positionIndex = 0; positionIndex < model.length; positionIndex++) {\n            model[positionIndex] = _.map(model[positionIndex], (value, index) => {\n              if ((dominant) && (dominantArray[positionIndex][index] === 1)) {\n                return (value + ((options.learningRate * (1 - value)) / 4))\n              } else if ((!dominant) && (dominantArray[positionIndex][index] !== 1)) {\n                return (value + ((options.learningRate * (1 - value)) / 12))\n              }\n              return value\n            })\n          }\n        } else {\n          if ((options.rules).indexOf('mainTransitionOut') !== -1) {\n          // penalize other transitions from same origin state i\n            model[currentPosition] = _.map(model[currentPosition], (value, index) => {\n              if (index !== targetPosition) {\n                return (value * (1 - options.learningRate))\n              }\n              return (value + (options.learningRate * (1 - value)))\n            })\n          }\n\n          if ((options.rules).indexOf('mainTransitionIn') !== -1) {\n          // penalize other transitions going to same target state i+1\n            for (let positionIndex = 0; positionIndex < model.length; positionIndex++) {\n              if ((positionIndex !== currentPosition) && (positionIndex !== targetPosition)) {\n                model[positionIndex][targetPosition] *= (1 - options.learningRate)\n              }\n            }\n          }\n        }\n\n        break\n      case 'nonStructural': {\n        const value = model[currentPosition][targetPosition]\n        model[currentPosition][targetPosition] = value + (options.learningRate * (1 - value))\n        break }\n      default:\n        throw new Error(`TaskObject.learnerPredict: invalid learner type ${options.learnerType}`)\n    }\n  }\n\n  /* --- Transform the model into proportions after learning --- */\n  const modelProportions = getProportionArray(model)\n\n  /* --- Setup return object --- */\n  const returnObject = {\n    finalModel: modelProportions,\n    predictions,\n    sameAsSequence,\n    sameAsSequenceProbability,\n  }\n\n  if (optimalPredictions.length > 0) {\n    returnObject.optimalPredictions = optimalPredictions\n    returnObject.sameAsOptimal = sameAsOptimal\n    returnObject.sameAsOptimalProbability = sameAsOptimalProbability\n  }\n\n  return (returnObject)\n}\n\n// usefull for unittest ?\nconst updateWithRule = function (model = mandatory(), rule = mandatory(), learningRate = mandatory()) { // eslint-disable-line\n  switch (rule) {\n    case 'mainTransitionOut':\n    case 'mainTransitionIn':\n    case 'noSelf':\n    case 'noSquare':\n    case 'noBack':\n    case 'all':\n      break\n    default:\n      throw new Error('taskObject.updateWithRule: invalid rule')\n  }\n}\n\n\n/* ======= Sampling functions ======= */\n\n/**\n * sampleExponential - Function that return a random sample from an exponential\n * distribution of the form\n *    P(x,lambda) = lambda * exp (-lambda*x)\n *\n * With the rate parameter lambda = 1 / mean\n *\n * @param {number} [mean=1]     Mean of the distribution\n * @param {null}   [min=null]   Min value returned\n * @param {null}   [max=null]   Max value returned\n * @param {null}   [jitter=null] If max or min value reached, to avoid a heap up on the boundaries. If null, default to 5% of mean.\n * @param {array}  [pWindow=[]] Window to restrict the probability default to [0.001,0.999]\n *\n * @returns {numeric} Sample value\n */\nconst sampleExponential = function (mean = 1, min = null, max = null, jitter = null, pWindow = [0.001, 0.999]) {\n  const p = math.random(pWindow[0], pWindow[1])\n  const lambda = 1 / mean\n  // p = math.min(Math.max(p, ), );\n  jitter = jitter === null ? mean * 0.05 : jitter\n\n  let sample = (-Math.log(1 - p) / lambda)\n\n  sample = min === null ? sample : Math.max(sample, min + (Math.random() * jitter))\n  sample = max === null ? sample : Math.min(sample, max - (Math.random() * jitter))\n\n  // Consider p as the CDF to return a sample value\n  return sample\n}\n\nexport { sampleExponential,\n  softMaxByRow,\n  prediction,\n  updateWithRule,\n  learnerPredict,\n  computeDurationEstimate,\n  randomColor,\n  getDensity,\n  promiseBestSequencesForAllBlocksAndSave,\n  insertSequenceObjectAtBlock,\n  getFullSequenceObjectForClassicLevels,\n  promiseFullSequenceForOneLevel,\n  promiseFullSequenceForIntermitentPrediction,\n  getFullSequenceObjectForRandomBlackoutBlock,\n  promiseSegmentsAndProbesByBlock,\n  promiseMultipleRandomSequences,\n  promiseMultipleSequences,\n  promiseSequenceFromTransitionMatrix,\n  smoothSequenceDistribution,\n  getObservedAndDistanceMatrix,\n  getObservedArrays,\n  matrixKlDivergence,\n  getDominantProbabilityByRow,\n  getDominantCellByRow,\n  getValidTransitionArray,\n  sampleNextTransition,\n  sampleTransitions,\n  vectorToPosition,\n  positionToVector,\n  getZeroOrderTransitionMatrix,\n  getRandomTransitionMatrix,\n  getTransitionMatrixFromBase,\n  computeValidStateSpace,\n  getBaseGraphMatrices,\n  getAspectRatio,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/utilities/taskUtilities.js","import _ from 'lodash'\nimport BABYLON from 'experiment-babylon-js'\nimport {\n  EventData,\n  Array,\n  String, // eslint-disable-line\n  Deferred,\n  debuglog,\n  debugWarn,\n  hasConstructor,\n  Loader,\n  delay,\n} from 'experiment-js'\n\nimport { getAspectRatio } from '../../../utilities/taskUtilities'\n\n/* --- Redraw assets due to bug when resize NOTE bug origin Babylon --- */\nconst redrawAssets = function () {\n  const rabbitFaceTexture = this.taskObject.cloneAssetIntoScene(this.R.get.rabbitFace, this.scene)\n  const wolfFaceTexture = this.taskObject.cloneAssetIntoScene(this.R.get.wolfFace, this.scene)\n  const crossSheet = this.taskObject.cloneAssetIntoScene(this.R.get.crossSheet, this.scene)\n  wolfFaceTexture.hasAlpha = true\n  rabbitFaceTexture.hasAlpha = true\n  crossSheet.hasAlpha = true\n\n  let elements2D = this.stateManager.get('elements2D')\n\n  let crossSprite = this.R.get.cross_predict\n  let crossOpacity = 0\n  let loaderOpacity = 1\n  let loaderValue = 0\n  let wolfOpacity = 0\n  let rabbitOpacity = 0\n  let agentType = 'wolf'\n  let tiles = []\n  if (elements2D !== null) {\n    crossOpacity = elements2D.cross.opacity\n    crossSprite = elements2D.cross.spriteFrame\n    elements2D.cross.levelVisible = false\n\n    wolfOpacity = elements2D.wolfFaceSprite.opacity\n    elements2D.wolfFaceSprite.levelVisible = false\n\n    rabbitOpacity = elements2D.rabbitFaceSprite.opacity\n    elements2D.rabbitFaceSprite.levelVisible = false\n\n    agentType = elements2D.agentType\n\n\n    loaderOpacity = elements2D.loader.opacity\n    loaderValue = elements2D.loader.value\n    elements2D.loader.levelVisible = false\n\n    if ((elements2D.tiles) && (elements2D.tiles.length) && ('levelVisible' in elements2D.tiles[0])) {\n      const levelV = elements2D.tiles[0].levelVisible\n      this.stateManager.call('drawTiles')\n      elements2D.tiles.forEach((e) => { e.levelVisible = levelV })\n    }\n    tiles = elements2D.tiles\n  }\n\n  const cross = new BABYLON.Sprite2D(crossSheet, {\n    parent: this.scene.initialCanvas,\n    id: 'cross',\n    marginAlignment: 'v: center, h: center',\n    spriteSize: new BABYLON.Size(20, 20),\n    spriteLocation: new BABYLON.Vector2(0, 0),\n  })\n\n  cross.spriteFrame = crossSprite\n  cross.opacity = crossOpacity\n\n  /* --- Setup the loader --- */\n  const loader = new Loader({ parent: this.scene.initialCanvas, size: new BABYLON.Size(25, 25), border: BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0.7, 0.7, 0.7, 1)), borderThickness: 2 })\n  loader.value = loaderValue\n  loader.opacity = loaderOpacity\n  loader.margin.leftPixels = 1\n  loader.margin.rightPixels = 0\n  loader.margin.topPixels = 0\n  loader.margin.bottomPixels = 0.5\n\n\n  /* --- Create Sprites --- */\n  const minSize = Math.min(this.taskObject.renderSize.width, this.taskObject.renderSize.height)\n  const wolfFaceSprite = new BABYLON.Sprite2D(wolfFaceTexture, {\n    parent: this.scene.initialCanvas,\n    id: 'wolfFaceSprite',\n    origin: BABYLON.Vector2.Zero(),\n    marginAlignment: 'v: center, h: center',\n    zOrder: 1,\n    size: new BABYLON.Size(minSize * this.R.get.agent_scale, (minSize * this.R.get.agent_scale) / getAspectRatio(wolfFaceTexture)),\n  })\n\n  wolfFaceSprite.opacity = wolfOpacity\n\n  const rabbitFaceSprite = new BABYLON.Sprite2D(rabbitFaceTexture, {\n    parent: this.scene.initialCanvas,\n    id: 'rabbitFaceSprite',\n    origin: BABYLON.Vector2.Zero(),\n    marginAlignment: 'v: center, h: center',\n    size: new BABYLON.Size(minSize * this.R.get.agent_scale, (minSize * this.R.get.agent_scale) / getAspectRatio(rabbitFaceTexture)),\n    zOrder: 1,\n  })\n\n  rabbitFaceSprite.opacity = rabbitOpacity // TODO Make that levelVisible = false\n\n  const agent = agentType === 'wolf' ? wolfFaceSprite : rabbitFaceSprite\n\n  /* --- Set up the resize hook --- */\n  // scene.updateContentFrame = () => {\n  //   wolfFaceSprite.size = new BABYLON.Size(taskObject.renderSize.width * R.get.agent_scale, (taskObject.renderSize.width * R.get.agent_scale) / getAspectRatio(wolfFaceTexture))\n  //   rabbitFaceSprite.size = new BABYLON.Size(taskObject.renderSize.width * R.get.agent_scale, (taskObject.renderSize.width * R.get.agent_scale) / getAspectRatio(rabbitFaceTexture))\n  // }\n\n  /* --- Setup stateManager globals --- */\n  elements2D = {\n    canvas: this.scene.initialCanvas,\n    cross,\n    wolfFaceSprite,\n    rabbitFaceSprite,\n    agent,\n    agentType: 'wolf',\n    tiles,\n    loader,\n  }\n\n  this.stateManager.setGlobal('elements2D', elements2D)\n  this.stateManager.call('moveAgentToTile', { tile: this.stateManager.get('lastMove', 1) })\n}\n\n/* --- Setup stateManager functions --- */\nconst clearTiles = function () {\n  if (typeof this.taskObject === 'undefined') {\n    throw new Error('stateManager.clearTiles: this.taskObject is undefined')\n  }\n\n  const stateManager = this.stateManager\n\n  const elements2D = stateManager.get('elements2D')\n  const canvas = elements2D.canvas\n\n  if (elements2D.tiles.length > 0) {\n    const ntile = elements2D.tiles.length\n    for (let j = 0; j < ntile; j++) {\n      elements2D.tiles[j].dispose()\n    }\n    elements2D.tiles = []\n\n    for (let i = 0; i < ntile; i++) {\n      const tileOpacity = 0\n\n      elements2D.tiles[i] = new BABYLON.Rectangle2D({\n        parent: canvas,\n        id: `tile${i}`,\n        position: new BABYLON.Vector2(1, 1),\n        width: new BABYLON.Vector2(1, 1),\n        height: new BABYLON.Vector2(1, 1),\n        border: null,\n        opacity: 0,\n        borderThickness: null,\n        fill: BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0.8, 0.8, 0.8, tileOpacity)),\n        zOrder: 0.1,\n      })\n    }\n\n    debuglog('stateManager.clearTiles: resolved')\n  } else {\n    debugWarn('stateManager.clearTiles: resolved - no tile to clear')\n  }\n\n  return (elements2D.tiles)\n}\n\nconst addButton = function (options = null) {\n  if (typeof this.taskObject === 'undefined') {\n    throw new Error('stateManager.addButton: this.taskObject is undefined')\n  }\n\n  const stateManager = this.stateManager\n  const canvas = stateManager.get('elements2D').canvas\n\n  const baseOptions = {\n    id: `button${stateManager.timeInMs}`,\n    text: 'text',\n    x: 50,\n    y: 50,\n    width: 100,\n    height: 50,\n    fill: BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0.8, 0.8, 0.8, 1)),\n    clickEventData: null,\n    fontName: '30pt Arial',\n    baseOpacity: 0.8,\n    hoverOpacity: 1,\n    zOrder: -0.5,\n    marginAlignment: null,\n    fontSignedDistanceField: true,\n    margin: {},\n    padding: {},\n    parent: canvas,\n  }\n\n  baseOptions.margin.leftPixels = 0\n  baseOptions.margin.rightPixels = 0\n  baseOptions.margin.topPixels = 0\n  baseOptions.margin.bottomPixels = 0\n  baseOptions.padding.leftPixels = 0\n  baseOptions.padding.rightPixels = 0\n  baseOptions.padding.topPixels = 0\n  baseOptions.padding.bottomPixels = 0\n  baseOptions.margin = _.extend(baseOptions.margin, options.margin)\n  baseOptions.padding = _.extend(baseOptions.padding, options.padding)\n  options.margin = baseOptions.margin\n  options.padding = baseOptions.padding\n\n  // extend options\n  options = _.extend(baseOptions, options)\n\n  let buttonOptions = {}\n  let margin = {}\n  let padding = {}\n  if (options.marginAlignment === null) {\n    buttonOptions = {\n      parent: options.parent,\n      id: options.id,\n      x: options.x,\n      y: options.y,\n      width: options.width,\n      height: options.height,\n      fill: options.fill,\n      zOrder: options.zOrder,\n      roundRadius: 0,\n      children: [new BABYLON.Text2D(options.text, {\n        fontName: options.fontName,\n        marginVAlignment: 'v: center',\n        fontSignedDistanceField: options.fontSignedDistanceField,\n        marginHAlignment: 3,\n      })],\n    }\n  } else {\n    buttonOptions = {\n      parent: options.parent,\n      id: options.id,\n      width: options.width,\n      height: options.height,\n      fill: options.fill,\n      zOrder: options.zOrder,\n      marginAlignment: options.marginAlignment,\n      roundRadius: 0,\n      children: [new BABYLON.Text2D(options.text, {\n        fontName: options.fontName,\n        marginVAlignment: 'v: center',\n        fontSignedDistanceField: options.fontSignedDistanceField,\n        marginHAlignment: 3,\n      })],\n    }\n    margin = options.margin\n    padding = options.padding\n  }\n\n  // create button and add to canvas\n  const buttonRect = new BABYLON.Rectangle2D(buttonOptions)\n\n  buttonRect.opacity = options.baseOpacity\n\n  if (margin !== null) {\n    buttonRect.margin.rightPixels = options.margin.rightPixels // TODO make that a specific function in the framework\n    buttonRect.margin.leftPixels = options.margin.leftPixels\n    buttonRect.margin.topPixels = options.margin.topPixels\n    buttonRect.margin.bottomPixels = options.margin.bottomPixels\n  }\n\n  if (padding !== null) {\n    buttonRect.padding.rightPixels = padding.rightPixels\n    buttonRect.padding.leftPixels = padding.leftPixels\n    buttonRect.padding.topPixels = padding.topPixels\n    buttonRect.padding.bottomPixels = padding.bottomPixels\n  }\n\n  // Add an observable for hovering\n  buttonRect.pointerEventObservable.add(() => {\n    buttonRect.opacity = options.hoverOpacity\n  }, BABYLON.PrimitivePointerInfo.PointerOver)\n\n  buttonRect.pointerEventObservable.add(() => {\n    buttonRect.opacity = options.baseOpacity\n  }, BABYLON.PrimitivePointerInfo.PointerOut)\n\n  // Add an observable for clicking\n  if ((options.clickEventData !== null) && (options.clickEventData.constructor === EventData)) {\n    buttonRect.pointerEventObservable.add(() => {\n      options.clickEventData.happenedAt = stateManager.timeInMs\n      options.clickEventData.data.button = buttonRect.id\n\n      stateManager.addEvent(options.clickEventData)\n    }, BABYLON.PrimitivePointerInfo.PointerUp)\n  }\n\n  return (buttonRect)\n}\n\nconst disposeOfButtons = function () {\n  const elements2D = this.stateManager.get('elements2D')\n\n  if (typeof elements2D.levelButtons !== 'undefined') {\n    if (elements2D.levelButtons.constructor === Array) {\n      for (let i = 0; i < elements2D.levelButtons.length; i++) {\n        elements2D.levelButtons[i].dispose()\n      }\n      elements2D.levelButtons = []\n    }\n  }\n\n  return ('disposeOfButtons: buttons disposed.')\n}\n\nconst getTileSize = function (type = 'normal') { // eslint-disable-line\n  if (typeof this.taskObject === 'undefined') {\n    return ('stateManager.drawTiles: this.taskObject is undefined')\n  }\n\n  const taskObject = this.taskObject\n  const R = this.R\n\n  const greaterLength = Math.min((taskObject.renderSize.width * R.get.agent_scale) * R.get.tile_scale, (taskObject.renderSize.height * R.get.agent_scale) * R.get.tile_scale)\n\n  return (new BABYLON.Vector2(greaterLength, greaterLength))\n  // TODO ?\n  // if (type == \"normal\") {\n  //\n  // } else {\n  //\n  // }\n}\n\nconst setMargins = function (prim, margin) {\n  prim.margin.rightPixels = margin.rightPixels // TODO make that a specific function in the framework\n  prim.margin.leftPixels = margin.leftPixels\n  prim.margin.topPixels = margin.topPixels\n  prim.margin.bottomPixels = margin.bottomPixels\n}\n\nconst drawTiles = function (options = null) {\n  if (typeof this.taskObject === 'undefined') {\n    return ('stateManager.drawTiles: this.taskObject is undefined')\n  }\n\n  const baseOptions = {\n    hightlight: -1,\n    type: 'learning',\n    withKeys: false,\n    fontName: '14pt Verdana',\n  }\n\n  options = _.extend(baseOptions, options)\n\n\n  const stateManager = this.stateManager\n  const R = this.R\n\n  const elements2D = stateManager.get('elements2D')\n  const canvas = elements2D.canvas\n\n  // stateManager.call('clearTiles')\n\n  /* --- Show cross --- */\n  elements2D.cross.opacity = R.get.cross_opacity\n\n  /* --- Set default infobox value --- */\n  if ((!elements2D.keysInfoboxText) || (!elements2D.keysInfobox)) {\n    elements2D.keysInfobox = []\n    elements2D.keysInfoboxText = []\n  }\n\n\n  /* --- Build Tiles --- */\n  const tilePositions = stateManager.call('getTilePositions')\n  const normalSize = stateManager.call('getTileSize')\n  const tileMargins = stateManager.call('getTileMargins')\n\n  // const infoboxMargins = null\n  if ((!hasConstructor(String, options.withKeys)) || (options.withKeys.length !== 4)) {\n    options.withKeys = null\n  } else {\n    // infoboxMargins = _.clone(tileMargins)\n    // infoboxMargins[0].rightPixels += normalSize.x/2\n    // infoboxMargins[0].bottomPixels += normalSize.y/2\n    //\n    // infoboxMargins[1].left += normalSize.x/2\n    // infoboxMargins[1].bottomPixels += normalSize.y/2\n    //\n    // infoboxMargins[2].left += normalSize.x/2\n    // infoboxMargins[2].topPixels -= normalSize.y/2\n    //\n    // infoboxMargins[3].right += normalSize.x/2\n    // infoboxMargins[3].topPixels -= normalSize.y/2\n  }\n\n  const fullOpacity = R.get.tile_fullOpacity\n  const lowOpacity = R.get.tile_lowOpacity\n  // var highlightedSize = normalSize.scale(1.3);\n\n  const fontSuperSample = false\n  const fontSignedDistanceField = true\n\n  let tileOpacity = lowOpacity\n\n  // const predictionColor = [0.9, 0.7, 0, tileOpacity]\n  const normalColor = [0.8, 0.8, 0.8, 1]\n\n  for (let i = 0; i < 4; i++) {\n    if (elements2D.tiles.length <= i) {\n      debuglog(`loop${options.type}`)\n      tileOpacity = lowOpacity\n      if (options.hightlight === i) {\n        tileOpacity = fullOpacity\n      }\n      console.warn('NORMAL SIZE:', normalSize)\n      const normalTile = new BABYLON.Rectangle2D({\n        parent: canvas,\n        id: `tile${i}`,\n        marginAlignment: 'h: center, v: center',\n        // position: tilePositions[i].subtract(normalSize.scale(0.5)),\n        width: normalSize.x,\n        height: normalSize.y,\n        border: BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(...normalColor)),\n        borderThickness: 2,\n        fill: null, // BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0.8, 0.8, 0.8, tileOpacity)),\n        zOrder: 0.1,\n      })\n      elements2D.tiles[i] = normalTile\n    } else {\n      elements2D.tiles[i].width = normalSize.x\n      elements2D.tiles[i].height = normalSize.y\n    }\n\n    setMargins(elements2D.tiles[i], tileMargins[i])\n\n    if ((hasConstructor(BABYLON.Rectangle2D, elements2D.keysInfobox[i])) && (!hasConstructor(String, options.withKeys))) {\n      elements2D.keysInfobox[i].levelVisible = false\n    } else if ((hasConstructor(BABYLON.Rectangle2D, elements2D.keysInfobox[i])) && (hasConstructor(String, options.withKeys))) {\n      if (hasConstructor(BABYLON.Text2D, elements2D.keysInfoboxText[i])) {\n        elements2D.keysInfoboxText[i] = options.withKeys[i]\n      }\n      elements2D.keysInfobox[i].levelVisible = true\n    } else if ((!hasConstructor(BABYLON.Rectangle2D, elements2D.keysInfobox[i])) && (hasConstructor(String, options.withKeys))) {\n      elements2D.keysInfobox[i] = new BABYLON.Rectangle2D({\n        parent: elements2D.tiles[i],\n        id: `keyInfoBackground${i}`,\n        width: 50,\n        height: 50,\n        marginAlignment: 'h: center, v: top',\n        fill: BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0.64, 0.64, 0.64, 0.5)),\n      })\n\n      elements2D.keysInfoboxText[i] = new BABYLON.Text2D(options.withKeys[i], {\n        parent: elements2D.keysInfobox[i],\n        fontName: options.fontName,\n        marginAlignment: 'h: center, v: center',\n        fontSuperSample,\n        fontSignedDistanceField,\n      })\n    }\n\n\n    // switch (options.type) {\n    //   case 'learning':\n    //     elements2D.tiles[i] = normalTile\n    //     break\n    //   case 'prediction':\n    //     debuglog('prediction')\n    //     elements2D.tiles[i] = new BABYLON.Rectangle2D({\n    //       parent: canvas,\n    //       id: `tile${i}`,\n    //       position: tilePositions[i].subtract(normalSize.scale(0.5)),\n    //       width: normalSize.x,\n    //       height: normalSize.y,\n    //       border: BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(...predictionColor)),\n    //       borderThickness: 10,\n    //       fill: null, // options.hightlight === i ? BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0.8, 0.8, 0.8, tileOpacity)) : null,\n    //       zOrder: 0.1,\n    //     })\n    //     break\n    //   case 'noAnswer':\n    //     debuglog('drawTiles: noAnswer')\n    //     elements2D.tiles[i] = new BABYLON.Rectangle2D({\n    //       parent: canvas,\n    //       id: `tile${i}`,\n    //       position: tilePositions[i].subtract(normalSize.scale(0.5)),\n    //       width: normalSize.x,\n    //       height: normalSize.y,\n    //       border: BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0.9, 0, 0, tileOpacity)),\n    //       borderThickness: 10,\n    //       fill: BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0.3, 0, 0, tileOpacity)),\n    //       zOrder: 0.1,\n    //     })\n    //     break\n    //   default:\n    //     throw new Error(`stateManager.drawTiles: options.type ${options.type} is not a valid type.`)\n    // }\n  }\n\n  return (elements2D.tiles)\n}\n\n\nconst getTileMargins = function () {\n  const stateManager = this.stateManager\n  const R = this.R\n\n  const canvas = (stateManager.get('elements2D')).canvas\n\n  const tileSize = stateManager.call('getTileSize')\n\n  const offset = R.get.tile_offset\n\n  if (typeof canvas === 'undefined') {\n    throw new Error('StateManager.getTilePositions: canvas is undefined.')\n  }\n\n  const margins = [\n    { leftPixels: 0, topPixels: 0, rightPixels: ((tileSize.x / 2) + offset), bottomPixels: (tileSize.y / 2) + offset }, // top left 0\n    { rightPixels: 0, topPixels: 0, leftPixels: ((tileSize.x / 2) + offset), bottomPixels: (tileSize.y / 2) + offset }, // top right 1\n    { rightPixels: 0, bottomPixels: 0, leftPixels: ((tileSize.x / 2) + offset), topPixels: (tileSize.y / 2) + offset }, // bottom right 2\n    { leftPixels: 0, bottomPixels: 0, rightPixels: ((tileSize.x / 2) + offset), topPixels: (tileSize.y / 2) + offset }, // bottom left 3\n  ]\n\n  return margins\n}\n\nconst getTilePositions = function () {\n  if (typeof this.taskObject === 'undefined') {\n    throw new Error('stateManager.getTilePositions: this.taskObject is undefined')\n  }\n  const stateManager = this.stateManager\n  const R = this.R\n\n  const canvas = (stateManager.get('elements2D')).canvas\n\n  const tileSize = stateManager.call('getTileSize')\n  const center = {\n    w: canvas.width / 2,\n    h: canvas.height / 2,\n  }\n  const offset = R.get.tile_offset\n\n  if (typeof canvas === 'undefined') {\n    throw new Error('StateManager.getTilePositions: canvas is undefined.')\n  }\n\n  const positions = [\n    new BABYLON.Vector2(center.w - ((tileSize.x / 2) + offset), center.h + ((tileSize.y / 2) + offset)), // one is top left\n    new BABYLON.Vector2(center.w + ((tileSize.x / 2) + offset), center.h + ((tileSize.y / 2) + offset)),\n    new BABYLON.Vector2(center.w + ((tileSize.x / 2) + offset), center.h - ((tileSize.y / 2) + offset)),\n    new BABYLON.Vector2(center.w - ((tileSize.x / 2) + offset), center.h - ((tileSize.y / 2) + offset)), // 4 is bottom left\n\n  ]\n\n  return (positions)\n}\n\nconst highlightPosition = function (options = null) {\n  if (typeof this.stateManager === 'undefined') {\n    throw new Error('stateManager.highlightPosition: this.stateManager is undefined')\n  }\n\n  if (typeof options.position === 'undefined') {\n    throw new Error('stateManager.highlightPosition: options.position is undefined')\n  }\n\n  return (this.stateManager.promise('drawTiles', {\n    hightlight: options.position,\n    type: (typeof options.type !== 'undefined') ?\n      options.type : 'prediction',\n  }))\n}\n\nconst drawPredictionTiles = function ({ withKeys = false } = { withKeys: false }) {\n  if (typeof this.taskObject === 'undefined') {\n    throw new Error('stateManager.drawPredictionTiles: this.taskObject is undefined')\n  } else {\n    return (this.stateManager.promise('drawTiles', {\n      type: 'prediction',\n      withKeys,\n    }))\n  }\n}\n\nconst setAgent = function (options = null) {\n  if (typeof this.taskObject === 'undefined') {\n    throw new Error('stateManager.drawPredictionTiles: this.taskObject is undefined')\n  }\n\n  if (typeof options.agent === 'undefined') {\n    throw new Error('stateManager.setAgent: options.agent is undefined')\n  }\n\n  const stateManager = this.stateManager\n\n  const elements2D = stateManager.get('elements2D')\n  // const currentPosition = elements2D.agent.position\n  const currentMargin = elements2D.agent.margin\n\n  elements2D.agent.opacity = 0\n  switch (options.agent) {\n    case 'wolf':\n      elements2D.agent = elements2D.wolfFaceSprite\n      break\n    case 'rabbit':\n      elements2D.agent = elements2D.rabbitFaceSprite\n      break\n    default:\n      throw new Error(`stateManager.setAgent: options.agent ${options.agent} is of invalid type.`)\n  }\n\n  elements2D.agentType = options.agent\n  // elements2D.agent.position = currentPosition\n  elements2D.agent.margin = currentMargin\n\n  return (elements2D.tiles[options.positions])\n}\n\nconst getAgentPositionOnTile = function (options = null) {\n  if (typeof this.stateManager === 'undefined') {\n    throw new Error('stateManager.drawPredictionTiles: stateManager is undefined')\n  }\n\n  if (typeof options.tile === 'undefined') {\n    throw new Error('stateManager.setAgent: tile is undefined')\n  }\n\n  const stateManager = this.stateManager\n\n  const elements2D = stateManager.get('elements2D')\n  const agent = elements2D.agent\n\n  const scaledAgentSize = (new BABYLON.Vector2(agent.size.width, agent.size.height)).scaleInPlace(agent.scale)\n\n  const tilePositions = stateManager.call('getTilePositions')\n\n  const newPosition = tilePositions[options.tile].subtract(scaledAgentSize.scale(0.5))\n\n  return newPosition\n}\n\nconst getAgentMarginsOnTile = function (options = null) {\n  if (typeof this.stateManager === 'undefined') {\n    throw new Error('stateManager.drawPredictionTiles: stateManager is undefined')\n  }\n\n  if (typeof options.tile === 'undefined') {\n    throw new Error('stateManager.setAgent: tile is undefined')\n  }\n\n  const stateManager = this.stateManager\n\n  const elements2D = stateManager.get('elements2D')\n  const agent = elements2D.agent\n\n  // const scaledAgentSize = (new BABYLON.Vector2(agent.size.width, agent.size.height)).scaleInPlace(agent.scale)\n\n  const offsetH = 0// no need ... it is based on the center of the sprite... (stateManager.call('getTileSize').y - agent.size.height) / 4\n  const offsetW = 0// (stateManager.call('getTileSize').x - agent.size.width) / 4\n\n  const tileMargins = stateManager.call('getTileMargins')[options.tile]\n\n  const newMargins = {\n    leftPixels: (tileMargins.leftPixels === 0) ? 0 : tileMargins.leftPixels + offsetW,\n    rightPixels: (tileMargins.rightPixels === 0) ? 0 : tileMargins.rightPixels + offsetW,\n    topPixels: (tileMargins.topPixels === 0) ? 0 : tileMargins.topPixels + offsetH,\n    bottomPixels: (tileMargins.bottomPixels === 0) ? 0 : tileMargins.bottomPixels + offsetH,\n  }\n\n  // const newPosition = tilePositions[options.tile].subtract(scaledAgentSize.scale(0.5))\n\n  return newMargins\n}\n\nconst moveAgentToTile = function (options = null) {\n  if (typeof this.stateManager === 'undefined') {\n    throw new Error('stateManager.drawPredictionTiles: stateManager is undefined')\n  }\n\n  if (typeof options.tile === 'undefined') {\n    throw new Error('stateManager.setAgent: tile is undefined')\n  }\n  const elements2D = this.stateManager.get('elements2D')\n  const agent = elements2D.agent\n  // agent.position = this.stateManager.call('getAgentPositionOnTile', options)\n  agent.margin = _.extend(agent.margin, this.stateManager.call('getAgentMarginsOnTile', options))\n  this.stateManager.set('lastMove', options.tile)\n\n  if (typeof options.opacity !== 'undefined') {\n    this.stateManager.call('setAgentOpacity', {\n      opacity: options.opacity,\n    })\n  }\n\n  return (agent)\n}\n\nconst animateAgentToTile = function (options = null) {\n  if (typeof this.stateManager === 'undefined') {\n    throw new Error('stateManager.drawPredictionTiles: stateManager is undefined')\n  }\n\n  if (typeof options.tile === 'undefined') {\n    throw new Error('stateManager.setAgent: tile is undefined')\n  }\n  const elements2D = this.stateManager.get('elements2D')\n  const agent = elements2D.agent\n  const newPosition = this.stateManager.call('getAgentPositionOnTile', options)\n\n  if (typeof options.opacity !== 'undefined') {\n    this.stateManager.call('setAgentOpacity', {\n      opacity: options.opacity,\n    })\n  }\n  // TODO Do not dispose of the tiles, just play on opacity. TODO fix the animations\n\n  const deferred = new Deferred()\n  /* --- Create an animation that lasts 100ms of the target sliding to new position --- */\n  const animation = new BABYLON.Animation('slideToPosition', 'position', 100, BABYLON.Animation.ANIMATIONTYPE_VECTOR2, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT)\n\n  const keys = []\n  keys.push({\n    frame: 0,\n    value: agent.position,\n  })\n  keys.push({\n    frame: 10,\n    value: newPosition,\n  })\n\n  animation.setKeys(keys)\n  const end = new BABYLON.AnimationEvent(10, () => {\n    deferred.resolve()\n  }, true)\n\n  animation.addEvent(end)\n  agent.animations.push(animation)\n  this.scene.beginAnimation(agent, 0, 11)\n  return deferred.promise\n  // TODO create a this.animate(object, property, keys, loop)\n}\n\nconst setAgentOpacity = function (options = null) {\n  if (typeof this.stateManager === 'undefined') {\n    throw new Error('stateManager.drawPredictionTiles: this.stateManager is undefined')\n  }\n\n  if (typeof options.opacity === 'undefined') {\n    throw new Error('stateManager.setAgent: options.opacity is undefined')\n  }\n\n  const elements2D = this.stateManager.get('elements2D')\n  const agent = elements2D.agent\n\n  agent.opacity = options.opacity\n\n  return (agent)\n}\n\nconst setBlackScreen = function (options = null) {\n  const baseOptions = { // TODO create a defaultOptions()\n    on: true,\n  }\n\n  options = _.extend(baseOptions, options)\n  const elements2D = this.stateManager.getGlobal('elements2D')\n  const canvas = elements2D.canvas\n\n  if (!_.has(elements2D, 'blackScreen')) {\n    const blackScreen = new BABYLON.Rectangle2D({\n      parent: canvas,\n      id: 'blackScreen',\n      position: new BABYLON.Vector2(0, 0),\n      width: canvas.size.width,\n      height: canvas.size.height,\n      zOrder: 0,\n    })\n\n    elements2D.blackScreen = blackScreen\n  }\n\n  if (options.on) {\n    elements2D.blackScreen.opacity = 1\n  } else {\n    elements2D.blackScreen.opacity = 0\n  }\n}\n\nconst hideAll = function () {\n  const stateManager = this.stateManager\n\n  const elements2D = stateManager.get('elements2D')\n\n  elements2D.agent.levelVisible = false\n  elements2D.cross.levelVisible = false\n  elements2D.loader.levelVisible = false\n  elements2D.tiles.forEach((t) => { t.levelVisible = false })\n}\n\nconst showAll = function () {\n  const stateManager = this.stateManager\n\n  const elements2D = stateManager.get('elements2D')\n\n  elements2D.agent.levelVisible = true\n  elements2D.cross.levelVisible = true\n  elements2D.loader.levelVisible = true\n  elements2D.tiles.forEach((t) => { t.levelVisible = true })\n}\n\nconst checkIdleAndConnection = function ({ deferred = new Deferred(), returnToState = null } = { deferred: new Deferred(), returnToState: null }) {\n  const stateManager = this.stateManager\n  const R = this.R\n  const dataManager = this.dataManager\n  const connection = this.connection\n  returnToState = returnToState || stateManager.currentStateKey\n\n  dataManager.query('getLastInteraction', null, connection, deferred)\n  return deferred.promise.then((r) => {\n    const delay = stateManager.timeInMs - r.lastInteraction\n    const delayMin = delay / (60000)\n    if (delay > 30 * 60 * 1000) {\n      // TODO idle for too long\n      debugWarn('running.goToNextPosition: idle for too long')\n      stateManager.set('endReason', `You were idle for more than 30 min: ${delayMin} min`)\n      stateManager.goToState(R.get.states_end)\n    } else if (stateManager.currentStateKey !== returnToState) { stateManager.goToState(returnToState) }\n  })\n  .catch(() => {\n    // TODO lost connection\n    debugWarn('running.goToNextPosition: lost connection')\n\n    if (stateManager.currentStateKey !== R.get.states_idle) {\n      stateManager.call('hideAll')\n      stateManager.onNext(this.R.get.events_unfrozen, () => { stateManager.call('showAll') })\n      this.state.freeze()\n      stateManager.goToState(R.get.states_idle)\n    }\n\n    this.taskObject.modal({ type: 'centralLarge', title: R.get.lostConnectionTitle, content: R.get.lostConnectionContent })\n    .then(() => delay(50)).then(() => { stateManager.call('checkIdleAndConnection', { returnToState }) })\n  })\n}\n\nexport { redrawAssets,\n  drawTiles,\n  addButton,\n  disposeOfButtons,\n  clearTiles,\n  getTilePositions,\n  getTileMargins,\n  getTileSize,\n  highlightPosition,\n  drawPredictionTiles,\n  getAgentMarginsOnTile,\n  setAgent,\n  setMargins,\n  moveAgentToTile,\n  animateAgentToTile,\n  getAgentPositionOnTile,\n  setAgentOpacity,\n  setBlackScreen,\n  hideAll,\n  showAll,\n  checkIdleAndConnection }\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/scenes/main/functions/globalFunctions.js","import {\n  EventData,\n  Array, // eslint-disable-line\n  String, // eslint-disable-line\n  delay,\n  debuglog,\n  debugWarn,\n} from 'experiment-js'\n\nconst intro = {\n  title: { en: 'Catch the wolf' },\n  content: {\n    en: `\n    <h5>Welcome ! 👋🏽 😄 </h5>\n    The members of Bavelier lab extend a warm welcome to you from Geneva! We are very grateful that you took interest in our experiment !<br>\n    This short tutorial will go over the mechanics of the task to make sure all is clear before you start !<br><br>\n    <h5>General description</h5>\n    The goal of the task is to look at how a wolf moves across four positions of the screen,\n    and predict where it is going to appear next using the keyboard.<br>\n    Each trial will be composed of an observation phase and most of the times a prediction phase.<br>\n    You will go through <b>four levels</b> of increasing difficulty.<br>\n    The task will last between ⏱<b>1 and 2 hours</b>⏱  depending on the breaks you will take.<br><br>`,\n  },\n}\n\n\nconst disclaimer = {\n  title: { en: '⚠️ IMPORTANT ⚠️ ' },\n  content: {\n    en: `<b>After you complete the four levels of the task you will receive your HIT code.</b>\n  Some behavior will lead to a premature stop of the task without possibility to pass it again:\n  <ul>\n    <li>Taking breaks over the allowed time limit: no breaks during levels and maximum 15min between levels</li>\n    <li>If you do not answer more than 5 times in a row or if the window is out of focus the game will pause for maximum 30sec per level before stopping</li>\n    <li>Loosing connection to the server for more than 15min*</li>\n    <li>Not answering on more than 20% of trials</li>\n    <li>Cheating or obvious behavior showing lack of engagement</li>\n  </ul>\n  A countdown will appear before the task is stopped to warn you (* except if you lose connection).<br>\n  If you accept those conditions please do proceed. ✌🏽😉 `,\n  },\n}\n\nconst trialInstruction = {\n  title: { en: 'Observation and Prediction' },\n  content: { en: `<h5>Observation phase</h5>\n    When a trial starts you will first observe the position of the wolf for a split second before he disapears,\n    then there is a short delay when you do not need to press any key.\n    During this phase the center square will be full:\n    <br>\n      <center><img src='./assets/sprites/cross/fullSquare.svg'></center>\n    <br><br>\n    <h5>Prediction phase</h5>\n    Then there will be a sudden modification of the cross at the center of\n    the screen, with dotted border:\n    <br>\n      <center><img src='./assets/sprites/cross/predictionSquare.svg'></center>\n    <br>\n\n    This modification marks the begining of the prediction phase. As soon as you see this open square you will have to predict\n    as fast as you can the next position of the wolf using the keyboard. After you have predicted, you will wait for a short while\n    until the wolf appears to his new position. Failling to answer 5 times in a row will pause the task.\n    <br>` },\n}\n\nconst fourLevels = {\n  title: { en: 'Four levels' },\n  content: { en: `\n    <h5>The levels</h5>\n    There will be <b>four levels</b> in this task, the first three levels are relatively short and will last around 10min each.\n    The fourth level is supposed to be passed in an MRI and will be slower, it will last for around 30min.\n    <br><br>\n    <h5>Breaks</h5>\n    You cannot pause the game during levels and if you open another page/program, or if you do not respond for too long the game will stop.\n    If this break is above 30sec total on a level the experiment will stop. <br>\n    Between levels you can take a break. But as it is the case in all experiments involving learning, long pauses may have a strong\n    and uncontrolled impact you ability to learn and affect our results in unpredictable ways. That is why we will allow for breaks no longer than 15 minutes.<br>\n    To complete the tasks il will take you between 1 and 2 hours depending on the length of the break you will take<br><br>` },\n}\n\nconst progressInstruction = {\n  title: { en: 'Progress' },\n  content: { en: `\n    During each level you will be able to evaluate your progress through the progress indicator around the central square,\n    as you progress the square will gradually get fuller:\n    <br><br>\n      <center><img width=\"20\" height=\"20\" src='./assets/sprites/cross/predictionSquareWithLoader.gif'></center>\n    <br>` },\n}\n\nconst keyboardInstruction = {\n  title: { en: 'Keyboard keys' },\n  content: { en: `To complete this task you will use the keyboard only.\n    <br>\n    <center><img src=\"./assets/sprites/keyboard/fullsize_color_legend.png\"></center>\n    <br>\n    The keys you will be using are :\n    <ul>\n      <li>D - to pick the top left position</li>\n      <li>C - to pick the bottom left position</li>\n      <li>K - to pick the top right position</li>\n      <li>M - to pick the bottom right position</li>\n      <li>Space bar - to pause and reach the menu</li>\n    </ul>\n    ` },\n}\n\nconst introToTryout = {\n  title: { en: \"Let's try!\" },\n  content: { en: `Ok. You will now try a short sequence of trials so you can familiarize yourself with the task.\n        <br>\n        Good luck, and thank you for your participation ! 👍🏽\n        <br><br>\n        The Bavelier Lab team\n        ` },\n}\n\nconst correctPrediction = {\n  title: { en: 'Correct !' },\n  content: { en: `Well done, this prediction was correct ! <br>\n    No signal will explicitely tell you wether you were right or wrong. But if you see the wolf appear where you predicted,\n    it will count as a correct trial.\n        ` },\n}\n\nconst incorrectPrediction = {\n  title: { en: 'Incorrect !' },\n  content: { en: `Well done, this prediction was correct ! <br>\n    No signal will explicitely tell you wether you were right or wrong. But if you see the wolf appear where you predicted,\n    it will count as a correct trial.\n        ` },\n}\n\nconst askContinue = {\n  title: { en: 'End tutrial ?' },\n  content: { en: `Do you feel confident you understand the task ? <br>\n    If not you can restart the tutorial by clicking here: <button class=\"btn btn-secondary dragbox-button smartmodal-closebutton\" onClick=\"window.taskObject.context.stateManager.newEvent('restartTutorial')\">Restart tutorial</button>\n    <br><br>\n      Please be aware that too much missing values (when you do not respond) makes our data unusable, cheating risk altering our results and might make us draw wrong conclusions.<br>\n      For this reason at the end of the task an algorithm will check the validity of the data.\n      If the data is not valid you will not receive the bonus payment for adequate completion and we will refrain from using your service in future studies.\n\n      <br><br>\n      If you feel confident, close the window to start the task !\n        ` },\n}\n\nconst fmriIntro = {\n  title: { en: 'Last Level' },\n  content: { en: `\n      <h5>The next part will be slower</h5>\n      Thank you and congratulations for finishing the first three parts ! <br>\n      The next part is adapted for a future study in the lab where we will have to use an MRI machine to\n      image the brain of our subjects as they perform the task. Because of this, this next part will be slower.<br>\n      It is not a bug, and the goal remains the same: predict the next position correctly ! <br>\n      Because it is slower, the task is segmented in <b>three \"blocks\"</b> of 50 trials, between which you can take a short break of max 5 minutes.<br>\n      <br>\n      <h5>You will sometime have to catch a rabbit !</h5>\n      The rabbit does not behave like the wolf, it will be your job to find how to best predict its next position.<br>\n      You will go through a short tutorial so you can familliarize yourself with the rabbit.<br>\n      The rabbit will appear in the second block and you will have to predict its movement for 50 trials.` },\n}\n\nconst fmriDelay = {\n  title: { en: 'New feature: delays' },\n  content: { en: `A new change is that you will not predict right after observing the new position of the agent (wolf or rabbit).<br>\n    The agent will appear for a short time, then disapear. You will have to wait a short delay before predicting. <br>\n    As before the signal for you to hit the keyboard will be given by the central cross change to an open square:\n    <br>\n      <center><img src='./assets/sprites/cross/predictionSquare.svg'></center>\n    <br>\n    ` },\n}\n\nconst lockedCross = {\n  title: { en: 'New feature: Locked state' },\n  content: { en: `You will have a certain amount of time to predict, like in previous state. But in this level after the prediction time is over, you will get into a short \"locked state\".\n  <br>During this state you will not be able to predict and you will have to wait for the next position of the agent.<br>\n    In locked mode the center cross will be a full square if you did not predict:\n    <br>\n      <center><img src='./assets/sprites/cross/fullSquare.svg'></center>\n    <br><br>\n    Or will be locked in the position you picked, here it is locked top-left:\n    <br>\n      <center><img src='./assets/sprites/cross/lockedTopLeft.svg'></center>\n    <br><br>` },\n}\n\nconst catchRabbit = {\n  title: { en: 'New feature: Trials without prediction' },\n  content: { en: 'On some of the trials you will not be asked to answer. The central square will stay with continuous borders, and the wolf or the rabbit will just move without any prediction phase.' },\n}\n\nconst askfMRIContinue = {\n  title: { en: 'End tutorial ?' },\n  content: { en: `Do you feel confident you understand this new part of the task ? <br>\n    If not you can restard the tutorial by clicking here: <button class=\"btn btn-secondary dragbox-button smartmodal-closebutton\" onClick=\"window.taskObject.context.stateManager.newEvent('restartTutorial')\">Restart tutorial</button>\n    <br><br>\n      If you feel confident, close the window to start the task !` },\n}\n\nconst noResponse = {\n  title: { en: 'Are you still here ??' },\n  content: { en: `You did not answer for a while, the game was paused to make sure you were still paying attention.<br>\n    Too much missing values makes our data unusable, cheating risk altering our results and might make us draw wrong conclusions.<br>\n    For this reason at the end of the task an algorithm will check the validity of the data. If the data is not valid you will not receive the bonus payment for adequate completion and we will refrain from using your service in future studies.\n        ` },\n}\n\n\nconst level2Start = {\n  title: { en: 'Start level 2 !' },\n  content: { en: `Congratulations on finishing level 1 ! <br>\n    You will now start level 2, it is a bit harder ! ` },\n}\n\nconst level3Start = {\n  title: { en: 'Start level 3 !' },\n  content: { en: `Congratulations on finishing level 1 and level 2 ! <br>\n    You will now start level 3. This level is, again, a little harder.<br>\n    <br>\n    Good luck ! ` },\n}\n\nconst tutorials = { disclaimer,\n  intro,\n  trialInstruction,\n  keyboardInstruction,\n  introToTryout,\n  correctPrediction,\n  incorrectPrediction,\n  askContinue,\n  fmriIntro,\n  askfMRIContinue,\n  level2Start,\n  level3Start,\n  noResponse,\n  progressInstruction,\n  fourLevels,\n  catchRabbit,\n  fmriDelay,\n  lockedCross }\n\nconst pageOrderTutorialOne = ['intro', 'disclaimer', 'trialInstruction', 'fourLevels', 'progressInstruction', 'keyboardInstruction', 'introToTryout']\nconst pageOrderTutorialFMRI = ['fmriIntro', 'catchRabbit', 'fmriDelay', 'lockedCross']\n\nconst awakeTutorial = function () {\n  const currentTutorial = this.stateManager.get('currentTutorial', 1)\n\n  const pageOrder = currentTutorial === 1 ? pageOrderTutorialOne : pageOrderTutorialFMRI\n\n  this.stateManager.set('currentPage', pageOrder[0])\n\n  const showIntro = new EventData(this.R.get.events_showModal, this.stateManager.timeInMs + 100, { page: pageOrder[0] })\n  this.stateManager.addTimeTriggerEvent(showIntro)\n}\n\nconst showModal = function ({ data: { page = 'intro' } }) {\n  if (this.taskObject.currentModal !== null) {\n    try {\n      this.taskObject.currentModal.modalBox.destroy() // TODO think about wether callback or not etc.\n    } catch (e) {\n      debugWarn(e)\n    }\n  }\n\n  delay(50).then(() => { // TODO Check why you have to do that ...\n    if (tutorials.hasOwnProperty(page)) {\n      const tutorial = tutorials[page]\n      const event = new EventData(this.R.get.events_modalDismissed, { page })\n      this.taskObject.modal({ type: 'centralLarge', title: tutorial.title.en, content: tutorial.content.en, event })\n    }\n  })\n}\n\nconst showNextPage = function ({ data: { page: currentPage = this.stateManager.get('currentPage', 'intro') } }) {\n  const currentTutorial = this.stateManager.get('currentTutorial', 1)\n  const pageOrder = currentTutorial === 1 ? pageOrderTutorialOne : pageOrderTutorialFMRI\n  const R = this.R\n\n  const currentIndex = pageOrder.indexOf(currentPage)\n  if (currentIndex !== -1) {\n    if (currentIndex !== pageOrder.length - 1) {\n      const showEvent = new EventData(R.get.events_showModal, { page: pageOrder[currentIndex + 1] })\n      this.stateManager.addEvent(showEvent)\n    } else {\n      debuglog('state.showNextPage: end of tutorial.')\n      this.stateManager.goToState(R.get.states_tryout, true) // TODO make it able to use the state object as well\n    }\n  } else {\n    throw new Error('state.showNextPage: invalid currentPage.')\n  }\n}\n\nexport { showNextPage, showModal, awakeTutorial, tutorials }\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/scenes/main/states/tutorial.js","/**\n * startUp.js\n *\n * This file holds the code that should run on your HTML page after all the framework and page is loaded.\n *\n * Here you should :\n * - create the taskObject\n * - set up the parameters of the task\n * - register loading promise\n * - register the scenes generators\n * - start the task\n * - bind the task paramBox with relevant parameters\n *\n * Do not pollute the global space with too much variables.\n * Here two global variables are created : taskObject and calibrator.\n */\nimport $ from 'jquery'\nimport _ from 'lodash'\nimport { RessourceManager, TaskObject, Deferred, debuglog, preloadImages } from 'experiment-js'\nimport { SmartForm } from 'experiment-boxes'\n\n// import LoadingScene from './scenes/LoadingScene' Using default loading\nimport MainScene from '../scenes/main/MainScene'\n\nwindow.taskObject = null\nwindow.calibrator = null\n\n\n// When page is loaded, initiate the task\nconst defferedDomLoaded = new Deferred()\ndocument.addEventListener('DOMContentLoaded', () => {\n  defferedDomLoaded.resolve()\n})\n\nif (typeof window !== 'undefined') {\n  /* === Get the absolute path of the library === */\n  const scripts = document.getElementsByTagName('script')\n  if (scripts.length) {\n    const assetsFolderFullpath = scripts[scripts.length - 1].src\n    const delimiterIndices = assetsFolderFullpath.indicesOf('/')\n    window.assetsFolderFullpath = assetsFolderFullpath.substr(0, delimiterIndices[delimiterIndices.length - 2])\n  } else {\n    window.assetsFolderFullpath = './'\n  }\n}\n\nconst R = new RessourceManager()\nwindow.p1 = defferedDomLoaded.promise\nwindow.p2 = R.addFiles(`${window.assetsFolderFullpath}/assets/sequences/sequencesJune2017.json`, `${window.assetsFolderFullpath}/assets/json/ressources.json`)\n\nconst imageToPreload = [\n  `${window.assetsFolderFullpath}/assets/sprites/cross/predictionSquare.svg`,\n  `${window.assetsFolderFullpath}/assets/sprites/keyboard/fullsize_color_legend.png`,\n  `${window.assetsFolderFullpath}/assets/sprites/cross/fullSquare.svg`,\n  `${window.assetsFolderFullpath}/assets/sprites/cross/predictionSquareWithLoader.gif`]\n\nconst [p3, preloadedImages] = preloadImages(...imageToPreload)\nObject.assign(window, { p3, preloadedImages })\n\n\nwindow.loadingPromise = Promise.all([window.p1, window.p2, window.p3])\n\n\nwindow.loadingPromise.then(() => {\n  const taskObject = new TaskObject($('.task-canvas'))\n  taskObject.R.mergeWith(R)\n\n    /* --- Setup custom parameters --- */\n\n    // Setup sequences and get sequence objects for each levels\n    //  Model level 1 : 1, 4, 2, 3 -- 51 positions (50 trials) 0.9\n  const fullSequenceObjectLevel1 = R.get['fullSequenceObjectLevel1Classic0.90-1423-0.08errorTotal'] // getFullSequenceObjectForClassicLevels(R.get.sequenceLevel1)\n\n    //  Model level 2 : 1, 2, 4, 3 -- 76 positions (75 trials) 0.85\n  const fullSequenceObjectLevel2 = R.get['fullSequenceObjectLevel2Classic0.85-1243-0.25errorTotal'] // getFullSequenceObjectForClassicLevels(R.get.sequenceLevel2)\n\n    // Model level 3 : 1, 3, 4, 2 -- 101 positions 0.75\n  const fullSequenceObjectLevel3 = R.get['fullSequenceObjectLevel3Classic0.75-1342-0.096errorTotal'] // getFullSequenceObjectForClassicLevels(R.get.sequenceLevel3)\n\n    // Level 4 is 1, 3, 2, 4 -- 0.75 -- 20% no go -- 51 positions * 2 (wolf) + 50 positons * 2 (rabbit) = 150 transitions\n  const fullSequenceObjectLevel4 = R.get['levelFourWithRandomAndNogoDependant-1324-0.75-0.32TotalError']\n  // const levelFourJSON = R.get.sequenceObjectLevel4\n  //\n  // const levelFourJSONNolearning = R.get.sequenceObjectLevel4NoLearning\n  //\n  // const levelFourJSONBlackouts = R.get.sequenceObjectLevel4Blackouts\n  //\n  // const levelFourJSONIndependant = R.get.sequenceObjectLevel4Independant\n\n  const baseLevel = {\n    level: 0,\n    sequence: null,\n    numberOfBlocks: 0,\n    sequenceObject: null,\n    dominantProbability: 0.9,\n    dominantStructure: '1423',\n    observationDuration: 300,\n    interObservationDuration: 50, // to add ?\n    probeObservationDuration: 1000,\n    predictionDuration: 2500,\n    feedbackDuration: 1500,\n    minISIAfterLearning: 2500,\n    maxISIAfterLearning: 3500,\n    minISIAfterFeedback: 2500,\n    maxISIAfterFeedback: 3500,\n    observationSegmentSizes: [1],\n    observationSegmentRepetitionPerBlock: 75,\n    feedbackType: 'transition',\n  }\n\n  let levelOne = {\n    level: 1,\n    dominantProbability: 0.9,\n    dominantStructure: '1423',\n    numberOfBlocks: 1,\n    sequenceObject: fullSequenceObjectLevel1,\n  }\n\n  levelOne = _.extend(baseLevel, levelOne)\n\n  taskObject.parameters.levelOne = levelOne\n\n  const levelTwo = {\n    level: 2,\n    dominantProbability: 0.85,\n    dominantStructure: '1243',\n    sequenceObject: fullSequenceObjectLevel2,\n  }\n\n  taskObject.parameters.levelTwo = _.extend(_.clone(baseLevel), levelTwo)\n\n  const levelThree = {\n    level: 3,\n    dominantProbability: 0.75,\n    dominantStructure: '1342',\n    sequenceObject: fullSequenceObjectLevel3,\n  }\n\n  taskObject.parameters.levelThree = _.extend(_.clone(baseLevel), levelThree)\n\n  // taskObject.parameters.levelFour = {\n  //   level: 4,\n  //   dominantProbability: 0.75,\n  //   dominantStructure: 1324,\n  //   observationDuration: 500,\n  //   probeObservationDuration: 3000,\n  //   predictionDuration: 2500,\n  //   interObservationDuration: 50, // to add ? but different than block 1-3\n  //   feedbackDuration: 1500,\n  //   minISIAfterLearning: 2500,\n  //   maxISIAfterLearning: 3500,\n  //   minISIAfterFeedback: 2500,\n  //   maxISIAfterFeedback: 3500,\n  //   feedbackType: 'transition',\n  //   sequenceObject: levelFourJSON,\n  // }\n  //\n  // taskObject.parameters.levelFourNoLearning = {\n  //   level: 4,\n  //   dominantProbability: 0.75,\n  //   observationDuration: 500,\n  //   fixedISIAfterObservation: 2500,\n  //   sampleMeanISIAfterObservation: 3000,\n  //   predictionDuration: 2000,\n  //   fixedISIAfterPrediction: 1000,\n  //   sampleMeanISIAfterPrediction: 3000,\n  //   fixedBlackScreenDuration: 1500,\n  //   sampleMeanBlackScreen: 500,\n  //   maxSampleAfterPrediction: 4000,\n  //   maxSampleAfterObservation: 4000,\n  //   maxSampleBlackScreen: 1000,\n  //   feedbackType: 'transition',\n  //   sequenceObject: levelFourJSONBlackouts,\n  // }\n\n  taskObject.parameters.levelFour = {\n    level: 4,\n    dominantProbability: 0.75,\n    observationDuration: 500,\n    fixedISIAfterObservation: 2500,\n    sampleMeanISIAfterObservation: 3000,\n    predictionDuration: 2000,\n    fixedISIAfterPrediction: 1000,\n    sampleMeanISIAfterPrediction: 3000,\n    fixedBlackScreenDuration: 1500,\n    sampleMeanBlackScreen: 500,\n    maxSampleAfterPrediction: 4000,\n    maxSampleAfterObservation: 4000,\n    maxSampleBlackScreen: 1000,\n    feedbackType: 'transition',\n    sound: false,\n    sequenceObject: fullSequenceObjectLevel4,\n  }\n\n  taskObject.parameters.levels = [\n    taskObject.parameters.levelOne,\n    taskObject.parameters.levelTwo,\n    taskObject.parameters.levelThree,\n    taskObject.parameters.levelFour,\n  ]\n\n  taskObject.parameters.shouldChooseLevel = true\n\n  taskObject.parameters.numberOfSequences = 10\n\n    /* --- Setup sequence generator property --- */\n  taskObject.parameters.sequence = {}\n  taskObject.parameters.sequence.mainProbability = 0.75\n  taskObject.parameters.sequence.numberOfSequences = 3\n  taskObject.parameters.sequence.decisionModel = 'SOFTMAX'\n  taskObject.parameters.sequence.offset = 0.1\n  taskObject.parameters.sequence.learningRate = 0.2\n\n    /* --- Setup task variables --- */\n  taskObject.variables.shouldSeeInformation = true\n\n    /* --- Register loading scene generator --- */\n  // taskObject.registerLoadingFunction(LoadingScene)\n  taskObject.assetsToLoad = {\n    rabbitFace: {\n      path: '/assets/sprites/rabbit/rabbitFace.png',\n      type: 'texture',\n    },\n    wolfFace: '/assets/sprites/wolf/wolfFace.png',\n    crossSheet: {\n      path: '/assets/sprites/cross/squareSheetMargin.svg',\n      type: 'texture',\n    },\n    observation: {\n      path: '/assets/sounds/observation.mp3',\n      type: 'sound',\n    },\n    predict: {\n      path: '/assets/sounds/predict.mp3',\n      type: 'sound',\n    },\n  }\n\n\n    /* --- Register scene generators --- */\n  const options = {\n    level: null,\n  }\n\n  taskObject.registerSceneGenerator(MainScene, options)\n\n  const sceneNames = ['loading', 'main']\n\n  taskObject.R.add({\n    agent: {\n      scale: 0.15, // compared to the minimum dimension\n      predictionOpacity: 0,\n      animate: false,\n    },\n    tile: {\n      scale: 2, // compared to the agent size\n      offset: 40,\n      fullOpacity: 0.2,\n      lowOpacity: 0.2,\n    },\n    cross: {\n      opacity: 1,\n    },\n  })\n\n    /* list of tweakable variables from the paramBox */\n  const parametersNames = [\n    'parameters.levelFour.observationDuration',\n    'parameters.levelFour.fixedISIAfterObservation',\n    'parameters.levelFour.sampleMeanISIAfterObservation',\n    'parameters.levelFour.predictionDuration',\n    'parameters.levelFour.fixedISIAfterPrediction',\n    'parameters.levelFour.sampleMeanISIAfterPrediction',\n    'parameters.levelFour.fixedBlackScreenDuration',\n    'parameters.levelFour.sampleMeanBlackScreen',\n    'parameters.levelFour.maxSampleAfterPrediction',\n    'parameters.levelFour.maxSampleAfterObservation',\n    'parameters.levelFour.maxSampleBlackScreen',\n  ]\n\n  const parametersConstraints = {\n    feedbackType: ['transition', 'sound'],\n    currentScene: sceneNames,\n  }\n\n  const rParams = ['agent.scale', 'agent.predictionOpacity', 'tile.scale', 'tile.offset', 'cross.opacity']\n\n\n  taskObject.paramBox.bind(taskObject, parametersNames, parametersConstraints)\n  taskObject.paramBox.bind(taskObject.R.data, rParams)\n\n    /* --- Login --- */\n  window.taskObject = taskObject\n  const tempMaxNumberOfRetry = taskObject.dataManager.MAX_NUMBER_OF_RETRY\n  const endpoint = `${window.assetsFolderFullpath}/api/php/mysql/index.php`\n\n  /**\n   * This function in a form generator that is called automatically by the DataManager when the user needs to login\n   * @method loginForm\n   * @return {SmartForm}  a SmartForm\n   */\n  function loginForm() {\n    const fields = {\n      userId: {\n        type: 'input',\n        constraints: 'length:10,300', // list of constraints that will be automatically verified: mandatory; alpha; numeric; length:XX; contains:a,b,@,.;\n        authorizedValues: null, // athorized values\n        parent: null,\n        title: 'Enter your MTurk UserId:',\n      },\n      password: {\n        type: 'password', // field type: input, select, textaera, slider, radio, password\n        constraints: 'length:6,300; score: 30', // list of constraints that will be automatically verified: mandatory; alpha; numeric; length:XX; contains:a,b,@,.;\n        authorizedValues: null, // athorized values\n        parent: null,\n        title: 'Enter your password, if you are new here you are free to pick one !', // you can control auto-create account in the php api config\n      },\n    }\n    const options = { fields, title: 'Login Form', format: 'topCentralSmall', callback(fields) { debuglog({ endpoint, credentials: { userId: fields.userId.value, password: fields.password.value } }) } }\n    const form = new SmartForm(options)\n    form.buttonText = 'OK'\n\n    const R = taskObject.context.R\n    const stateManager = taskObject.context.stateManager\n\n    if (stateManager) {\n      stateManager.goToState(R.get.states_active)\n    }\n\n    return form\n  }\n\n  //  If you do not want to store the credentials for the connections localy set this variable to false (the password is not stored in any case, only a logging key)\n  // taskObject.dataManager.useLocalStorageCredentials = false\n  taskObject.setConnection({ endpoint, signInForm: loginForm }) // credentials: { userId: 'John', password: 'wrong' } })\n  .then(connection => (connection.loggedIn ? true : taskObject.dataManager.login(connection)))\n  .then(() => {\n    // reset the retry limit to its original value\n    taskObject.dataManager.MAX_NUMBER_OF_RETRY = tempMaxNumberOfRetry\n\n    /* --- Start task --- */\n    return taskObject.startTask()\n  })\n  .then((message) => {\n    debuglog(message)\n    taskObject.paramBox.bind(taskObject, 'currentScene', parametersConstraints)\n\n    if (typeof taskObject.paramBox.queryString.generateSequence !== 'undefined') {\n      taskObject.currentScene = 'sequenceGeneratorScene'\n    } else if ((sceneNames.length === 1) || (typeof taskObject.paramBox.queryString.currentScene === 'undefined')) {\n      taskObject.currentScene = 'main'\n    }\n  })\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/startup/startup.js","/**\n * Experiment.js\n * Created. 2016\n *\n * Experiment.js toolbox.\n *\n * Authors. Albert Buchard\n *\n * Requires: lodash, BABYLON.js, mathjs, jQuery\n *\n * LICENSE Apache-2\n */\n\n /* --- Import the framework --- */\n\n\n/* add it to the global space in case user want to import in a script tag */\n if (typeof window !== 'undefined') {\n   require('./src/task/startup/startup')\n }\n\n\n\n// WEBPACK FOOTER //\n// ./builder.js","import _ from 'lodash'\nimport BABYLON from 'experiment-babylon-js'\nimport {\n  EventData,\n  Array, // eslint-disable-line\n  String, // eslint-disable-line\n  debugError,\n} from 'experiment-js'\n\nimport { redrawAssets,\n  drawTiles,\n  addButton,\n  disposeOfButtons,\n  clearTiles,\n  getTilePositions,\n  getTileSize,\n  getTileMargins,\n  highlightPosition,\n  drawPredictionTiles,\n  getAgentMarginsOnTile,\n  setAgent,\n  moveAgentToTile,\n  animateAgentToTile,\n  getAgentPositionOnTile,\n  setAgentOpacity,\n  setBlackScreen,\n  hideAll,\n  showAll,\n  checkIdleAndConnection } from './functions/globalFunctions'\n\n\nimport { selectLevel, startLevel, endActive } from './states/active'\n\nimport { showNextPage, showModal, awakeTutorial } from './states/tutorial'\n\nimport {\n  awakeTryout,\n  tryoutEndPrediction,\n  tryoutCheckKeyStrokeForPrediction,\n  tryoutGoToNextPosition,\n  tryoutStartPrediction,\n  tryoutEnd,\n} from './states/tryout'\n\nimport {\n  stateUnfrozen,\n  startRunning,\n  goToNextPosition,\n  startPrediction,\n  checkForClickPrediction,\n  checkKeyStrokeForPrediction,\n  endPrediction,\n  playSound,\n  endObservation,\n  pauseTransition,\n} from './states/running'\n\nimport { awakenPause, endPause, pauseKeyDown } from './states/pause'\n\nimport { awakenEnd } from './states/end'\n\n/* =============== Main scene =============== */\nexport default function MainScene(options = {}) {\n  // option base\n  const optionsBase = {\n    sceneKey: 'main',\n    canvasBackground: new BABYLON.Color4(0, 0, 0, 1),\n    backgroundRoundRadius: 0,\n    clearColor: new BABYLON.Color4(0, 0, 0, 1),\n    canvasPercentWidth: 1,\n    canvasPercentHeight: 1,\n    mode: 'central',\n    level: null,\n  }\n\n  options = _.extend(optionsBase, options)\n\n  /* --- Get taskObject from context --- */\n  const taskObject = this.taskObject\n\n  /* --- Create a basic 2D scene using a Canvas2D as background --- */\n  const scene = taskObject.create2DScene(options)\n\n  /* --- Get stateManager --- */\n  const stateManager = scene.stateManager\n\n  /* --- Get canvas --- */\n  // const canvas = scene.initialCanvas\n\n  // const camera = scene.initialCamera\n\n  const R = taskObject.R\n\n\n  /* --- Load assets --- */\n\n  scene.onResize = [redrawAssets]\n\n\n  const sounds = {\n    observation: taskObject.cloneAssetIntoScene(R.get.sounds_observation, scene),\n    prediction: taskObject.cloneAssetIntoScene(R.get.sounds_predict, scene),\n  }\n\n  stateManager.setGlobal('sounds', sounds)\n\n  stateManager.register(drawTiles,\n    addButton,\n    disposeOfButtons,\n    clearTiles,\n    getTilePositions,\n    getTileSize,\n    getTileMargins,\n    highlightPosition,\n    drawPredictionTiles,\n    setAgent,\n    moveAgentToTile,\n    animateAgentToTile,\n    getAgentPositionOnTile,\n    getAgentMarginsOnTile,\n    setAgentOpacity,\n    setBlackScreen,\n    hideAll,\n    showAll,\n    redrawAssets,\n    checkIdleAndConnection)\n\n  stateManager.call('redrawAssets')\n\n  /* --- Setup data --- */\n  const dataManager = this.dataManager\n\n  /* --- Add cwData table that will hold a summary of the data --- */\n  const cwDataFields = [\n    'subject_id',\n    'level',\n    'block',\n    'block_type',\n    'dominant_structure',\n    'dominant_transition_probability',\n    'trial',\n    'trial_type',\n    'position',\n    'observation_duration',\n    'observed_transition_was_dominant', // NA for first transition in a sublevel and after prediction\n    'transition_to', // NA for GO trials (non blackouts)\n    'subject_choice', // NA for NOGO\n    'correct',\n    'response_time', // NA for NOGO or no response\n    'key_hits', // ['key', 'time'], [k,t], ...\n    'clicks',\n    'has_paused',\n    'start_observation',\n    'responded_at',\n    'start_prediction',\n    'end_prediction',\n  ]\n\n  dataManager.addTable('cwData', cwDataFields)\n  dataManager.addTable('tryoutData', cwDataFields)\n\n  let userId = `unknown${this.timeInMs}`\n  try {\n    userId = dataManager.connections[0].credentials.userId\n  } catch (e) {\n    debugError(e)\n  }\n\n  stateManager.set('subject_id', userId)\n\n\n  /* --- Add the logs for each level --- */\n  const eventFields = ['id', 'flag', 'happenedAt', 'handledAt', 'data']\n  dataManager.addTable('stateRunningEventsLvl1', eventFields)\n  dataManager.addTable('stateRunningEventsLvl2', eventFields)\n  dataManager.addTable('stateRunningEventsLvl3', eventFields)\n  dataManager.addTable('stateRunningEventsLvl4', eventFields)\n  dataManager.addTable('stateActiveEvents', eventFields)\n\n  /* --- Store scene level inside the stateManager --- */\n  stateManager.setGlobal('positionData', {\n    indexOnTransitionSequence: -1,\n    indexOnPredictionSequence: -1,\n    fullSequenceIndex: -1,\n  })\n\n  stateManager.setGlobal('hasSeenLearningInfo', false)\n  stateManager.setGlobal('hasSeenPredictionInfo', false)\n  /* --- Setup states --- */\n\n  /* --- Set state key and store them in the stateManager --- */\n  R.add({\n    states: {\n      running: 'running',\n      tutorial: 'tutorial',\n      tryout: 'tryout',\n      tryoutFMRI: 'tryoutFMRI',\n      end: 'end',\n    },\n    checkpoint: {\n      tutorialDone: ['tutorialOneDone', 'tutorialTwoDone'],\n      levelDone: ['levelOneDone', 'levelTwoDone', 'levelThreeDone', 'levelFourDone'],\n      taskDone: 'taskDone',\n      taskEndNoComeback: 'taskEndNoComeback',\n    },\n    flags: {\n      levelDefined: 'levelDefined',\n    },\n    events: {\n      sequenceGenerated: 'sequenceGenerated',\n      goNextPosition: 'goNextPosition',\n      endObservation: 'endObservation',\n      startPrediction: 'startPrediction',\n      responseTimeEnded: 'responseTimeEnded',\n      isiAfterLearningEnded: 'isiAfterLearningEnded',\n      feedbackEnded: 'feedbackEnded',\n      isiAfterFeedbackEnded: 'isiAfterFeedbackEnded',\n      pauseTransition: 'pauseTransition',\n      forcePause: 'forcePause',\n      predictionStartBlackout: 'predictionStartBlackout',\n      blackoutEnds: 'blackoutEnds',\n      predictionEndsBlackout: 'predictionEndsBlackout',\n      isiAfterPredictionEndsBlackout: 'isiAfterPredictionEndsBlackout',\n      screenWentBlack: 'screenWentBlack',\n      playPredictionSound: 'playPredictionSound',\n      playObservationSound: 'playObservationSound',\n      showModal: 'showModal',\n      goToTutorial: 'goToTutorial',\n      hasResponded: 'hasResponded',\n      restartTutorial: 'restartTutorial',\n      goToLevel1: 'goToLevel1',\n      goToLevel2: 'goToLevel2',\n      goToLevel3: 'goToLevel3',\n      goToLevel4: 'goToLevel4',\n      tic: 'tic',\n      moreThanFiveNA: 'moreThanFiveNA',\n      aknowledgedEnding: 'aknowledgedEnding',\n    },\n  })\n\n  // eslint-disable-next-line\n  const [tutorialState, runningState, tryoutState, endState] = stateManager.addState(R.get.states_tutorial, R.get.states_running, R.get.states_tryout, R.get.states_end)\n  const pauseState = stateManager.states.pause\n\n  /* ======== State Active ======== */\n  if (options.level !== null) {\n    const eventData = new EventData(R.get.flags_levelDefined, scene.stateManager.timeInMs, {\n      belongsTo: [\n        'globalLog', 'stateActiveEvents',\n      ],\n      handledAt: null,\n      storedAt: null,\n      level: options.level,\n    })\n    stateManager.addEvent(eventData)\n  } else {\n    stateManager.states.active.addAwakeningFunctions(selectLevel)\n  }\n\n  stateManager.states.active.addEndingFunctions(endActive)\n\n  stateManager.states.active.addEventFunctions(R.get.flags_levelDefined, startLevel)\n  stateManager.states.active.addEventFunctions(R.get.events_goToTutorial,\n    ({ data: { tutorial } }) => {\n      stateManager.setGlobal('currentTutorial', tutorial)\n      stateManager.goToState(R.get.states_tutorial)\n    })\n\n  /* ======== State RUNNING ======== */\n  const goToPause = function () {\n    if (this.state.shouldPause) {\n      this.state.freeze()\n      this.stateManager.goToState(this.R.get.states_pause)\n    }\n  }\n\n  /* --- Register functions --- */\n  runningState.addAwakeningFunctions(startRunning)\n\n  runningState.addEventFunctions(R.get.events_goNextPosition, goToNextPosition)\n  runningState.addEventFunctions(R.get.events_endObservation, endObservation)\n\n  runningState.addEventFunctions(R.get.events_startPrediction, startPrediction)\n  runningState.addEventFunctions(R.get.events_responseTimeEnded, endPrediction)\n\n  runningState.addEventFunctions(R.get.events_pauseTransition, pauseTransition)\n\n  runningState.addEventFunctions(R.get.events_unfrozen, stateUnfrozen)\n  runningState.addEventFunctions(R.get.events_forcePause, goToPause)\n  runningState.addEventFunctions(R.get.events_windowBlur, goToPause)\n  runningState.addEventFunctions(R.get.events_moreThanFiveNA, goToPause)\n\n  runningState.addEventFunctions(R.get.events_click, checkForClickPrediction)\n  runningState.addEventFunctions(R.get.events_keydown, checkKeyStrokeForPrediction)\n\n  runningState.addEventFunctions(R.get.events_playPredictionSound, playSound)\n  runningState.addEventFunctions(R.get.events_playObservationSound, playSound)\n\n\n  /* ======= State Tutorial ======= */\n  tutorialState.addAwakeningFunctions(awakeTutorial)\n\n  tutorialState.addEventFunctions(R.get.events_modalDismissed, showNextPage)\n  tutorialState.addEventFunctions(R.get.events_showModal, showModal)\n\n  tutorialState.addEventFunctions(R.get.events_playPredictionSound, playSound)\n  tutorialState.addEventFunctions(R.get.events_playObservationSound, playSound)\n\n\n  /* ======= State Tryout ======= */\n  dataManager.addTable('stateTryout1', eventFields)\n  dataManager.addTable('stateTryout2', eventFields)\n\n  tryoutState.addAwakeningFunctions(awakeTryout)\n  tryoutState.addEndingFunctions(tryoutEnd)\n\n  tryoutState.addEventFunctions(R.get.events_goNextPosition, tryoutGoToNextPosition)\n  tryoutState.addEventFunctions(R.get.events_endObservation, endObservation)\n\n  tryoutState.addEventFunctions(R.get.events_startPrediction, tryoutStartPrediction)\n  tryoutState.addEventFunctions(R.get.events_responseTimeEnded, tryoutEndPrediction)\n  tryoutState.addEventFunctions(R.get.flags_levelDefined, startLevel)\n  tryoutState.addEventFunctions(R.get.events_restartTutorial, () => {\n    stateManager.goToState(R.get.states_tutorial)\n  })\n\n  tryoutState.addEventFunctions(R.get.events_keydown, tryoutCheckKeyStrokeForPrediction)\n  tryoutState.addEventFunctions(R.get.events_click, checkForClickPrediction)\n\n  /* ======== State Pause ======== */\n  // stateManager.setPauseKeyStroke()\n  pauseState.addAwakeningFunctions(awakenPause)\n  pauseState.addEndingFunctions(endPause)\n  pauseState.addEventFunctions(R.get.events_keydown, pauseKeyDown)\n  pauseState.addEventFunctions(R.get.events_windowFocus, pauseKeyDown)\n  // pauseState.addEventFunctions(R.get.flags_levelDefined, startLevel)\n  // pauseState.addEndingFunctions(function () { this.stateManager.promise('disposeOfButtons') })\n\n  /* ======= prematureEnd State ======= */\n  endState.addAwakeningFunctions(awakenEnd)\n\n  return scene\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/scenes/main/MainScene.js","import {\n  EventData,\n  Array, // eslint-disable-line\n  String, // eslint-disable-line\n  Deferred,\n  delay,\n} from 'experiment-js'\n\n\nconst selectLevel = function () {\n  if (typeof this.state === 'undefined') {\n    throw new Error('state.selectLevel: state is undefined')\n  }\n\n  const stateManager = this.stateManager\n  const dataManager = this.dataManager\n  // const elements2D = stateManager.get('elements2D')\n  // const GUI = stateManager.get('GUI')\n  const R = this.R\n\n  const checkTaskDone = dataManager.query('hasCheckpoint', { checkpoint: R.get.checkpoint_taskDone }, this.connection)\n  const checkTaskEndNoComeback = dataManager.query('hasCheckpoint', { checkpoint: R.get.checkpoint_taskEndNoComeback }, this.connection)\n\n  stateManager.call('hideAll')\n  const deferred = new Deferred()\n\n  Promise.all([checkTaskDone, checkTaskEndNoComeback])\n  .then((results) => {\n    for (const result of results) {\n      if (typeof result.code === 'undefined') {\n        if (stateManager.currentStateKey !== R.get.states_idle) {\n          stateManager.goToState(R.get.states_idle)\n        }\n\n        this.taskObject.modal({ type: 'centralLarge', title: R.get.lostConnectionTitle, content: R.get.lostConnectionContent })\n        .then(() => delay(50)).then(() => { stateManager.call('checkIdleAndConnection', { returnToState: 'active' }) })\n      } else if ((result.code === R.get.checkpoint_taskDone) || (result.code === R.get.checkpoint_taskEndNoComeback)) {\n        stateManager.set('endReason', result.message)\n        stateManager.goToState(R.get.states_end)\n\n        deferred.resolve('active.selectLevel: end of task')\n        return false\n      }\n    }\n    return this.dataManager.query('getCheckpoint', null, this.connection)\n  })\n  .then((result) => {\n    if (result !== false) {\n      if (typeof result.code === 'undefined') {\n        if (stateManager.currentStateKey !== R.get.states_active) {\n          stateManager.goToState(R.get.states_idle)\n        }\n\n        this.taskObject.modal({ type: 'centralLarge', title: R.get.lostConnectionTitle, content: R.get.lostConnectionContent })\n        .then(() => delay(50)).then(() => { stateManager.call('checkIdleAndConnection', { returnToState: 'active' }) })\n      }\n\n      let eventLevel\n      switch (result.code) {\n        case R.get.checkpoint_tutorialDone[0]:\n          eventLevel = new EventData(R.get.flags_levelDefined, stateManager.timeInMs, { level: 1 })\n          break\n        case R.get.checkpoint_tutorialDone[1]:\n          eventLevel = new EventData(R.get.flags_levelDefined, stateManager.timeInMs, { level: 4 })\n          break\n        case R.get.checkpoint_levelDone[0]:\n          eventLevel = new EventData(R.get.flags_levelDefined, stateManager.timeInMs, { level: 2 })\n          break\n        case R.get.checkpoint_levelDone[1]:\n          eventLevel = new EventData(R.get.flags_levelDefined, stateManager.timeInMs, { level: 3 })\n          break\n        case R.get.checkpoint_levelDone[2]:\n          eventLevel = new EventData(R.get.events_goToTutorial, stateManager.timeInMs, { tutorial: 2 })\n          break\n        case R.get.checkpoint_levelDone[3]:\n          stateManager.set('endReason', 'You finished the task finished')\n          stateManager.goToState(R.get.states_end)\n          break\n        case R.get.checkpoint_taskDone:\n          stateManager.set('endReason', result.message)\n          stateManager.goToState(R.get.states_end)\n          break\n        case R.get.checkpoint_taskEndNoComeback:\n          stateManager.set('endReason', result.message)\n          stateManager.goToState(R.get.states_end)\n          break\n        default:\n          // Start tutorial\n          // eventLevel = new EventData(R.get.flags_levelDefined, stateManager.timeInMs, { level: 4 }) // TODO TAKE THAT BACk\n          eventLevel = new EventData(R.get.events_goToTutorial, stateManager.timeInMs, { tutorial: 1 })\n      }\n\n      delay(150).then(() => { stateManager.addEvent(eventLevel) })\n      deferred.resolve('active.selectLevel: level selected - resolved')\n    }\n  })\n  .catch(() => {\n    if (stateManager.currentStateKey !== R.get.states_active) {\n      stateManager.goToState(R.get.states_idle)\n    }\n\n    this.taskObject.modal({ type: 'centralLarge', title: R.get.lostConnectionTitle, content: R.get.lostConnectionContent })\n    .then(() => delay(50)).then(() => { stateManager.call('checkIdleAndConnection', { returnToState: 'active' }) })\n  })\n\n  // GUI.levelVisible = true\n  // /* --- Delete buttons --- */\n  // stateManager.promise('disposeOfButtons')\n  //\n  // const eventButtonOne = new EventData(R.get.flags_levelDefined, stateManager.timeInMs, {\n  //   level: 1,\n  // })\n  // const eventButtonTwo = new EventData(R.get.flags_levelDefined, stateManager.timeInMs, {\n  //   level: 2,\n  // })\n  // const eventButtonThree = new EventData(R.get.flags_levelDefined, stateManager.timeInMs, {\n  //   level: 3,\n  // })\n  // const eventButtonFour = new EventData(R.get.flags_levelDefined, stateManager.timeInMs, {\n  //   level: 4,\n  // })\n  //\n  // const eventButtonTutorialOne = new EventData(R.get.events_goToTutorial, stateManager.timeInMs, {\n  //   tutorial: 1,\n  // })\n  // const eventButtonTutorialFour = new EventData(R.get.events_goToTutorial, stateManager.timeInMs, {\n  //   tutorial: 2,\n  // })\n  //\n  // const width = 220\n  // const height = 40\n  // const widthOffset = width / 2\n  //\n  // const buttonOptionLevelOne = {\n  //   id: 'levelOne',\n  //   parent: GUI,\n  //   text: 'Level 1',\n  //   marginAlignment: 'h: center, v: bottom',\n  //   margin: {\n  //     rightPixels: (width) + widthOffset,\n  //     topPixels: 0,\n  //   },\n  //   width,\n  //   height,\n  //   fill: BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0.8, 0.8, 0.8, 1)),\n  //   clickEventData: eventButtonOne,\n  //   callbackFunction: null,\n  //   fontName: '20pt Arial',\n  //   baseOpacity: 0.8,\n  //   hoverOpacity: 1,\n  // }\n  //\n  // const buttonOptionTutorialOne = _.extend(_.clone(buttonOptionLevelOne), {\n  //   id: 'buttonTutorialLevelFour',\n  //   text: 'Tutorial 1',\n  //   margin: {\n  //     rightPixels: (width) + widthOffset,\n  //     bottomPixels: height,\n  //   },\n  //   clickEventData: eventButtonTutorialOne,\n  // })\n  //\n  //\n  // const buttonOptionLevelTwo = _.extend(_.clone(buttonOptionLevelOne), {\n  //   id: 'buttonLevelTwo',\n  //   text: 'Level 2',\n  //   margin: {\n  //     rightPixels: widthOffset,\n  //     topPixels: 0,\n  //   },\n  //   clickEventData: eventButtonTwo,\n  // })\n  //\n  // const buttonOptionLevelThree = _.extend(_.clone(buttonOptionLevelOne), {\n  //   id: 'buttonLevelThree',\n  //   text: 'Level 3',\n  //   margin: {\n  //     leftPixels: widthOffset,\n  //     topPixels: 0,\n  //   },\n  //   clickEventData: eventButtonThree,\n  // })\n  //\n  // const buttonOptionLevelFour = _.extend(_.clone(buttonOptionLevelOne), {\n  //   id: 'buttonLevelFour',\n  //   text: 'Level 4',\n  //   margin: {\n  //     leftPixels: (width) + widthOffset,\n  //     topPixels: 0,\n  //   },\n  //   clickEventData: eventButtonFour,\n  // })\n  //\n  // const buttonOptionTutorialFour = _.extend(_.clone(buttonOptionLevelOne), {\n  //   id: 'buttonTutorialLevelFour',\n  //   text: 'Tutorial 4',\n  //   margin: {\n  //     leftPixels: (width) + widthOffset,\n  //     bottomPixels: height,\n  //   },\n  //   clickEventData: eventButtonTutorialFour,\n  // })\n  //\n  // Promise.all([stateManager.promise('addButton', buttonOptionLevelOne),\n  //   stateManager.promise('addButton', buttonOptionLevelTwo),\n  //   stateManager.promise('addButton', buttonOptionLevelThree),\n  //   stateManager.promise('addButton', buttonOptionLevelFour),\n  //   stateManager.promise('addButton', buttonOptionTutorialOne),\n  //   stateManager.promise('addButton', buttonOptionTutorialFour),\n  // ])\n  //   .then((buttons) => {\n  //     elements2D.levelButtons = buttons\n  //     for (const button of buttons) {\n  //       button.levelVisible = true\n  //     }\n  //     deferred.resolve('stateManager.selectLevel: resolved')\n  //   })\n\n  return deferred.promise\n}\n\nconst startLevel = function (options = null) {\n  if (typeof this.taskObject === 'undefined') {\n    throw new Error('state.startLevel: this.taskObject is undefined')\n  }\n\n  if (typeof options.data.level === 'undefined') {\n    throw new Error('state.startLevel: options.level is undefined')\n  }\n\n  /* --- Get context --- */\n  const taskObject = this.taskObject\n  const stateManager = this.stateManager\n  const R = this.R\n  const elements2D = stateManager.get('elements2D')\n  stateManager.emptyTimeTriggerEvents()\n  elements2D.agent.opacity = 0\n\n  /* --- Delete buttons --- */\n  stateManager.promise('disposeOfButtons')\n\n  stateManager.setGlobal('level', options.data.level)\n  stateManager.setGlobal('levelObject', taskObject.parameters.levels[options.data.level - 1])\n\n  stateManager.set('positionData', {\n    indexOnTransitionSequence: -1,\n    indexOnPredictionSequence: -1,\n    fullSequenceIndex: taskObject.parameters.levels[options.data.level - 1].sequenceObject.fullSequence.length - 3, // TODO PUT IT BACK -1,\n  })\n\n  if (stateManager.currentStateKey !== R.get.states_running) { stateManager.goToState(R.get.states_running) }\n\n  return ('state.startLevel: resolved')\n}\n\nconst endActive = function () {\n  this.stateManager.promise('disposeOfButtons')\n}\nexport { startLevel, selectLevel, endActive }\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/scenes/main/states/active.js","import { EventData } from 'experiment-js'\n\nconst awakenEnd = function () {\n  const R = this.R\n  const scene = this.scene\n  this.stateManager.call('hideAll')\n  scene.initialGui.levelVisible = false\n  this.dataManager.query('hasCheckpoint', { checkpoint: R.get.checkpoint_taskDone }, this.connection)\n  .then((r) => {\n    const event = new EventData(this.R.get.events_aknowledgedEnding)\n    let reason = 'You completed the task !'\n    let title = R.get.taskFinishedTitle\n    let content = R.get.taskFinishedContent\n\n    if (r.code !== R.get.checkpoint_taskDone) {\n      reason = this.stateManager.get('endReason', '')\n      title = R.get.taskStoppedTitle\n      content = R.get.taskStoppedMessage\n      if (reason !== '') {\n        content += R.get.taskStoppedReason.replace('{t}', reason)\n      }\n      this.taskObject.setCheckpoint(R.get.checkpoint_taskEndNoComeback, reason)\n\n      this.taskObject.modal({ type: 'centralLarge', title, content, event })\n    } else {\n      this.dataManager.query('getFinalCode', null, this.connection)\n      .then((r) => {\n        content = content.replace('{c}', r.code)\n        this.taskObject.modal({ type: 'centralLarge', title, content, event })\n      })\n    }\n  })\n}\n\nexport { awakenEnd } //eslint-disable-line\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/scenes/main/states/end.js","import BABYLON from 'experiment-babylon-js'\nimport {\n  Array, // eslint-disable-line\n  String, // eslint-disable-line\n  hasConstructor,\n  delay,\n} from 'experiment-js'\n\nimport { setMargins } from '../functions/globalFunctions'\n\n\nconst awakenPause = function () {\n  const stateManager = this.stateManager\n  const levelObject = stateManager.get('levelObject')\n  const GUI = stateManager.get('GUI')\n  const R = this.R\n  const state = this.state\n  const pauseTime = stateManager.timeInMs\n  const threshold = 30 * 1000\n  state.hitKeyTime = null\n  state.initialGuiVisible = GUI.levelVisible\n\n  GUI.backgroundFill = BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(0, 0, 0, 1))\n  GUI.levelVisible = true\n\n  const lastPauseInfo = stateManager.get('lastPauseInfo', { level: levelObject.level, time: pauseTime })\n  if (lastPauseInfo.level !== levelObject.level) {\n    stateManager.set('pauseTimeLeft', threshold)\n  }\n\n  const currentTimeLeft = stateManager.get('pauseTimeLeft', threshold)\n  stateManager.set('lastPauseInfo', { level: levelObject.level, time: pauseTime })\n\n  // datamanager get pause left\n  const options = { id: 'pauseText',\n    parent: GUI,\n    marginAlignment: 'h: center, v: center',\n    fontName: '30pt Arial',\n    fontSignedDistanceField: true,\n  }\n\n  state.timerText = function () {\n    const timeLeft = parseInt((currentTimeLeft - stateManager.timeInMs + pauseTime) / 1000, 10)\n    if (timeLeft < 0) { return false }\n    return R.get.timeLimitText.replace('{n}', String(timeLeft))\n  }\n\n  state.tic = function () {\n    state.centerText.levelVisible = true\n    const text = state.timerText()\n    if (text === false) {\n      stateManager.set('endReason', `You were idle for more than ${(threshold / 1000)} min during level ${levelObject.level}`)\n      stateManager.goToState(R.get.states_end)\n    } else {\n      state.centerText.text = text\n      delay(200).then(() => {\n        if (stateManager.currentStateKey === R.get.states_pause) { state.tic() }\n      })\n    }\n  }\n\n  if (!hasConstructor(BABYLON.Text2D, state.centerText)) {\n    state.topText = new BABYLON.Text2D(R.get.pauseText, options)\n    setMargins(state.topText, { topPixels: 0, bottomPixels: 40, leftPixels: 0, rightPixels: 0 })\n    state.centerText = new BABYLON.Text2D(state.timerText(), options)\n  } else {\n    state.topText.levelVisible = true\n    state.centerText.levelVisible = true\n    state.centerText.text = state.timerText\n  }\n\n\n  delay(200).then(() => {\n    if (stateManager.currentStateKey === R.get.states_pause) { state.tic() }\n  })\n}\n\nconst pauseKeyDown = function () {\n  const state = this.state\n  const stateManager = this.stateManager\n  const levelObject = stateManager.get('levelObject')\n  const R = this.R\n  const context = this\n\n  if (state.hitKeyTime === null) { state.hitKeyTime = stateManager.timeInMs }\n\n  state.timerText = function () {\n    const timeLeft = Math.ceil((3000 - stateManager.timeInMs + state.hitKeyTime) / 1000, 10)\n    if (timeLeft < 0) { return false }\n    return R.get.pauseRestart.replace('{n}', String(timeLeft))\n  }\n\n  state.tic = function () {\n    const text = state.timerText()\n    if (text !== false) {\n      state.centerText.text = text\n      delay(200).then(() => {\n        if (!document.hasFocus()) {\n          const lastPauseInfo = stateManager.get('lastPauseInfo', { level: levelObject.level, time: stateManager.timeInMs })\n          const previousTimeLeft = stateManager.get('pauseTimeLeft', 5 * 60 * 1000)\n          const currentTimeLeft = previousTimeLeft - stateManager.timeInMs + lastPauseInfo.time\n          stateManager.set('pauseTimeLeft', currentTimeLeft)\n          awakenPause.bind(context)()\n        } else if (stateManager.currentStateKey === R.get.states_pause) { state.tic() }\n      })\n    } else if (stateManager.frozenState) { stateManager.goToState(stateManager.frozenState) }\n  }\n\n  delay(200).then(() => {\n    if (!document.hasFocus()) {\n      awakenPause.bind(context)()\n    } else if (stateManager.currentStateKey === R.get.states_pause) { state.tic() }\n  })\n}\n\nconst endPause = function () {\n  const stateManager = this.stateManager\n  const state = this.state\n  const levelObject = stateManager.get('levelObject')\n  const GUI = stateManager.get('GUI')\n  const R = this.R\n\n  GUI.backgroundFill = BABYLON.Canvas2D.GetSolidColorBrush(new BABYLON.Color4(1, 1, 1, 0))\n  GUI.levelVisible = state.initialGuiVisible\n\n  state.hitKeyTime = null\n  state.topText.levelVisible = false\n  state.centerText.levelVisible = false\n\n  const lastPauseInfo = stateManager.get('lastPauseInfo', { level: levelObject.level, time: stateManager.timeInMs })\n  const previousTimeLeft = stateManager.get('pauseTimeLeft', 5 * 60 * 1000)\n  const currentTimeLeft = previousTimeLeft - stateManager.timeInMs + lastPauseInfo.time\n\n  if (currentTimeLeft < 0) {\n    stateManager.call('prematureEnd', { reason: R.get.prematureEndPauseAboveThreshold })\n  } else {\n    stateManager.set('pauseTimeLeft', currentTimeLeft)\n  }\n}\n\n\nexport { awakenPause, endPause, pauseKeyDown }\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/scenes/main/states/pause.js","import _ from 'lodash'\nimport BABYLON from 'experiment-babylon-js'\nimport {\n  EventData,\n  Array, // eslint-disable-line\n  String, // eslint-disable-line\n  Deferred,\n  delay,\n  mandatory,\n  debuglog,\n  debugWarn,\n  debugError,\n  sizeToVec,\n  hasConstructor,\n} from 'experiment-js'\n\n\nimport { sampleExponential } from '../../../utilities/taskUtilities'\n\n  /* --- State function --- */\n\nconst stateUnfrozen = function () {\n  if (_.has(this.state, 'currentTrialData.hasPaused')) {\n    this.state.currentTrialData.hasPaused = true\n  }\n}\n\nconst pauseTransition = function () {\n  const stateManager = this.stateManager\n  const state = this.state\n  const R = this.R\n  const level = stateManager.get('levelObject') ? stateManager.get('levelObject').level : ''\n\n  try {\n    const levelObject = stateManager.get('levelObject')\n    const sequenceObject = levelObject.sequenceObject\n    const positionData = stateManager.get('positionData')\n    const startTransitionTime = stateManager.timeInMs\n\n    stateManager.call('hideAll')\n    let text2d\n    if (level <= 3) {\n      this.taskObject.setCheckpoint(R.get.checkpoint_levelDone[level - 1])\n      const maxTransitionTime = 15 * 60 * 1000\n      const promise = stateManager.resolveOnKey()\n      let shouldtic = true\n\n      const transitionText = function () {\n        const timeLeft = Math.ceil((maxTransitionTime - stateManager.timeInMs + startTransitionTime) / 1000, 10)\n        if (timeLeft < 0) { return false }\n        return R.get.finishedLevelTransition.replace('{n}', String(timeLeft)).replace('{l}', level)\n      }\n\n      state.tic = function () {\n        if (!shouldtic) { return }\n        const text = transitionText()\n        if (text !== false) {\n          text2d.text = text\n          state.tooltipPause.box.levelVisible = true\n          delay(200).then(() => {\n            state.tooltipPause.box.levelVisible = false\n            state.tic()\n          })\n        } else {\n          stateManager.set('endReason', 'You were idle for more than 15 min')\n          stateManager.goToState(R.get.states_end)\n        }\n      }\n\n\n      const centerPosition = sizeToVec(this.taskObject.renderSize).scale(0.5)\n\n      state.tooltipPause = stateManager.tooltip({ position: centerPosition.add(new BABYLON.Vector2(0, (this.taskObject.renderSize.height / 2) - 100)), text: transitionText(), duration: promise })\n      text2d = state.tooltipPause.text\n      this.state.shouldPause = false\n      state.tic()\n\n      promise.then(() => {\n        shouldtic = false\n        stateManager.goToState(R.get.states_active)\n        // stateManager.newEvent(R.get.flags_levelDefined, null, { level: level + 1 }, ['globalLog', `stateRunningEventsLvl${level}`])\n      })\n    } else if ((level === 4) && (positionData.fullSequenceIndex >= sequenceObject.block.length - 1)) {\n      this.taskObject.setCheckpoint(R.get.checkpoint_levelDone[level - 1])\n      this.taskObject.setCheckpoint(R.get.checkpoint_taskDone).promise\n      .then(() => {\n        stateManager.goToState(R.get.states_end)\n      })\n    } else if (level === 4) {\n      const blockDone = sequenceObject.block[positionData.fullSequenceIndex - 1]\n      const startTransitionTime = stateManager.timeInMs\n      const maxTransitionTime = 5 * 60 * 1000\n      const promise = stateManager.resolveOnKey()\n      let shouldtic = true\n\n      const transitionText = function () {\n        const timeLeft = Math.ceil((maxTransitionTime - stateManager.timeInMs + startTransitionTime) / 1000, 10)\n        if (timeLeft < 0) { return false }\n        return R.get.finishedBlockTransition.replace('{n}', String(timeLeft)).replace('{b}', blockDone + 1)\n      }\n\n      state.tic = function () {\n        if (!shouldtic) { return }\n        const text = transitionText()\n        if (text !== false) {\n          text2d.text = text\n          state.tooltipPause.box.levelVisible = true\n          delay(200).then(() => {\n            state.tooltipPause.box.levelVisible = false\n            state.tic()\n          })\n        } else {\n          stateManager.set('endReason', 'You were idle for more than 5 min')\n          stateManager.goToState(R.get.states_end)\n        }\n      }\n\n\n      const centerPosition = sizeToVec(this.taskObject.renderSize).scale(0.5)\n\n      state.tooltipPause = stateManager.tooltip({ position: centerPosition.add(new BABYLON.Vector2(0, (this.taskObject.renderSize.height / 2) - 100)), text: transitionText(), duration: promise })\n      text2d = state.tooltipPause.text\n      this.state.shouldPause = false\n      state.tic()\n\n      promise.then(() => {\n        shouldtic = false\n        this.state.shouldPause = true\n        stateManager.call('showAll')\n        const nextTransitionTime = this.stateManager.timeInMs + 100\n        stateManager.newEvent(R.get.events_goNextPosition, nextTransitionTime, null, ['globalLog', `stateRunningEventsLvl${levelObject.level}`])\n      })\n    }\n  } catch (e) {\n    debugError('running.pauseTransition: error with the level data.')\n    stateManager.set('endReason', 'There was an error with the task. We are sorry.')\n    stateManager.goToState(R.get.states_end)\n  }\n}\n\nconst startRunning = function () {\n  if (typeof this.taskObject === 'undefined') {\n    throw new Error('state.startRunning: this.taskObject is undefined')\n  }\n\n  const stateManager = this.stateManager\n  const state = this.state\n  const R = stateManager.R\n\n  if (!document.hasFocus()) {\n    stateManager.newEvent(R.get.forcePause)\n  }\n\n  state.shouldPause = true\n  state.pausedBetween = []\n  const levelObject = stateManager.get('levelObject')\n  const elements2D = stateManager.get('elements2D')\n  stateManager.call('showAll')\n  elements2D.loader.value = 0\n\n    /* --- Setup state variables --- */\n  if (typeof state.data === 'undefined') {\n    state.data = []\n  }\n  state.numberOfMissed = 0\n  state.isPredicting = false\n\n\n    // TODO function that stores data from the states\n    // TODO function that transform state data into cwData\n\n    /* --- Store the data --- */\n\n\n  const centerPosition = sizeToVec(this.taskObject.renderSize).scale(0.5)\n  const promise = stateManager.resolveOnKey()\n  stateManager.tooltip({ position: centerPosition.add(new BABYLON.Vector2(0, (this.taskObject.renderSize.height / 2) - 100)), text: `You are about to start level ${levelObject.level}\\nHit a key to start`, duration: promise })\n\n  promise.then(() => {\n    // show the first position\n    const nextTransitionTime = this.stateManager.timeInMs + 100\n    const nextTransitionEvent = new EventData(R.get.events_goNextPosition, nextTransitionTime, {\n      belongsTo: [\n        'globalLog', `stateRunningEventsLvl${levelObject.level}`,\n      ],\n      handledAt: null,\n      storedAt: null,\n    })\n    stateManager.addTimeTriggerEvent(nextTransitionEvent)\n  })\n\n\n    // Wait after learning\n    // Start prediction\n    // Wait predictionDuration - look for valid click\n\n    /* --- Redraw tiles --- */\n\n  return ('state.startRunning: resolved')\n}\n\nconst goToNextPosition = function (event = {}) {\n  if (typeof this.state === 'undefined') {\n    throw new Error('state.goToNextPosition: state is undefined')\n  }\n  const stateManager = this.stateManager\n  const state = this.state\n  const R = stateManager.R\n  const levelObject = stateManager.get('levelObject')\n\n\n  /* --- Check the participant is doing the task and has valid connection --- */\n  if (!document.hasFocus()) {\n    stateManager.newEvent(R.get.events_windowBlur, null, null, [`stateRunningEventsLvl${levelObject.level}`])\n  }\n\n  let checkConnection = false\n  if (hasConstructor(Deferred, this.state.checkLastInteraction)) {\n    if (!this.state.checkLastInteraction.pending) {\n      this.state.checkLastInteraction = new Deferred()\n      checkConnection = true\n    }\n  } else {\n    this.state.checkLastInteraction = new Deferred()\n    checkConnection = true\n  }\n  if (checkConnection) {\n    stateManager.call('checkIdleAndConnection', { deferred: this.state.checkLastInteraction })\n  }\n\n  /* --- Setup next position --- */\n  const elements2D = stateManager.get('elements2D')\n  const sounds = stateManager.get('sounds')\n  const cross = elements2D.cross\n\n  const sequenceObject = levelObject.sequenceObject\n  const positionData = stateManager.get('positionData')\n\n  const souldPlaySound = levelObject.sound === true\n\n    // Check if the agent should animate to its new position\n  let moveFunction = 'moveAgentToTile'\n  if ((typeof event.data !== 'undefined') && (typeof event.data.data !== 'undefined') && (typeof event.data.data.animate !== 'undefined')) { // TODO think of an easier way to access this\n    moveFunction = event.data.data.animate ? 'animateAgentToTile' : 'moveAgentToTile'\n  }\n\n  /* --- Set index --- */\n  positionData.fullSequenceIndex += 1\n  const index = positionData.fullSequenceIndex\n\n  /* --- Check if end of level --- */\n  if (index >= sequenceObject.fullSequence.length) {\n    positionData.fullSequenceIndex -= 1\n      // go to endBlock -> pause - wait for next level to start\n    const nextTransitionEvent = new EventData(R.get.events_pauseTransition, stateManager.timeInMs, {\n      belongsTo: [\n        'globalLog', `stateRunningEventsLvl${levelObject.level}`,\n      ],\n      handledAt: null,\n      storedAt: null,\n    })\n    stateManager.addTimeTriggerEvent(nextTransitionEvent)\n    return ('goToNextPosition: resolved. End of sequence.')\n  } else if ((index > 0) && (sequenceObject.block[index - 1] !== sequenceObject.block[index]) && state.pausedBetween.indexOf(sequenceObject.block[index - 1]) === -1) {\n    /* --- End of block --- */\n    state.pausedBetween.push(sequenceObject.block[index - 1])\n      // go to endBlock -> pause - wait for next block to start\n    stateManager.newEvent(R.get.events_pauseTransition, null, null, ['globalLog', `stateRunningEventsLvl${levelObject.level}`])\n    return ('goToNextPosition: resolved. Changing block.')\n  }\n\n  let agentType = 'rabbit'\n  if ((levelObject.level !== 4) || (sequenceObject.blockType[index] === 'normal')) {\n        // either classic levels or a normal block == choose the wolf agent\n    agentType = 'wolf'\n  }\n\n  if (elements2D.agentType !== agentType) {\n    stateManager.promise('setAgent', { agent: agentType })\n  }\n\n    /* --- Check if data is set and if subject had not been idle  --- */\n  if (state.numberOfMissed >= 5) {\n    stateManager.newEvent(R.get.events_moreThanFiveNA, null, null, [`stateRunningEventsLvl${levelObject.level}`])\n  }\n      // setup the trialData for this specific trial\n  const trialData = {\n    level: levelObject.level,\n    fullSequenceIndex: index,\n    block: sequenceObject.block[index],\n    blockType: sequenceObject.blockType[index],\n    trial: sequenceObject.trial[index],\n    trialType: sequenceObject.trialType[index],\n    state: state.stateKey,\n    position: sequenceObject.fullSequence[index],\n    choice: null,\n    responseTime: null,\n    startObservation: null,\n    endObservation: null,\n    respondedAt: null,\n    startPrediction: null,\n    endPrediction: null,\n    nextPosition: null,\n    observedTransitionWasDominant: null,\n    keysHits: [],\n    clicks: [],\n    hasPaused: null,\n  }\n  state.data.push(trialData)\n\n  /* --- If currentTrialData is already set, send it to the dataManager to be stored before handling new position --- */\n  let dataToStore = state.currentTrialData\n  try {\n    if ((typeof state.currentTrialData !== 'undefined') && (stateManager.get('subject_id'))) {\n      const { level, block, blockType, trial, trialType, position, choice, responseTime, startObservation,\n      startPrediction, respondedAt, endPrediction, keysHits, hasPaused, clicks, endObservation } = state.currentTrialData\n\n      /* --- Check if the transition observed was dominant --- */\n      let dominant = null\n      if (levelObject.dominantStructure) {\n        if (!hasConstructor(String, levelObject.dominantStructure)) { levelObject.dominantStructure = String(levelObject.dominantStructure) }\n        dominant = 0\n        if (index - 2 >= 0 && sequenceObject.fullSequence[index - 2] && sequenceObject.fullSequence[index - 1]) {\n          const positionIndexInStructure = levelObject.dominantStructure.indexOf(sequenceObject.fullSequence[index - 2])\n          if (positionIndexInStructure !== -1) {\n            const nextIndex = positionIndexInStructure === 3 ? 0 : positionIndexInStructure + 1\n            if (levelObject.dominantStructure[nextIndex] === sequenceObject.fullSequence[index - 1]) {\n              dominant = 1\n            }\n          }\n        }\n      }\n\n\n      /* --- Store the data --- */\n      dataToStore = {\n        subject_id: stateManager.get('subject_id'),\n        level,\n        block,\n        block_type: blockType,\n        dominant_structure: levelObject.dominantStructure,\n        dominant_transition_probability: levelObject.dominantProbability,\n        trial,\n        trial_type: trialType,\n        position,\n        observation_duration: startPrediction ? (startPrediction - startObservation) : (this.timeInMs - startObservation),\n        observed_transition_was_dominant: dominant, // NA for first transition in a sublevel and after prediction\n        transition_to: sequenceObject.fullSequence[index], // NA for GO trials (non blackouts)\n        subject_choice: choice, // NA for NOGO\n        response_time: responseTime, // NA for NOGO or no response\n        correct: parseInt(sequenceObject.fullSequence[index], 10) === parseInt(choice, 10),\n        key_hits: JSON.stringify(keysHits), // ['key', 'time'], [k,t], ...\n        clicks: JSON.stringify(clicks),\n        has_paused: hasPaused,\n        start_observation: startObservation,\n        end_observation: endObservation,\n        start_prediction: startPrediction,\n        responded_at: respondedAt,\n        end_prediction: endPrediction,\n        belongsTo: ['cwData'],\n      }\n      stateManager.storeData(dataToStore)\n    }\n  } catch (e) {\n    const message = 'runningState.goToNextPosition: could not store cwData.'\n    debugError(message)\n    stateManager.storeInErrorLog({ message, timestamp: stateManager.timeInMs, data: dataToStore })\n    // TODO check that the stateManager will store it in the DB\n  }\n\n\n  // Change the currentTrialData to match new index\n  // keep the currentTrialData reference directly in the state\n  state.currentTrialData = trialData\n\n      // start from a new position - set the prediction phase to false\n  state.isPredicting = false\n\n      // set up a deferred object to return and catch promises resolution\n  const deferred = new Deferred()\n\n  elements2D.loader.value = 100 * positionData.fullSequenceIndex / sequenceObject.fullSequence.length\n\n\n  // Redraw tiles and move to next position\n  stateManager.call('drawTiles')\n  stateManager.call('setBlackScreen', { on: false })\n  cross.spriteFrame = R.get.cross_base\n  stateManager.call('drawTiles')\n  stateManager.promise(moveFunction, { tile: trialData.position - 1, opacity: 1 })\n  .then(() => {\n    if (souldPlaySound) { sounds.observation.play() }\n    trialData.startObservation = stateManager.timeInMs\n    stateManager.newEvent(R.get.events_endObservation, levelObject.observationDuration, null, [`stateRunningEventsLvl${levelObject.level}`])\n\n  /* --- Presentation will depends on the trial type --- */\n    if (trialData.trialType === 'classic') {\n    // Classic trials are a treated separately\n    // Each position is both a learning example and a feedback\n    // Wait observationDuration then start prediction\n      debugWarn(`classic trial: moved to ${trialData.position}`)\n      const startPredictionTime = levelObject.observationDuration + _.random(levelObject.minISIAfterLearning, levelObject.maxISIAfterLearning)\n      stateManager.newEvent(R.get.events_startPrediction, startPredictionTime, null, ['globalLog', `stateRunningEventsLvl${levelObject.level}`])\n    } else if (trialData.trialType === 'observation_prediction') {\n      debugWarn(`observation_prediction trial: moved to ${trialData.position}`)\n      // set the time until prediction phase\n      const observationTime = levelObject.observationDuration +\n            levelObject.fixedISIAfterObservation +\n            sampleExponential(levelObject.sampleMeanISIAfterObservation, 0, levelObject.maxSampleAfterObservation, levelObject.maxSampleAfterObservation)\n      debugWarn('Observation Time', (observationTime - stateManager.timeInMs) / 1000)\n\n      // create prediction event\n      stateManager.newEvent(R.get.events_startPrediction, parseInt(observationTime, 10), null, [`stateRunningEventsLvl${levelObject.level}`])\n    } else if (trialData.trialType === 'blackout') {\n      debugWarn(`Blackout trial: moved to ${trialData.position}`)\n\n      // set the time until prediction phase\n      const observationTime = levelObject.observationDuration +\n            levelObject.fixedISIAfterObservation +\n            sampleExponential(levelObject.sampleMeanISIAfterObservation, 0, levelObject.maxSampleAfterObservation, levelObject.maxSampleAfterObservation)\n\n      debugWarn('Observation Time', (observationTime) / 1000)\n\n      const blackoutTime = observationTime + levelObject.fixedBlackScreenDuration +\n            sampleExponential(levelObject.sampleMeanBlackScreen, 0, levelObject.maxSampleBlackScreen, levelObject.maxSampleBlackScreen)\n\n      // create prediction event\n      stateManager.newEvent(R.get.events_goNextPosition, blackoutTime, null, [`stateRunningEventsLvl${levelObject.level}`])\n      debugWarn('blackout Time', (blackoutTime) / 1000)\n    }\n\n    deferred.resolve('stateManager.goToNextPosition: resolved')\n  })\n\n  return deferred.promise\n}\n\nconst endObservation = function () {\n  this.state.currentTrialData.endObservation = this.stateManager.timeInMs\n  this.stateManager.call('setAgentOpacity', { opacity: 0 })\n  return 'endObservation resolved'\n}\n\nconst startPrediction = function () {\n  if (typeof this.state.currentTrialData === 'undefined') {\n    throw new Error('state.startPrediction: state.currentTrialData is undefined')\n  }\n\n  const state = this.state\n  const stateManager = this.stateManager\n  const R = stateManager.R\n\n  state.numberOfMissed += 1\n\n  const levelObject = stateManager.get('levelObject')\n  stateManager.promise('setAgentOpacity', { opacity: R.get.agent_predictionOpacity })\n\n  stateManager.call('drawPredictionTiles')\n\n  const cross = this.stateManager.get('elements2D').cross\n  cross.spriteFrame = R.get.cross_predict\n  if (levelObject.sound === true) { this.stateManager.get('sounds').prediction.play() }\n\n  state.isPredicting = true\n  state.currentTrialData.startPrediction = stateManager.timeInMs\n  const endResponse = levelObject.predictionDuration\n\n  this.stateManager.newEvent(R.get.events_responseTimeEnded, endResponse, null, [`stateRunningEventsLvl${levelObject.level}`])\n}\n\nconst endPrediction = function () {\n  if (typeof this.state.currentTrialData === 'undefined') {\n    throw new Error('state.startPrediction: currentTrialData is undefined')\n  }\n\n  const stateManager = this.stateManager\n  const state = this.state\n  const R = stateManager.R\n\n  const levelObject = stateManager.get('levelObject')\n  const cross = this.stateManager.get('elements2D').cross\n\n    /* --- End prediction - store data --- */\n\n  state.isPredicting = false\n  if (levelObject.level === 4) {\n      // fMRI levels\n    state.currentTrialData.endPrediction = stateManager.timeInMs\n    if (this.state.currentTrialData.choice !== null) {\n      cross.spriteFrame = R.get.crossLockByPosition[this.state.currentTrialData.choice - 1]\n    } else {\n      cross.spriteFrame = R.get.cross_base\n    }\n    const endPrediction = levelObject.fixedISIAfterPrediction +\n        sampleExponential(levelObject.sampleMeanISIAfterPrediction, null, levelObject.maxSampleAfterPrediction, levelObject.maxSampleAfterPrediction)\n\n    this.stateManager.newEvent(R.get.events_goNextPosition, endPrediction, null, [`stateRunningEventsLvl${levelObject.level}`])\n  } else {\n      // classic levels\n    state.currentTrialData.endPrediction = stateManager.timeInMs\n    this.stateManager.newEvent(R.get.events_goNextPosition, null, null, [`stateRunningEventsLvl${levelObject.level}`])\n  }\n\n  return 'state.endPrediction: resolved'\n}\n\nconst checkForClickPrediction = function (event = mandatory()) {\n  try {\n    if (typeof this.taskObject === 'undefined') {\n      throw new Error('state.checkForClickPrediction: this.taskObject is undefined')\n    }\n\n      // todo with click detection Canvas2D\n    if (typeof event.data.clientY === 'undefined') {\n      throw new Error('state.checkForClickPrediction: event.data.clientY is undefined.')\n    }\n\n    if (typeof this.state.currentTrialData === 'undefined') {\n      throw new Error('state.checkForClickPrediction: options.trialData is undefined')\n    }\n\n    const stateManager = this.stateManager\n    const state = this.state\n\n    state.currentTrialData.clicks.push([event.data.engineX, event.data.engineY, stateManager.timeInMs])\n  } catch (e) {\n    debugError(e)\n  }\n  return 'checkForClickPrediction resolved'\n}\n\nconst checkKeyStrokeForPrediction = function (event = mandatory()) {\n  try {\n    if (typeof this.taskObject === 'undefined') {\n      throw new Error('state.checkKeyStrokeForPrediction: this.taskObject is undefined')\n    }\n\n    if (typeof event.data.keyCode === 'undefined') {\n      throw new Error('state.startPrediction: event.data.keyCode is undefined')\n    }\n\n    if (typeof this.state.currentTrialData === 'undefined') {\n      throw new Error('state.startPrediction: state.currentTrialData is undefined')\n    }\n\n    const stateManager = this.stateManager\n    const state = this.state\n    const R = this.R\n\n    const levelObject = stateManager.get('levelObject')\n\n    const keyCode = event.data.keyCode\n    const key = event.data.key\n\n    if (_.has(state, 'currentTrialData.keysHits')) {\n      if (!hasConstructor(Array, state.currentTrialData.keysHits)) {\n        state.currentTrialData.keysHits = []\n      }\n\n      state.currentTrialData.keysHits.push([key, keyCode, stateManager.timeInMs])\n    }\n\n    const keys = {\n      m: [77, 3, R.get.cross_bottomRight],\n      d: [68, 1, R.get.cross_topLeft],\n      c: [67, 4, R.get.cross_bottomLeft],\n      k: [75, 2, R.get.cross_topRight],\n    }\n\n      /* --- Check if the subjects click was during the prediction phase and that he did not already chose  --- */\n\n    if ((state.isPredicting === true) && (state.currentTrialData.startPrediction !== null) && (state.currentTrialData.choice === null)) {\n      let position = null\n      let cross = 1\n      _.forEach(keys, (keyPosition) => {\n        if (keyCode === keyPosition[0]) {\n          position = keyPosition[1]\n          cross = keyPosition[2]\n        }\n      })\n        /* --- If the key was one of the specified store the corresponding position, responseTime and choice --- */\n\n      if (position !== null) {\n          // Store the choice of the subject and responseTime\n\n        state.currentTrialData.choice = position\n        state.currentTrialData.responseTime = stateManager.timeInMs - state.currentTrialData.startPrediction\n        state.currentTrialData.respondedAt = stateManager.timeInMs\n\n        this.stateManager.get('elements2D').cross.spriteFrame = cross\n        stateManager.call('highlightPosition', {\n          position: position - 1,\n        })\n\n          // reset the number of missed trials\n        state.numberOfMissed = 0\n\n        stateManager.newEvent(R.get.events_hasResponded, null, null, [`stateRunningEventsLvl${levelObject.level}`])\n\n        debuglog(`state.checkKeyStrokeForPrediction: has chosen position ${position}.`)\n        return position\n      }\n      debuglog('state.checkKeyStrokeForPrediction: key did not correspond to state selection keys.')\n      return false\n    }\n    debuglog('state.checkKeyStrokeForPrediction: already chosen')\n    return false\n  } catch (e) {\n    debugError(e)\n    return false\n  }\n}\n\nconst playSound = function (event) {\n  const sounds = this.stateManager.getGlobal('sounds')\n  sounds[event.data.name].play()\n}\n\nexport {\n  stateUnfrozen,\n  startRunning,\n  goToNextPosition,\n  startPrediction,\n  checkForClickPrediction,\n  checkKeyStrokeForPrediction,\n  endPrediction,\n  playSound,\n  endObservation,\n  pauseTransition,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/scenes/main/states/running.js","import _ from 'lodash'\nimport BABYLON from 'experiment-babylon-js'\nimport {\n  EventData,\n  Array, // eslint-disable-line\n  String, // eslint-disable-line\n  Deferred,\n  delay,\n  mandatory,\n  debuglog,\n  hasConstructor,\n  rep,\n  sizeToVec,\n  debugError,\n  debugWarn,\n} from 'experiment-js'\n\nimport { tutorials } from './tutorial'\nimport { getFullSequenceObjectForClassicLevels, sampleExponential } from '../../../utilities/taskUtilities'\n\n\nconst awakeTryout = function () {\n  const taskObject = this.taskObject\n  const state = this.state\n  const currentTutorial = this.stateManager.get('currentTutorial', 1)\n  const stateManager = this.stateManager\n  const elements2D = stateManager.get('elements2D')\n  const R = this.R\n\n  elements2D.loader.value = 0\n  stateManager.call('showAll')\n\n  state.data = state.data || []\n  state.isPredicting = false\n  state.index = -1\n  stateManager.setGlobal('level', `tryout-${currentTutorial}`)\n\n  // Test list\n  state.tests = {\n    wolfFirstAppears: {\n      title: 'Four possible positions',\n      message: 'The wolf may appear at any of the four position on the screen.',\n      passed: false,\n    },\n    wolfHasAppeared: {\n      title: 'Predict wolf\\'s next position',\n      message: `The wolf has appeared on the top left position. With the keyboard keys predict its next position.<br>\n      D for top left, C for bottom left, K for top right, and M for bottom right.`,\n      passed: false,\n    },\n    predictionTest: {\n      title: 'Prediction phase',\n      message: 'Predict the next position of the wolf {n}/3.',\n      passed: false,\n      numberOfPrediction: 0,\n    },\n    realTimeTest: {\n      title: 'Now try with the real timing',\n      message: 'Congratulations ! Now that you got the gist of it, you will have to predict as fast as possible.',\n      passed: false,\n    },\n    rabbitFirstAppear: {\n      title: 'Predict the next position of the Rabbit',\n      message: 'Use the keyboard to predict the next position of the rabbit.',\n      passed: false,\n    },\n    rabbitFirstDisapear: {\n      title: R.get.rabbitFirstDisapearTitle,\n      message: R.get.rabbitFirstDisapearMessage,\n      passed: false,\n    },\n    wolfFmriFirstAppear: {\n      title: R.get.wolfFmriFirstAppearTitle,\n      message: R.get.wolfFmriFirstAppearMessage,\n      passed: false,\n    },\n    blackoutFirstAppear: {\n      title: R.get.blackoutFirstAppearTitle,\n      message: R.get.blackoutFirstAppearMessage,\n      passed: false,\n    },\n  }\n\n  state.hasPassedAllTest = function () {\n    for (const key in state.tests) {\n      if (state.tests.hasOwnProperty(key)) {\n        const test = state.tests[key]\n        if (!test.passed) { return false }\n      }\n    }\n    return true\n  }\n\n\n  if (currentTutorial === 1) {\n    // set classic sequence object with 10 transition\n    state.sequenceObject = getFullSequenceObjectForClassicLevels([1, 3, 4, 2, 1, 3, 4, 2, 1, 3, 2, 4, 2, 1, 3])\n    stateManager.setGlobal('levelObject', this.taskObject.parameters.levels[0])\n  } else {\n    // set fMRI sequence object with 5 transition wolf and 5 transition rabbit\n    state.sequenceObject = {\n      fullSequence: [1, 2, 1, 3, 4, 2, 1, 3, 4, 3],\n      trial: _.range(1, 10),\n      trialType: rep(['observation_prediction', 'blackout'], 5),\n      block: rep(1, 5).concat(rep(2, 5)),\n      blockType: rep('random', 5).concat(rep('normal', 5)),\n    }\n    stateManager.setGlobal('levelObject', taskObject.parameters.levels[3])\n  }\n\n  this.stateManager.newEvent(this.R.get.events_goNextPosition, null, null, [`stateTryout${currentTutorial}`])\n}\n\nconst tryoutGoToNextPosition = function () {\n  // TODO experiment-boxes penser a faire dans un tooltip tool qui permet de focus sur un element et fait un modal en dessous pour expliquer\n\n  const stateManager = this.stateManager\n  const state = this.state\n  state.index += 1\n\n  const elements2D = stateManager.get('elements2D')\n  const levelObject = stateManager.get('levelObject')\n  const cross = elements2D.cross\n  const R = this.R\n\n  const currentTutorial = stateManager.get('currentTutorial', 1)\n  const index = state.index\n  const sequenceObject = state.sequenceObject\n\n  stateManager.hideTooltip()\n\n  const ntransition = sequenceObject.fullSequence.length\n  // Check if finished\n  if (index > ntransition - 1) {\n    // show finished tryout\n    stateManager.call('hideAll')\n\n    if (currentTutorial === 1) {\n      const event = new EventData(this.R.get.flags_levelDefined, stateManager.timeInMs, { level: 1 })\n      this.taskObject.modal({ title: tutorials.askContinue.title.en, content: tutorials.askContinue.content.en, event })\n    } else {\n      const event = new EventData(this.R.get.flags_levelDefined, stateManager.timeInMs, { level: 4 })\n      this.taskObject.modal({ title: tutorials.askfMRIContinue.title.en, content: tutorials.askfMRIContinue.content.en, event })\n    }\n\n    return 'state.tryoutGoToNextPosition: finished tryout'\n  }\n\n  elements2D.loader.value = 100 * index / ntransition\n\n\n  let lastChoice = null\n  if ((typeof state.currentTrialData === 'object') && (typeof state.currentTrialData.choice === 'number')) {\n    lastChoice = parseInt(state.currentTrialData.choice, 10)\n  }\n\n  // setup the trialData for this specific trial\n  const trialData = {\n    level: levelObject.level,\n    fullSequenceIndex: index,\n    block: sequenceObject.block[index],\n    blockType: sequenceObject.blockType[index],\n    trial: sequenceObject.trial[index],\n    trialType: sequenceObject.trialType[index],\n    state: state.stateKey,\n    position: sequenceObject.fullSequence[index],\n    choice: null,\n    responseTime: null,\n    startObservation: null,\n    endObservation: null,\n    respondedAt: null,\n    startPrediction: null,\n    endPrediction: null,\n    nextPosition: null,\n    observedTransitionWasDominant: null,\n    keysHits: [],\n    clicks: [],\n    hasPaused: null,\n  }\n  state.data.push(trialData)\n\n  /* --- If currentTrialData is already set, send it to the dataManager to be stored before handling new position --- */\n  let dataToStore = state.currentTrialData\n  try {\n    if ((typeof state.currentTrialData !== 'undefined') && (stateManager.get('subject_id'))) {\n      const { block, blockType, trial, trialType, position, choice, responseTime, startObservation,\n      startPrediction, respondedAt, endPrediction, keysHits, hasPaused, clicks, endObservation } = state.currentTrialData\n\n      /* --- Check if the transition observed was dominant --- */\n      const dominant = null\n\n\n      /* --- Store the data --- */\n      dataToStore = {\n        subject_id: stateManager.get('subject_id'),\n        level: currentTutorial,\n        block,\n        block_type: blockType,\n        dominant_structure: levelObject.dominantStructure,\n        dominant_transition_probability: levelObject.dominantProbability,\n        trial,\n        trial_type: trialType,\n        position,\n        observation_duration: startPrediction ? (startPrediction - startObservation) : (this.timeInMs - startObservation),\n        observed_transition_was_dominant: dominant, // NA for first transition in a sublevel and after prediction\n        transition_to: sequenceObject.fullSequence[index], // NA for GO trials (non blackouts)\n        subject_choice: choice, // NA for NOGO\n        response_time: responseTime, // NA for NOGO or no response\n        correct: parseInt(sequenceObject.fullSequence[index], 10) === parseInt(choice, 10),\n        key_hits: JSON.stringify(keysHits), // ['key', 'time'], [k,t], ...\n        clicks: JSON.stringify(clicks),\n        has_paused: hasPaused,\n        start_observation: startObservation,\n        end_observation: endObservation,\n        start_prediction: startPrediction,\n        responded_at: respondedAt,\n        end_prediction: endPrediction,\n        belongsTo: ['tryoutData'],\n      }\n      stateManager.storeData(dataToStore)\n    }\n  } catch (e) {\n    const message = 'runningState.goToNextPosition: could not store cwData.'\n    debugError(message)\n    stateManager.storeInErrorLog({ message, timestamp: stateManager.timeInMs, data: dataToStore })\n    // TODO check that the stateManager will store it in the DB\n  }\n\n    // keep the currentTrialData reference directly in the state\n  state.currentTrialData = trialData\n\n    // start from a new position - set the prediction phase to false\n  state.isPredicting = false\n\n  // set up a deferred object to return and catch promises resolution\n  // const deferred = new Deferred()\n\n  let agentType = 'wolf'\n  if (sequenceObject.blockType[index] === 'random') { agentType = 'rabbit' }\n  if (elements2D.agentType !== agentType) {\n    stateManager.call('setAgent', { agent: agentType })\n  }\n\n  cross.spriteFrame = this.R.get.cross_base\n  stateManager.call('drawTiles', { withKeys: false })\n  stateManager.call('moveAgentToTile', { tile: trialData.position - 1, opacity: 1 })\n  let promise = Promise.resolve()\n  if ((currentTutorial === 1) && (!state.tests.wolfFirstAppears.passed)) {\n    promise = this.taskObject.modal({ title: state.tests.wolfFirstAppears.title, content: state.tests.wolfFirstAppears.message })\n    state.tests.wolfFirstAppears.passed = true\n  } else if ((currentTutorial === 2) && (!state.tests.rabbitFirstAppear.passed)) {\n    promise = this.taskObject.modal({ title: state.tests.rabbitFirstAppear.title, content: state.tests.rabbitFirstAppear.message })\n    state.tests.rabbitFirstAppear.passed = true\n  } else if ((currentTutorial === 2) && (sequenceObject.trialType[index - 1] === 'blackout') && (!state.tests.blackoutFirstAppear.passed)) {\n    promise = this.taskObject.modal({ title: state.tests.blackoutFirstAppear.title, content: state.tests.blackoutFirstAppear.message })\n    state.tests.blackoutFirstAppear.passed = true\n  } else if ((currentTutorial === 2) && (sequenceObject.blockType[index] === 'normal') && (!state.tests.wolfFmriFirstAppear.passed)) {\n    promise = this.taskObject.modal({ title: state.tests.wolfFmriFirstAppear.title, content: state.tests.wolfFmriFirstAppear.message })\n    state.tests.wolfFmriFirstAppear.passed = true\n  }\n\n  promise.then(() => {\n    trialData.startObservation = stateManager.timeInMs\n\n    let promise = Promise.resolve()\n\n    const centerPosition = sizeToVec(this.taskObject.renderSize).scale(0.5)\n\n    if ((index !== 0) && (sequenceObject.trialType[index - 1] !== 'blackout') && (sequenceObject.blockType[index - 1] === sequenceObject.blockType[index])) {\n      if (lastChoice === sequenceObject.fullSequence[index]) {\n         // Correct\n        const background = new BABYLON.Color4(0.1, 0.7, 0.1, 0.9)\n        let text = 'Correct!'\n        let duration = 2000\n        if ((currentTutorial === 1) && (!state.tests.predictionTest.passed)) {\n          text += '\\nHit a key to continue'\n          promise = stateManager.resolveOnKey()\n          duration = promise\n        }\n\n\n        let position = centerPosition\n        const tilePosition = stateManager.call('getTilePositions')[lastChoice - 1]\n        position = tilePosition\n        stateManager.tooltip({ position, background, text, duration })\n      } else {\n           // Incorrect\n        const background = new BABYLON.Color4(0.7, 0.1, 0.1, 0.9)\n\n        let position = centerPosition // TODO this.taskObject.center\n        if (hasConstructor(Number, lastChoice)) {\n          const tilePosition = stateManager.call('getTilePositions')[lastChoice - 1]\n               // const sign = Math.sign(position.subtract(tilePosition).x)\n          position = tilePosition\n        }\n\n        let text = 'Incorrect!'\n        let duration = 2000\n        if ((currentTutorial === 1) && (!state.tests.predictionTest.passed)) {\n          text += '\\nHit a key to continue'\n          promise = stateManager.resolveOnKey()\n          duration = promise\n        }\n\n        stateManager.tooltip({ position, background, text, duration })\n      }\n    }\n\n\n    if (currentTutorial === 1 && state.tests.predictionTest.passed && state.tests.predictionTest.numberOfPrediction >= 3) {\n      state.tests.predictionTest.passed = true\n      promise = stateManager.resolveOnKey()\n      stateManager.tooltip({ position: centerPosition.add(new BABYLON.Vector2(0, centerPosition.y - 100)), text: `${state.tests.realTimeTest.message}\\nHit a key to continue`, duration: promise })\n    }\n\n    return promise\n  })\n  .then(() => {\n    trialData.startObservation = stateManager.timeInMs\n    stateManager.newEvent(R.get.events_endObservation, levelObject.observationDuration, null, [`stateRunningEventsLvl${levelObject.level}`])\n\n    if (currentTutorial === 1) {\n      const nextTransitionTime = trialData.startObservation + levelObject.observationDuration + _.random(levelObject.minISIAfterLearning, levelObject.maxISIAfterLearning)\n      stateManager.newEvent(this.R.get.events_startPrediction, nextTransitionTime, null, [`stateTryout${currentTutorial}`])\n    } else if (sequenceObject.trialType[index] === 'blackout') {\n      const observationTime = levelObject.observationDuration +\n            levelObject.fixedISIAfterObservation +\n            sampleExponential(levelObject.sampleMeanISIAfterObservation, 0, levelObject.maxSampleAfterObservation, levelObject.maxSampleAfterObservation)\n\n      // add a blackout delay\n      delay(observationTime).then(() => {\n        stateManager.newEvent(R.get.events_screenWentBlack, null, [`stateRunningEventsLvl${levelObject.level}`])\n        stateManager.call('setAgentOpacity', { opacity: 0 })\n      })\n\n\n      const blackoutTime = observationTime + levelObject.fixedBlackScreenDuration +\n            sampleExponential(levelObject.sampleMeanBlackScreen, 0, levelObject.maxSampleBlackScreen, levelObject.maxSampleBlackScreen)\n\n          // create prediction event\n      stateManager.newEvent(R.get.events_goNextPosition, blackoutTime, null, [`stateRunningEventsLvl${levelObject.level}`])\n    } else if (sequenceObject.trialType[index] === 'observation_prediction') {\n      let observationTime = stateManager.timeInMs + levelObject.observationDuration + levelObject.fixedISIAfterObservation\n      observationTime += sampleExponential(levelObject.sampleMeanISIAfterObservation, 0, levelObject.maxSampleAfterObservation, levelObject.maxSampleAfterObservation)\n\n      debugWarn('Observation Time', (observationTime - stateManager.timeInMs) / 1000)\n          // create prediction event\n      stateManager.newEvent(R.get.events_startPrediction, observationTime, [`stateRunningEventsLvl${levelObject.level}`])\n    } else {\n      debugError('Error in sequence', sequenceObject)\n    }\n  })\n\n  return 'tryoutGoToNextPosition: finish sync call'\n}\n\nconst tryoutStartPrediction = function () {\n  const state = this.state\n  const stateManager = this.stateManager\n  const R = stateManager.R\n\n  const currentTutorial = stateManager.get('currentTutorial', 1)\n\n  const levelObject = stateManager.get('levelObject')\n  stateManager.promise('setAgentOpacity', { opacity: R.get.agent_predictionOpacity })\n\n  const cross = stateManager.get('elements2D').cross\n  cross.spriteFrame = R.get.cross_predict\n\n  const centerPosition = sizeToVec(this.taskObject.renderSize).scale(0.5)\n\n  const npred = state.tests.predictionTest.numberOfPrediction\n\n  let promise = Promise.resolve()\n  if ((currentTutorial === 1) && (!state.tests.predictionTest.passed)) {\n    stateManager.call('drawPredictionTiles', { withKeys: 'dkmc' })\n    promise = stateManager.resolveOnKey()\n    stateManager.tooltip({\n      position: centerPosition.add(new BABYLON.Vector2(0, centerPosition.y - 100)),\n      text: `${state.tests.predictionTest.message.replace('{n}', npred + 1)}\\n${R.get.hitAKeyToContinue}`,\n      duration: promise,\n      event: new EventData('predictionTextDismissed'),\n    })\n\n    const text = R.get.changeCenterSquare\n    stateManager.tooltip({ position: centerPosition.add(new BABYLON.Vector2(0, -50)), text, duration: promise })\n  } else {\n    stateManager.call('drawPredictionTiles')\n  }\n\n  promise.then(() => {\n    state.isPredicting = true\n    state.currentTrialData.startPrediction = stateManager.timeInMs\n\n    if ((currentTutorial === 1) && (!state.tests.predictionTest.passed)) {\n      const background = null // new BABYLON.Color4(0.6, 100 / 255, 0, 0.9)\n      const choiceDeferred = new Deferred()\n      state.choiceDeferred = choiceDeferred\n\n      const text = R.get.chooseNextPosition\n      stateManager.tooltip({ position: centerPosition, background, text, duration: choiceDeferred.promise })\n      choiceDeferred.promise.then(() => {\n        stateManager.newEvent(R.get.events_responseTimeEnded, stateManager.timeInMs + levelObject.predictionDuration, null, [`stateTryout${currentTutorial}`])\n      })\n    } else if (currentTutorial === 1) {\n      stateManager.newEvent(R.get.events_responseTimeEnded, stateManager.timeInMs + levelObject.predictionDuration, null, [`stateTryout${currentTutorial}`])\n    } else {\n      stateManager.call('setAgentOpacity', { opacity: 0 })\n      const endResponse = levelObject.predictionDuration\n      delay(endResponse).then(() => {\n        this.state.isPredicting = false\n        if (this.state.currentTrialData.choice !== null) {\n          cross.spriteFrame = R.get.crossLockByPosition[this.state.currentTrialData.choice - 1]\n        } else {\n          cross.spriteFrame = R.get.cross_base\n        }\n      })\n      const endPrediction = endResponse + levelObject.fixedISIAfterPrediction +\n          sampleExponential(levelObject.sampleMeanISIAfterPrediction, null, levelObject.maxSampleAfterPrediction, levelObject.maxSampleAfterPrediction)\n\n      this.stateManager.newEvent(R.get.events_goNextPosition, endPrediction, null, [`stateTryout${currentTutorial}`])\n    }\n  })\n}\n\nconst tryoutCheckKeyStrokeForPrediction = function (event = mandatory()) {\n  if (typeof event.data.keyCode === 'undefined') {\n    throw new Error('state.checkKeyStrokeForPrediction: event.data.keyCode is undefined')\n  }\n\n\n  const stateManager = this.stateManager\n  const state = this.state\n  const R = this.R\n\n  const currentTutorial = stateManager.get('currentTutorial', 1)\n\n\n  const keyCode = event.data.keyCode\n  const key = event.data.key\n  const keys = {\n    m: [77, 3, R.get.cross_bottomRight],\n    d: [68, 1, R.get.cross_topLeft],\n    c: [67, 4, R.get.cross_bottomLeft],\n    k: [75, 2, R.get.cross_topRight],\n  }\n\n  if (_.has(state, 'currentTrialData.keysHits')) {\n    if (!hasConstructor(Array, state.currentTrialData.keysHits)) {\n      state.currentTrialData.keysHits = []\n    }\n\n    state.currentTrialData.keysHits.push([key, keyCode, stateManager.timeInMs])\n  }\n\n  /* --- Check if the subjects hit was during the prediction phase and that he did not already chose  --- */\n\n  if ((state.isPredicting === true) && (state.currentTrialData.startPrediction !== null) && (state.currentTrialData.choice === null)) {\n    let position = null\n    let cross = 1\n    let chosenKey = null\n    for (const key in keys) {\n      if (keys.hasOwnProperty(key)) {\n        const keyPosition = keys[key]\n        if (keyCode === keyPosition[0]) {\n          position = keyPosition[1]\n          cross = keyPosition[2]\n          chosenKey = key\n        }\n      }\n    }\n    /* --- If the key was one of the specified store the corresponding position, responseTime and choice --- */\n\n    if (position !== null) {\n      // Store the choice of the subject and responseTime\n      if (hasConstructor(Deferred, state.choiceDeferred)) {\n        state.choiceDeferred.resolve()\n        state.choiceDeferred = null\n      }\n\n      state.currentTrialData.choice = position\n      state.currentTrialData.responseTime = stateManager.timeInMs - state.currentTrialData.startPrediction\n      state.currentTrialData.respondedAt = stateManager.timeInMs\n\n      this.stateManager.get('elements2D').cross.spriteFrame = cross\n      if (!state.tests.predictionTest.passed) {\n        state.tests.predictionTest.numberOfPrediction += 1\n\n        const centerPosition = sizeToVec(this.taskObject.renderSize).scale(0.5)\n        let tilePosition = stateManager.call('getTilePositions')[position - 1]\n        const sign = Math.sign(centerPosition.subtract(tilePosition).x)\n        tilePosition = tilePosition.add(new BABYLON.Vector2(sign * 50, sign * 50))\n        stateManager.tooltip({ position: tilePosition, text: `${R.get.youSelectedThisTile} (${chosenKey})`, duration: delay(2000) })\n        const text = R.get.aLittleSquareShowsYourChoice\n        stateManager.tooltip({ position: centerPosition.add(new BABYLON.Vector2(0, -50)), text, duration: 2000 })\n      }\n\n      // reset the number of missed trials\n      state.numberOfMissed = 0\n\n\n      stateManager.newEvent(R.get.events_hasResponded, null, null, [`stateTryout${currentTutorial}`])\n      debuglog(`state.checkKeyStrokeForPrediction: has chosen position ${position}.`)\n      return position\n    }\n    debuglog('state.checkKeyStrokeForPrediction: key did not correspond to state selection keys.')\n    return false\n  }\n  debuglog('state.checkKeyStrokeForPrediction: not a valid time to choose or already chosen')\n  return false\n}\n\nconst tryoutEndPrediction = function () {\n  const stateManager = this.stateManager\n  const state = this.state\n  const R = this.R\n\n  const currentTutorial = stateManager.get('currentTutorial', 1)\n\n  /* --- End prediction - store data --- */\n  state.isPredicting = false\n  state.currentTrialData.endPrediction = stateManager.timeInMs\n\n  stateManager.newEvent(R.get.events_goNextPosition, null, null, [`stateTryout${currentTutorial}`])\n  return ('state.endPrediction: resolved')\n}\n\n\nconst tryoutEnd = function () {\n  const stateManager = this.stateManager\n  const R = this.R\n\n  const currentTutorial = stateManager.get('currentTutorial', 1)\n  this.taskObject.setCheckpoint(R.get.checkpoint_tutorialDone[currentTutorial - 1])\n}\n\nexport {\n  awakeTryout,\n  tryoutEndPrediction,\n  tryoutCheckKeyStrokeForPrediction,\n  tryoutGoToNextPosition,\n  tryoutStartPrediction,\n  tryoutEnd,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/task/scenes/main/states/tryout.js","module.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"experiment-boxes\",\"commonjs2\":\"experiment-boxes\",\"amd\":\"experiment-boxes\",\"root\":\"experimentBoxes\"}\n// module id = 14\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"experiment-mathjs\",\"commonjs2\":\"experiment-mathjs\",\"amd\":\"experiment-mathjs\",\"root\":\"math\"}\n// module id = 15\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"jQuery\",\"commonjs2\":\"jQuery\",\"amd\":\"jQuery\",\"root\":\"jQuery\"}\n// module id = 16\n// module chunks = 0"],"sourceRoot":""}